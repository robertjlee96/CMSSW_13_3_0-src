# /dev/CMSSW_13_3_0/GRun/V11 (CMSSW_13_3_0)

import FWCore.ParameterSet.Config as cms

from HeterogeneousCore.CUDACore.SwitchProducerCUDA import SwitchProducerCUDA
from HeterogeneousCore.CUDACore.ProcessAcceleratorCUDA import ProcessAcceleratorCUDA

process = cms.Process( "HLT" )

process.ProcessAcceleratorCUDA = ProcessAcceleratorCUDA()

process.HLTConfigVersion = cms.PSet(
  tableName = cms.string('/dev/CMSSW_13_3_0/GRun/V11')
)

process.HLTIter0PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter4PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter4PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPvClusterComparerForIT = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 1.0 )
)
process.HLTPSetMuonCkfTrajectoryBuilder = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  ComponentType = cms.string( "MuonCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( False ),
  deltaPhi = cms.double( -1.0 ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0HighPtTkMuPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPvClusterComparerForBTag = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 0.1 )
)
process.HLTIter2GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutTight = cms.PSet(  value = cms.double( 1945.0 ) )
process.HLTPSetMuonTrackingRegionBuilder8356 = cms.PSet( 
  Rescale_Dz = cms.double( 3.0 ),
  Pt_fixed = cms.bool( False ),
  Eta_fixed = cms.bool( False ),
  Eta_min = cms.double( 0.1 ),
  DeltaZ = cms.double( 15.9 ),
  maxRegions = cms.int32( 2 ),
  EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
  UseVertex = cms.bool( False ),
  Z_fixed = cms.bool( True ),
  PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
  PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
  Rescale_phi = cms.double( 3.0 ),
  DeltaEta = cms.double( 0.2 ),
  precise = cms.bool( True ),
  OnDemand = cms.int32( -1 ),
  EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
  MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
  vertexCollection = cms.InputTag( "pixelVertices" ),
  Pt_min = cms.double( 1.5 ),
  beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
  Phi_fixed = cms.bool( False ),
  DeltaR = cms.double( 0.2 ),
  input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
  DeltaPhi = cms.double( 0.2 ),
  Phi_min = cms.double( 0.1 ),
  Rescale_eta = cms.double( 3.0 )
)
process.HLTIter2PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetMuTrackJpsiTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetTrajectoryBuilderForGsfElectrons = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 90.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "hltESPBwdElectronPropagator" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryFilterForElectrons" ) ),
  propagatorAlong = cms.string( "hltESPFwdElectronPropagator" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutNone = cms.PSet(  value = cms.double( -1.0 ) )
process.HLTPSetMuonCkfTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter1PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSeedFromProtoTracks = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
process.HLTIter2PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetMuTrackJpsiTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 10.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 8 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSeedFromConsecutiveHitsCreator = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterial" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
process.HLTIter1PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutForHI = cms.PSet(  value = cms.double( 2069.0 ) )
process.HLTPSetTrajectoryFilterForElectrons = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( -1 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0HighPtTkMuPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter1GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) )
)
process.HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter2IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( False ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT" ) )
)
process.HLTIter2IterL3MuonPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter2IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( False ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3MuonPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3MuonPSetTrajectoryFilterIT" ) )
)
process.HLTPSetCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSiStripClusterChargeCutLoose = cms.PSet(  value = cms.double( 1620.0 ) )
process.HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "StripSubClusterShapeTrajectoryFilter" ),
  subclusterCutSN = cms.double( 12.0 ),
  trimMaxADC = cms.double( 30.0 ),
  seedCutMIPs = cms.double( 0.35 ),
  subclusterCutMIPs = cms.double( 0.45 ),
  subclusterWindow = cms.double( 0.7 ),
  maxNSat = cms.uint32( 3 ),
  trimMaxFracNeigh = cms.double( 0.25 ),
  maxTrimmedSizeDiffNeg = cms.double( 1.0 ),
  seedCutSN = cms.double( 7.0 ),
  layerMask = cms.PSet( 
    TOB = cms.bool( False ),
    TIB = cms.vuint32( 1, 2 ),
    TID = cms.vuint32( 1, 2 ),
    TEC = cms.bool( False )
  ),
  maxTrimmedSizeDiffPos = cms.double( 0.7 ),
  trimMaxFracTotal = cms.double( 0.15 )
)
process.HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA" )    ),
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA" )    )
  )
)
process.HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetHighPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelPairStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelLessStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetTobTecStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetJetCoreStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetMixedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 3.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtQuadStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 3.5 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetHighPtTripletStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.streams = cms.PSet( 
  ALCALowPtJet = cms.vstring( 'AlCaLowPtJet' ),
  ALCALumiPixelsCountsExpress = cms.vstring( 'AlCaLumiPixelsCountsExpress' ),
  ALCALumiPixelsCountsPrompt = cms.vstring( 'AlCaLumiPixelsCountsPrompt' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  ALCAPPSExpress = cms.vstring( 'AlCaPPSExpress' ),
  ALCAPPSPrompt = cms.vstring( 'AlCaPPSPrompt' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcal' ),
  DQM = cms.vstring( 'OnlineMonitor' ),
  DQMCalibration = cms.vstring( 'TestEnablesEcalHcalDQM' ),
  DQMEventDisplay = cms.vstring( 'EventDisplay' ),
  DQMGPUvsCPU = cms.vstring( 'DQMGPUvsCPU' ),
  DQMOnlineBeamspot = cms.vstring( 'DQMOnlineBeamspot' ),
  DQMPPSRandom = cms.vstring( 'DQMPPSRandom' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  ExpressAlignment = cms.vstring( 'ExpressAlignment' ),
  HLTMonitor = cms.vstring( 'HLTMonitor' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  ParkingDoubleElectronLowMass = cms.vstring( 'ParkingDoubleElectronLowMass' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'ParkingDoubleMuonLowMass0',
    'ParkingDoubleMuonLowMass1' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'ParkingDoubleMuonLowMass2',
    'ParkingDoubleMuonLowMass3' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'ParkingDoubleMuonLowMass4',
    'ParkingDoubleMuonLowMass5' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'ParkingDoubleMuonLowMass6',
    'ParkingDoubleMuonLowMass7' ),
  ParkingHH = cms.vstring( 'ParkingHH' ),
  ParkingLLP = cms.vstring( 'ParkingLLP' ),
  ParkingVBF0 = cms.vstring( 'ParkingVBF0',
    'ParkingVBF1' ),
  ParkingVBF1 = cms.vstring( 'ParkingVBF2',
    'ParkingVBF3' ),
  ParkingVBF2 = cms.vstring( 'ParkingVBF4',
    'ParkingVBF5' ),
  ParkingVBF3 = cms.vstring( 'ParkingVBF6',
    'ParkingVBF7' ),
  PhysicsCommissioning = cms.vstring( 'Commissioning',
    'Cosmics',
    'HLTPhysics',
    'HcalNZS',
    'MonteCarlo',
    'NoBPTX',
    'ZeroBias' ),
  PhysicsDispJetBTagMuEGTau = cms.vstring( 'BTagMu',
    'DisplacedJet',
    'MuonEG',
    'Tau' ),
  PhysicsEGamma0 = cms.vstring( 'EGamma0' ),
  PhysicsEGamma1 = cms.vstring( 'EGamma1' ),
  PhysicsHLTPhysics0 = cms.vstring( 'EphemeralHLTPhysics0',
    'EphemeralHLTPhysics1' ),
  PhysicsHLTPhysics1 = cms.vstring( 'EphemeralHLTPhysics2',
    'EphemeralHLTPhysics3' ),
  PhysicsHLTPhysics2 = cms.vstring( 'EphemeralHLTPhysics4',
    'EphemeralHLTPhysics5' ),
  PhysicsHLTPhysics3 = cms.vstring( 'EphemeralHLTPhysics6',
    'EphemeralHLTPhysics7' ),
  PhysicsJetMET0 = cms.vstring( 'JetMET0' ),
  PhysicsJetMET1 = cms.vstring( 'JetMET1' ),
  PhysicsMuon0 = cms.vstring( 'Muon0' ),
  PhysicsMuon1 = cms.vstring( 'Muon1' ),
  PhysicsScoutingPFMonitor = cms.vstring( 'ScoutingPFMonitor' ),
  PhysicsZeroBias0 = cms.vstring( 'EphemeralZeroBias0',
    'EphemeralZeroBias1' ),
  PhysicsZeroBias1 = cms.vstring( 'EphemeralZeroBias2',
    'EphemeralZeroBias3' ),
  PhysicsZeroBias2 = cms.vstring( 'EphemeralZeroBias4',
    'EphemeralZeroBias5' ),
  PhysicsZeroBias3 = cms.vstring( 'EphemeralZeroBias6',
    'EphemeralZeroBias7' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  ScoutingPF = cms.vstring( 'ScoutingPFRun3' )
)
process.datasets = cms.PSet( 
  AlCaLowPtJet = cms.vstring( 'AlCa_AK8PFJet40_v21',
    'AlCa_PFJet40_v26' ),
  AlCaLumiPixelsCountsExpress = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v7' ),
  AlCaLumiPixelsCountsPrompt = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v7',
    'AlCa_LumiPixelsCounts_ZeroBias_v8' ),
  AlCaP0 = cms.vstring( 'AlCa_EcalEtaEBonly_v20',
    'AlCa_EcalEtaEEonly_v20',
    'AlCa_EcalPi0EBonly_v20',
    'AlCa_EcalPi0EEonly_v20' ),
  AlCaPPSExpress = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v5',
    'HLT_PPSMaxTracksPerRP4_v5' ),
  AlCaPPSPrompt = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v5',
    'HLT_PPSMaxTracksPerRP4_v5' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSym_v15' ),
  BTagMu = cms.vstring( 'HLT_BTagMu_AK4DiJet110_Mu5_v19',
    'HLT_BTagMu_AK4DiJet170_Mu5_v18',
    'HLT_BTagMu_AK4DiJet20_Mu5_v19',
    'HLT_BTagMu_AK4DiJet40_Mu5_v19',
    'HLT_BTagMu_AK4DiJet70_Mu5_v19',
    'HLT_BTagMu_AK4Jet300_Mu5_v18',
    'HLT_BTagMu_AK8DiJet170_Mu5_v15',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v8',
    'HLT_BTagMu_AK8Jet300_Mu5_v18' ),
  Commissioning = cms.vstring( 'HLT_IsoTrackHB_v10',
    'HLT_IsoTrackHE_v10',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v5',
    'HLT_PFJet40_GPUvsCPU_v3' ),
  Cosmics = cms.vstring( 'HLT_L1SingleMuCosmics_v4' ),
  DQMGPUvsCPU = cms.vstring( 'DQM_EcalReconstruction_v8',
    'DQM_HcalReconstruction_v6',
    'DQM_PixelReconstruction_v8' ),
  DQMOnlineBeamspot = cms.vstring( 'HLT_HT300_Beamspot_v17',
    'HLT_ZeroBias_Beamspot_v10' ),
  DQMPPSRandom = cms.vstring( 'HLT_PPSRandom_v1' ),
  DisplacedJet = cms.vstring( 'HLT_CaloMET60_DTCluster50_v7',
    'HLT_CaloMET60_DTClusterNoMB1S50_v7',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v7',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v7',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v7',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v7',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_v7',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v7',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v7',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v4',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v4',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v7',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v3',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v3',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v3',
    'HLT_HT350_v3',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v19',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v7',
    'HLT_HT425_v15',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v6',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v3',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v3',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v3',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v3',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v3',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v3',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v3',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v3',
    'HLT_HT550_DisplacedDijet60_Inclusive_v19',
    'HLT_L1MET_DTCluster50_v7',
    'HLT_L1MET_DTClusterNoMB1S50_v7',
    'HLT_L1Mu6HT240_v5',
    'HLT_L1SingleLLPJet_v3',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v3',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v3',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v3',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v3',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v7',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v7',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v7',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v7',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v7',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v7',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v7',
    'HLT_PFJet200_TimeGt2p5ns_v4',
    'HLT_PFJet200_TimeLtNeg2p5ns_v4' ),
  EGamma0 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v10',
    'HLT_DiPhoton10Time1ns_v6',
    'HLT_DiPhoton10Time1p2ns_v6',
    'HLT_DiPhoton10Time1p4ns_v6',
    'HLT_DiPhoton10Time1p6ns_v6',
    'HLT_DiPhoton10Time1p8ns_v6',
    'HLT_DiPhoton10Time2ns_v6',
    'HLT_DiPhoton10_CaloIdL_v6',
    'HLT_DiPhoton10sminlt0p12_v6',
    'HLT_DiPhoton10sminlt0p1_v6',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v20',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v7',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v7',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19',
    'HLT_Diphoton_MVATest',
    'HLT_DoubleEle25_CaloIdL_MW_v11',
    'HLT_DoubleEle27_CaloIdL_MW_v11',
    'HLT_DoubleEle33_CaloIdL_MW_v24',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v26',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v26',
    'HLT_DoublePhoton33_CaloIdL_v13',
    'HLT_DoublePhoton70_v13',
    'HLT_DoublePhoton85_v21',
    'HLT_ECALHT800_v16',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v21',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v14',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v22',
    'HLT_Ele15_IsoVVVL_PFHT450_v22',
    'HLT_Ele15_IsoVVVL_PFHT600_v26',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v15',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v22',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v25',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v7',
    'HLT_Ele28_HighEta_SC20_Mass55_v19',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v19',
    'HLT_Ele30_WPTight_Gsf_v7',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v19',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v15',
    'HLT_Ele32_WPTight_Gsf_v21',
    'HLT_Ele35_WPTight_Gsf_v15',
    'HLT_Ele38_WPTight_Gsf_v15',
    'HLT_Ele40_WPTight_Gsf_v15',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v6',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v6',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v24',
    'HLT_Ele50_IsoVVVL_PFHT450_v22',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v22',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_Photon100EBHE10_v8',
    'HLT_Photon110EB_TightID_TightIso_v8',
    'HLT_Photon120_R9Id90_HE10_IsoM_v20',
    'HLT_Photon120_v19',
    'HLT_Photon130EB_TightID_TightIso_v4',
    'HLT_Photon150EB_TightID_TightIso_v4',
    'HLT_Photon150_v13',
    'HLT_Photon165_R9Id90_HE10_IsoM_v21',
    'HLT_Photon175EB_TightID_TightIso_v4',
    'HLT_Photon175_v21',
    'HLT_Photon200EB_TightID_TightIso_v4',
    'HLT_Photon200_v20',
    'HLT_Photon20_HoverELoose_v16',
    'HLT_Photon300_NoHE_v19',
    'HLT_Photon30EB_TightID_TightIso_v7',
    'HLT_Photon30_HoverELoose_v16',
    'HLT_Photon32_OneProng32_M50To105_v4',
    'HLT_Photon33_v11',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v2',
    'HLT_Photon35_TwoProngs35_v7',
    'HLT_Photon50EB_TightID_TightIso_v4',
    'HLT_Photon50_R9Id90_HE10_IsoM_v20',
    'HLT_Photon50_TimeGt2p5ns_v3',
    'HLT_Photon50_TimeLtNeg2p5ns_v3',
    'HLT_Photon50_v19',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v4',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v4',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v4',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v3',
    'HLT_Photon75EB_TightID_TightIso_v4',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
    'HLT_Photon75_R9Id90_HE10_IsoM_v20',
    'HLT_Photon75_v19',
    'HLT_Photon90EB_TightID_TightIso_v4',
    'HLT_Photon90_R9Id90_HE10_IsoM_v20',
    'HLT_Photon90_v19' ),
  EGamma1 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v10',
    'HLT_DiPhoton10Time1ns_v6',
    'HLT_DiPhoton10Time1p2ns_v6',
    'HLT_DiPhoton10Time1p4ns_v6',
    'HLT_DiPhoton10Time1p6ns_v6',
    'HLT_DiPhoton10Time1p8ns_v6',
    'HLT_DiPhoton10Time2ns_v6',
    'HLT_DiPhoton10_CaloIdL_v6',
    'HLT_DiPhoton10sminlt0p12_v6',
    'HLT_DiPhoton10sminlt0p1_v6',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v20',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v7',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v7',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19',
    'HLT_Diphoton_MVATest',
    'HLT_DoubleEle25_CaloIdL_MW_v11',
    'HLT_DoubleEle27_CaloIdL_MW_v11',
    'HLT_DoubleEle33_CaloIdL_MW_v24',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v26',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v26',
    'HLT_DoublePhoton33_CaloIdL_v13',
    'HLT_DoublePhoton70_v13',
    'HLT_DoublePhoton85_v21',
    'HLT_ECALHT800_v16',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v21',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v14',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v22',
    'HLT_Ele15_IsoVVVL_PFHT450_v22',
    'HLT_Ele15_IsoVVVL_PFHT600_v26',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v15',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v22',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v25',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v7',
    'HLT_Ele28_HighEta_SC20_Mass55_v19',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v19',
    'HLT_Ele30_WPTight_Gsf_v7',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v19',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v15',
    'HLT_Ele32_WPTight_Gsf_v21',
    'HLT_Ele35_WPTight_Gsf_v15',
    'HLT_Ele38_WPTight_Gsf_v15',
    'HLT_Ele40_WPTight_Gsf_v15',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v6',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v6',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v24',
    'HLT_Ele50_IsoVVVL_PFHT450_v22',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v22',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_Photon100EBHE10_v8',
    'HLT_Photon110EB_TightID_TightIso_v8',
    'HLT_Photon120_R9Id90_HE10_IsoM_v20',
    'HLT_Photon120_v19',
    'HLT_Photon130EB_TightID_TightIso_v4',
    'HLT_Photon150EB_TightID_TightIso_v4',
    'HLT_Photon150_v13',
    'HLT_Photon165_R9Id90_HE10_IsoM_v21',
    'HLT_Photon175EB_TightID_TightIso_v4',
    'HLT_Photon175_v21',
    'HLT_Photon200EB_TightID_TightIso_v4',
    'HLT_Photon200_v20',
    'HLT_Photon20_HoverELoose_v16',
    'HLT_Photon300_NoHE_v19',
    'HLT_Photon30EB_TightID_TightIso_v7',
    'HLT_Photon30_HoverELoose_v16',
    'HLT_Photon32_OneProng32_M50To105_v4',
    'HLT_Photon33_v11',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v2',
    'HLT_Photon35_TwoProngs35_v7',
    'HLT_Photon50EB_TightID_TightIso_v4',
    'HLT_Photon50_R9Id90_HE10_IsoM_v20',
    'HLT_Photon50_TimeGt2p5ns_v3',
    'HLT_Photon50_TimeLtNeg2p5ns_v3',
    'HLT_Photon50_v19',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v4',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v4',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v4',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v3',
    'HLT_Photon75EB_TightID_TightIso_v4',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
    'HLT_Photon75_R9Id90_HE10_IsoM_v20',
    'HLT_Photon75_v19',
    'HLT_Photon90EB_TightID_TightIso_v4',
    'HLT_Photon90_R9Id90_HE10_IsoM_v20',
    'HLT_Photon90_v19' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v4' ),
  EphemeralHLTPhysics0 = cms.vstring( 'HLT_EphemeralPhysics_v5' ),
  EphemeralHLTPhysics1 = cms.vstring( 'HLT_EphemeralPhysics_v5' ),
  EphemeralHLTPhysics2 = cms.vstring( 'HLT_EphemeralPhysics_v5' ),
  EphemeralHLTPhysics3 = cms.vstring( 'HLT_EphemeralPhysics_v5' ),
  EphemeralHLTPhysics4 = cms.vstring( 'HLT_EphemeralPhysics_v5' ),
  EphemeralHLTPhysics5 = cms.vstring( 'HLT_EphemeralPhysics_v5' ),
  EphemeralHLTPhysics6 = cms.vstring( 'HLT_EphemeralPhysics_v5' ),
  EphemeralHLTPhysics7 = cms.vstring( 'HLT_EphemeralPhysics_v5' ),
  EphemeralZeroBias0 = cms.vstring( 'HLT_EphemeralZeroBias_v5' ),
  EphemeralZeroBias1 = cms.vstring( 'HLT_EphemeralZeroBias_v5' ),
  EphemeralZeroBias2 = cms.vstring( 'HLT_EphemeralZeroBias_v5' ),
  EphemeralZeroBias3 = cms.vstring( 'HLT_EphemeralZeroBias_v5' ),
  EphemeralZeroBias4 = cms.vstring( 'HLT_EphemeralZeroBias_v5' ),
  EphemeralZeroBias5 = cms.vstring( 'HLT_EphemeralZeroBias_v5' ),
  EphemeralZeroBias6 = cms.vstring( 'HLT_EphemeralZeroBias_v5' ),
  EphemeralZeroBias7 = cms.vstring( 'HLT_EphemeralZeroBias_v5' ),
  EventDisplay = cms.vstring( 'HLT_DoublePhoton85_v21',
    'HLT_PFJet500_v27' ),
  ExpressAlignment = cms.vstring( 'HLT_HT300_Beamspot_v17',
    'HLT_ZeroBias_Beamspot_v10' ),
  ExpressPhysics = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_IsoMu20_v21',
    'HLT_IsoMu24_v19',
    'HLT_IsoMu27_v22',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v21',
    'HLT_Physics_v10',
    'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v4',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v8',
    'HLT_ZeroBias_IsolatedBunches_v8',
    'HLT_ZeroBias_v9' ),
  HLTMonitor = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Ele32_WPTight_Gsf_v21',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v6',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v19',
    'HLT_HT550_DisplacedDijet60_Inclusive_v19',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v6',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v7',
    'HLT_PFHT510_v23',
    'HLT_PFJet260_v26',
    'HLT_PFJet320_v26',
    'HLT_PFMET130_PFMHT130_IDTight_v26',
    'HLT_PFMET140_PFMHT140_IDTight_v26' ),
  HLTPhysics = cms.vstring( 'HLT_Physics_v10' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v17',
    'HLT_HcalPhiSym_v19' ),
  JetMET0 = cms.vstring( 'HLT_AK8DiPFJet250_250_MassSD30_v6',
    'HLT_AK8DiPFJet250_250_MassSD50_v6',
    'HLT_AK8DiPFJet260_260_MassSD30_v6',
    'HLT_AK8DiPFJet260_260_MassSD50_v6',
    'HLT_AK8DiPFJet270_270_MassSD30_v6',
    'HLT_AK8DiPFJet280_280_MassSD30_v6',
    'HLT_AK8DiPFJet290_290_MassSD30_v6',
    'HLT_AK8PFJet140_v21',
    'HLT_AK8PFJet200_v21',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v3',
    'HLT_AK8PFJet220_SoftDropMass40_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet230_SoftDropMass40_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet260_v22',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet320_v22',
    'HLT_AK8PFJet400_MassSD30_v6',
    'HLT_AK8PFJet400_v22',
    'HLT_AK8PFJet40_v22',
    'HLT_AK8PFJet420_MassSD30_v6',
    'HLT_AK8PFJet425_SoftDropMass40_v7',
    'HLT_AK8PFJet450_MassSD30_v6',
    'HLT_AK8PFJet450_SoftDropMass40_v7',
    'HLT_AK8PFJet450_v22',
    'HLT_AK8PFJet470_MassSD30_v6',
    'HLT_AK8PFJet500_MassSD30_v6',
    'HLT_AK8PFJet500_v22',
    'HLT_AK8PFJet550_v17',
    'HLT_AK8PFJet60_v21',
    'HLT_AK8PFJet80_v22',
    'HLT_AK8PFJetFwd140_v20',
    'HLT_AK8PFJetFwd15_v9',
    'HLT_AK8PFJetFwd200_v20',
    'HLT_AK8PFJetFwd25_v9',
    'HLT_AK8PFJetFwd260_v21',
    'HLT_AK8PFJetFwd320_v21',
    'HLT_AK8PFJetFwd400_v21',
    'HLT_AK8PFJetFwd40_v21',
    'HLT_AK8PFJetFwd450_v21',
    'HLT_AK8PFJetFwd500_v21',
    'HLT_AK8PFJetFwd60_v20',
    'HLT_AK8PFJetFwd80_v20',
    'HLT_CaloJet500_NoJetID_v18',
    'HLT_CaloJet550_NoJetID_v13',
    'HLT_CaloMET350_NotCleaned_v10',
    'HLT_CaloMET90_NotCleaned_v10',
    'HLT_CaloMHT90_v10',
    'HLT_DiPFJetAve100_HFJEC_v23',
    'HLT_DiPFJetAve140_v19',
    'HLT_DiPFJetAve160_HFJEC_v22',
    'HLT_DiPFJetAve200_v19',
    'HLT_DiPFJetAve220_HFJEC_v22',
    'HLT_DiPFJetAve260_HFJEC_v5',
    'HLT_DiPFJetAve260_v20',
    'HLT_DiPFJetAve300_HFJEC_v22',
    'HLT_DiPFJetAve320_v20',
    'HLT_DiPFJetAve400_v20',
    'HLT_DiPFJetAve40_v20',
    'HLT_DiPFJetAve500_v20',
    'HLT_DiPFJetAve60_HFJEC_v21',
    'HLT_DiPFJetAve60_v20',
    'HLT_DiPFJetAve80_HFJEC_v23',
    'HLT_DiPFJetAve80_v20',
    'HLT_DoublePFJets100_PFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets200_PFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets350_PFBTagDeepJet_p71_v8',
    'HLT_DoublePFJets40_PFBTagDeepJet_p71_v7',
    'HLT_L1ETMHadSeeds_v6',
    'HLT_MET105_IsoTrk50_v15',
    'HLT_MET120_IsoTrk50_v15',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_Mu12eta2p3_PFJet40_v7',
    'HLT_Mu12eta2p3_v7',
    'HLT_PFHT1050_v24',
    'HLT_PFHT180_v23',
    'HLT_PFHT250_v23',
    'HLT_PFHT350_v25',
    'HLT_PFHT370_v23',
    'HLT_PFHT430_v23',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v18',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v18',
    'HLT_PFHT510_v23',
    'HLT_PFHT590_v23',
    'HLT_PFHT680_v23',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v18',
    'HLT_PFHT780_v23',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v18',
    'HLT_PFHT890_v23',
    'HLT_PFJet110_v6',
    'HLT_PFJet140_v25',
    'HLT_PFJet200_v25',
    'HLT_PFJet260_v26',
    'HLT_PFJet320_v26',
    'HLT_PFJet400_v26',
    'HLT_PFJet40_v27',
    'HLT_PFJet450_v27',
    'HLT_PFJet500_v27',
    'HLT_PFJet550_v17',
    'HLT_PFJet60_v27',
    'HLT_PFJet80_v27',
    'HLT_PFJetFwd140_v24',
    'HLT_PFJetFwd200_v24',
    'HLT_PFJetFwd260_v25',
    'HLT_PFJetFwd320_v25',
    'HLT_PFJetFwd400_v25',
    'HLT_PFJetFwd40_v25',
    'HLT_PFJetFwd450_v25',
    'HLT_PFJetFwd500_v25',
    'HLT_PFJetFwd60_v25',
    'HLT_PFJetFwd80_v24',
    'HLT_PFMET105_IsoTrk50_v7',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v15',
    'HLT_PFMET120_PFMHT120_IDTight_v26',
    'HLT_PFMET130_PFMHT130_IDTight_v26',
    'HLT_PFMET140_PFMHT140_IDTight_v26',
    'HLT_PFMET200_BeamHaloCleaned_v15',
    'HLT_PFMET200_NotCleaned_v15',
    'HLT_PFMET250_NotCleaned_v15',
    'HLT_PFMET300_NotCleaned_v15',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v15',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v26',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v25',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v25',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v17',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v15',
    'HLT_QuadPFJet100_88_70_30_v4',
    'HLT_QuadPFJet103_88_75_15_v11',
    'HLT_QuadPFJet105_88_75_30_v3',
    'HLT_QuadPFJet105_88_76_15_v11',
    'HLT_QuadPFJet111_90_80_15_v11',
    'HLT_QuadPFJet111_90_80_30_v3' ),
  JetMET1 = cms.vstring( 'HLT_AK8DiPFJet250_250_MassSD30_v6',
    'HLT_AK8DiPFJet250_250_MassSD50_v6',
    'HLT_AK8DiPFJet260_260_MassSD30_v6',
    'HLT_AK8DiPFJet260_260_MassSD50_v6',
    'HLT_AK8DiPFJet270_270_MassSD30_v6',
    'HLT_AK8DiPFJet280_280_MassSD30_v6',
    'HLT_AK8DiPFJet290_290_MassSD30_v6',
    'HLT_AK8PFJet140_v21',
    'HLT_AK8PFJet200_v21',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v3',
    'HLT_AK8PFJet220_SoftDropMass40_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet230_SoftDropMass40_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet260_v22',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet320_v22',
    'HLT_AK8PFJet400_MassSD30_v6',
    'HLT_AK8PFJet400_v22',
    'HLT_AK8PFJet40_v22',
    'HLT_AK8PFJet420_MassSD30_v6',
    'HLT_AK8PFJet425_SoftDropMass40_v7',
    'HLT_AK8PFJet450_MassSD30_v6',
    'HLT_AK8PFJet450_SoftDropMass40_v7',
    'HLT_AK8PFJet450_v22',
    'HLT_AK8PFJet470_MassSD30_v6',
    'HLT_AK8PFJet500_MassSD30_v6',
    'HLT_AK8PFJet500_v22',
    'HLT_AK8PFJet550_v17',
    'HLT_AK8PFJet60_v21',
    'HLT_AK8PFJet80_v22',
    'HLT_AK8PFJetFwd140_v20',
    'HLT_AK8PFJetFwd15_v9',
    'HLT_AK8PFJetFwd200_v20',
    'HLT_AK8PFJetFwd25_v9',
    'HLT_AK8PFJetFwd260_v21',
    'HLT_AK8PFJetFwd320_v21',
    'HLT_AK8PFJetFwd400_v21',
    'HLT_AK8PFJetFwd40_v21',
    'HLT_AK8PFJetFwd450_v21',
    'HLT_AK8PFJetFwd500_v21',
    'HLT_AK8PFJetFwd60_v20',
    'HLT_AK8PFJetFwd80_v20',
    'HLT_CaloJet500_NoJetID_v18',
    'HLT_CaloJet550_NoJetID_v13',
    'HLT_CaloMET350_NotCleaned_v10',
    'HLT_CaloMET90_NotCleaned_v10',
    'HLT_CaloMHT90_v10',
    'HLT_DiPFJetAve100_HFJEC_v23',
    'HLT_DiPFJetAve140_v19',
    'HLT_DiPFJetAve160_HFJEC_v22',
    'HLT_DiPFJetAve200_v19',
    'HLT_DiPFJetAve220_HFJEC_v22',
    'HLT_DiPFJetAve260_HFJEC_v5',
    'HLT_DiPFJetAve260_v20',
    'HLT_DiPFJetAve300_HFJEC_v22',
    'HLT_DiPFJetAve320_v20',
    'HLT_DiPFJetAve400_v20',
    'HLT_DiPFJetAve40_v20',
    'HLT_DiPFJetAve500_v20',
    'HLT_DiPFJetAve60_HFJEC_v21',
    'HLT_DiPFJetAve60_v20',
    'HLT_DiPFJetAve80_HFJEC_v23',
    'HLT_DiPFJetAve80_v20',
    'HLT_DoublePFJets100_PFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets200_PFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets350_PFBTagDeepJet_p71_v8',
    'HLT_DoublePFJets40_PFBTagDeepJet_p71_v7',
    'HLT_L1ETMHadSeeds_v6',
    'HLT_MET105_IsoTrk50_v15',
    'HLT_MET120_IsoTrk50_v15',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_Mu12eta2p3_PFJet40_v7',
    'HLT_Mu12eta2p3_v7',
    'HLT_PFHT1050_v24',
    'HLT_PFHT180_v23',
    'HLT_PFHT250_v23',
    'HLT_PFHT350_v25',
    'HLT_PFHT370_v23',
    'HLT_PFHT430_v23',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v18',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v18',
    'HLT_PFHT510_v23',
    'HLT_PFHT590_v23',
    'HLT_PFHT680_v23',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v18',
    'HLT_PFHT780_v23',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v18',
    'HLT_PFHT890_v23',
    'HLT_PFJet110_v6',
    'HLT_PFJet140_v25',
    'HLT_PFJet200_v25',
    'HLT_PFJet260_v26',
    'HLT_PFJet320_v26',
    'HLT_PFJet400_v26',
    'HLT_PFJet40_v27',
    'HLT_PFJet450_v27',
    'HLT_PFJet500_v27',
    'HLT_PFJet550_v17',
    'HLT_PFJet60_v27',
    'HLT_PFJet80_v27',
    'HLT_PFJetFwd140_v24',
    'HLT_PFJetFwd200_v24',
    'HLT_PFJetFwd260_v25',
    'HLT_PFJetFwd320_v25',
    'HLT_PFJetFwd400_v25',
    'HLT_PFJetFwd40_v25',
    'HLT_PFJetFwd450_v25',
    'HLT_PFJetFwd500_v25',
    'HLT_PFJetFwd60_v25',
    'HLT_PFJetFwd80_v24',
    'HLT_PFMET105_IsoTrk50_v7',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v15',
    'HLT_PFMET120_PFMHT120_IDTight_v26',
    'HLT_PFMET130_PFMHT130_IDTight_v26',
    'HLT_PFMET140_PFMHT140_IDTight_v26',
    'HLT_PFMET200_BeamHaloCleaned_v15',
    'HLT_PFMET200_NotCleaned_v15',
    'HLT_PFMET250_NotCleaned_v15',
    'HLT_PFMET300_NotCleaned_v15',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v15',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v26',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v25',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v25',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v17',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v15',
    'HLT_QuadPFJet100_88_70_30_v4',
    'HLT_QuadPFJet103_88_75_15_v11',
    'HLT_QuadPFJet105_88_75_30_v3',
    'HLT_QuadPFJet105_88_76_15_v11',
    'HLT_QuadPFJet111_90_80_15_v11',
    'HLT_QuadPFJet111_90_80_30_v3' ),
  L1Accept = cms.vstring( 'DST_Physics_v10',
    'DST_ZeroBias_v5' ),
  MonteCarlo = cms.vstring( 'MC_AK4CaloJetsFromPV_v14',
    'MC_AK4CaloJets_v15',
    'MC_AK4PFJets_v23',
    'MC_AK8CaloHT_v14',
    'MC_AK8PFHT_v22',
    'MC_AK8PFJets_v23',
    'MC_AK8TrimPFJets_v23',
    'MC_CaloBTagDeepCSV_v14',
    'MC_CaloHT_v14',
    'MC_CaloMET_JetIdCleaned_v15',
    'MC_CaloMET_v14',
    'MC_CaloMHT_v14',
    'MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v19',
    'MC_DoubleEle5_CaloIdL_MW_v22',
    'MC_DoubleMuNoFiltersNoVtx_v13',
    'MC_DoubleMu_TrkIsoVVL_DZ_v17',
    'MC_Egamma_Open_Unseeded_v4',
    'MC_Egamma_Open_v4',
    'MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'MC_Ele5_WPTight_Gsf_v14',
    'MC_IsoMu_v21',
    'MC_PFBTagDeepCSV_v16',
    'MC_PFBTagDeepJet_v7',
    'MC_PFHT_v22',
    'MC_PFMET_v23',
    'MC_PFMHT_v22',
    'MC_QuadPFJet100_75_50_30_PNet2CvsL0p3And1CvsL0p5_VBF3Tight_v4',
    'MC_ReducedIterativeTracking_v18',
    'MC_Run3_PFScoutingPixelTracking_v22' ),
  Muon0 = cms.vstring( 'HLT_CascadeMu100_v9',
    'HLT_CscCluster_Loose_v6',
    'HLT_CscCluster_Medium_v6',
    'HLT_CscCluster_Tight_v6',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v2',
    'HLT_DoubleCscCluster100_v3',
    'HLT_DoubleCscCluster75_v3',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v7',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v7',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v7',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v7',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v7',
    'HLT_DoubleL2Mu50_v7',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v6',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v6',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v7',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v16',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v16',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v16',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v16',
    'HLT_DoubleMu43NoFiltersNoVtx_v10',
    'HLT_DoubleMu48NoFiltersNoVtx_v10',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v14',
    'HLT_HighPtTkMu100_v8',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v7',
    'HLT_IsoMu20_v21',
    'HLT_IsoMu24_OneProng32_v3',
    'HLT_IsoMu24_TwoProngs35_v7',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v7',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v7',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v7',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_v21',
    'HLT_IsoMu24_v19',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v2',
    'HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v6',
    'HLT_IsoMu27_v22',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v6',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v6',
    'HLT_L1CSCShower_DTCluster50_v6',
    'HLT_L1CSCShower_DTCluster75_v6',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v6',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v21',
    'HLT_Mu15_IsoVVVL_PFHT450_v21',
    'HLT_Mu15_IsoVVVL_PFHT600_v25',
    'HLT_Mu15_v9',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v21',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v20',
    'HLT_Mu17_TrkIsoVVL_v19',
    'HLT_Mu17_v19',
    'HLT_Mu18_Mu9_SameSign_v10',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v9',
    'HLT_Mu19_TrkIsoVVL_v10',
    'HLT_Mu19_v10',
    'HLT_Mu20_v18',
    'HLT_Mu27_v19',
    'HLT_Mu37_TkMu27_v11',
    'HLT_Mu3_PFJet40_v22',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v8',
    'HLT_Mu50_IsoVVVL_PFHT450_v21',
    'HLT_Mu50_L1SingleMuShower_v5',
    'HLT_Mu50_v19',
    'HLT_Mu55_v9',
    'HLT_Mu8_TrkIsoVVL_v18',
    'HLT_Mu8_v18',
    'HLT_TripleMu_10_5_5_DZ_v16',
    'HLT_TripleMu_12_10_5_v16',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v9',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v14',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v12' ),
  Muon1 = cms.vstring( 'HLT_CascadeMu100_v9',
    'HLT_CscCluster_Loose_v6',
    'HLT_CscCluster_Medium_v6',
    'HLT_CscCluster_Tight_v6',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v2',
    'HLT_DoubleCscCluster100_v3',
    'HLT_DoubleCscCluster75_v3',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v7',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v7',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v7',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v7',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v7',
    'HLT_DoubleL2Mu50_v7',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v6',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v6',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v7',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v16',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v16',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v16',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v16',
    'HLT_DoubleMu43NoFiltersNoVtx_v10',
    'HLT_DoubleMu48NoFiltersNoVtx_v10',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v14',
    'HLT_HighPtTkMu100_v8',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v7',
    'HLT_IsoMu20_v21',
    'HLT_IsoMu24_OneProng32_v3',
    'HLT_IsoMu24_TwoProngs35_v7',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v7',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v7',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v7',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_v21',
    'HLT_IsoMu24_v19',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v2',
    'HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v6',
    'HLT_IsoMu27_v22',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v6',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v6',
    'HLT_L1CSCShower_DTCluster50_v6',
    'HLT_L1CSCShower_DTCluster75_v6',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v6',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v21',
    'HLT_Mu15_IsoVVVL_PFHT450_v21',
    'HLT_Mu15_IsoVVVL_PFHT600_v25',
    'HLT_Mu15_v9',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v21',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v20',
    'HLT_Mu17_TrkIsoVVL_v19',
    'HLT_Mu17_v19',
    'HLT_Mu18_Mu9_SameSign_v10',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v9',
    'HLT_Mu19_TrkIsoVVL_v10',
    'HLT_Mu19_v10',
    'HLT_Mu20_v18',
    'HLT_Mu27_v19',
    'HLT_Mu37_TkMu27_v11',
    'HLT_Mu3_PFJet40_v22',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v8',
    'HLT_Mu50_IsoVVVL_PFHT450_v21',
    'HLT_Mu50_L1SingleMuShower_v5',
    'HLT_Mu50_v19',
    'HLT_Mu55_v9',
    'HLT_Mu8_TrkIsoVVL_v18',
    'HLT_Mu8_v18',
    'HLT_TripleMu_10_5_5_DZ_v16',
    'HLT_TripleMu_12_10_5_v16',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v9',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v14',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v12' ),
  MuonEG = cms.vstring( 'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v23',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v23',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v23',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v13',
    'HLT_Mu17_Photon30_IsoCaloId_v12',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v7',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v13',
    'HLT_Mu27_Ele37_CaloIdL_MW_v11',
    'HLT_Mu37_Ele27_CaloIdL_MW_v11',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v7',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v7',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v11',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v11',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v24',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v24',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v25',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v25',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v19',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v17' ),
  NoBPTX = cms.vstring( 'HLT_CDC_L2cosmic_10_er1p0_v6',
    'HLT_CDC_L2cosmic_5p5_er1p0_v6',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v10',
    'HLT_L2Mu10_NoVertex_NoBPTX_v11',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v10',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v9',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v10',
    'HLT_UncorrectedJetE30_NoBPTX_v10',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v10',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v10' ),
  OnlineMonitor = ( cms.vstring( 'HLT_AK8DiPFJet250_250_MassSD30_v6',
    'HLT_AK8DiPFJet250_250_MassSD50_v6',
    'HLT_AK8DiPFJet260_260_MassSD30_v6',
    'HLT_AK8DiPFJet260_260_MassSD50_v6',
    'HLT_AK8DiPFJet270_270_MassSD30_v6',
    'HLT_AK8DiPFJet280_280_MassSD30_v6',
    'HLT_AK8DiPFJet290_290_MassSD30_v6',
    'HLT_AK8PFJet140_v21',
    'HLT_AK8PFJet200_v21',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v3',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v3',
    'HLT_AK8PFJet220_SoftDropMass40_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet230_SoftDropMass40_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet260_v22',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v3',
    'HLT_AK8PFJet320_v22',
    'HLT_AK8PFJet400_MassSD30_v6',
    'HLT_AK8PFJet400_v22',
    'HLT_AK8PFJet40_v22',
    'HLT_AK8PFJet420_MassSD30_v6',
    'HLT_AK8PFJet425_SoftDropMass40_v7',
    'HLT_AK8PFJet450_MassSD30_v6',
    'HLT_AK8PFJet450_SoftDropMass40_v7',
    'HLT_AK8PFJet450_v22',
    'HLT_AK8PFJet470_MassSD30_v6',
    'HLT_AK8PFJet500_MassSD30_v6',
    'HLT_AK8PFJet500_v22',
    'HLT_AK8PFJet550_v17',
    'HLT_AK8PFJet60_v21',
    'HLT_AK8PFJet80_v22',
    'HLT_AK8PFJetFwd140_v20',
    'HLT_AK8PFJetFwd15_v9',
    'HLT_AK8PFJetFwd200_v20',
    'HLT_AK8PFJetFwd25_v9',
    'HLT_AK8PFJetFwd260_v21',
    'HLT_AK8PFJetFwd320_v21',
    'HLT_AK8PFJetFwd400_v21',
    'HLT_AK8PFJetFwd40_v21',
    'HLT_AK8PFJetFwd450_v21',
    'HLT_AK8PFJetFwd500_v21',
    'HLT_AK8PFJetFwd60_v20',
    'HLT_AK8PFJetFwd80_v20',
    'HLT_BTagMu_AK4DiJet110_Mu5_v19',
    'HLT_BTagMu_AK4DiJet170_Mu5_v18',
    'HLT_BTagMu_AK4DiJet20_Mu5_v19',
    'HLT_BTagMu_AK4DiJet40_Mu5_v19',
    'HLT_BTagMu_AK4DiJet70_Mu5_v19',
    'HLT_BTagMu_AK4Jet300_Mu5_v18',
    'HLT_BTagMu_AK8DiJet170_Mu5_v15',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v8',
    'HLT_BTagMu_AK8Jet300_Mu5_v18',
    'HLT_CDC_L2cosmic_10_er1p0_v6',
    'HLT_CDC_L2cosmic_5p5_er1p0_v6',
    'HLT_CaloJet500_NoJetID_v18',
    'HLT_CaloJet550_NoJetID_v13',
    'HLT_CaloMET350_NotCleaned_v10',
    'HLT_CaloMET60_DTCluster50_v7',
    'HLT_CaloMET60_DTClusterNoMB1S50_v7',
    'HLT_CaloMET90_NotCleaned_v10',
    'HLT_CaloMHT90_v10',
    'HLT_CascadeMu100_v9',
    'HLT_CscCluster_Loose_v6',
    'HLT_CscCluster_Medium_v6',
    'HLT_CscCluster_Tight_v6',
    'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v10',
    'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v23',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v23',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v23',
    'HLT_DiPFJetAve100_HFJEC_v23',
    'HLT_DiPFJetAve140_v19',
    'HLT_DiPFJetAve160_HFJEC_v22',
    'HLT_DiPFJetAve200_v19',
    'HLT_DiPFJetAve220_HFJEC_v22',
    'HLT_DiPFJetAve260_HFJEC_v5',
    'HLT_DiPFJetAve260_v20',
    'HLT_DiPFJetAve300_HFJEC_v22',
    'HLT_DiPFJetAve320_v20',
    'HLT_DiPFJetAve400_v20',
    'HLT_DiPFJetAve40_v20',
    'HLT_DiPFJetAve500_v20',
    'HLT_DiPFJetAve60_HFJEC_v21',
    'HLT_DiPFJetAve60_v20',
    'HLT_DiPFJetAve80_HFJEC_v23',
    'HLT_DiPFJetAve80_v20',
    'HLT_DiPhoton10Time1ns_v6',
    'HLT_DiPhoton10Time1p2ns_v6',
    'HLT_DiPhoton10Time1p4ns_v6',
    'HLT_DiPhoton10Time1p6ns_v6',
    'HLT_DiPhoton10Time1p8ns_v6',
    'HLT_DiPhoton10Time2ns_v6',
    'HLT_DiPhoton10_CaloIdL_v6',
    'HLT_DiPhoton10sminlt0p12_v6',
    'HLT_DiPhoton10sminlt0p1_v6',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v20',
    'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v7',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v7',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19',
    'HLT_Diphoton_MVATest',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v2',
    'HLT_DoubleCscCluster100_v3',
    'HLT_DoubleCscCluster75_v3',
    'HLT_DoubleEle25_CaloIdL_MW_v11',
    'HLT_DoubleEle27_CaloIdL_MW_v11',
    'HLT_DoubleEle33_CaloIdL_MW_v24',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v26',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v26',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v7',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v7',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v7',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v7',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v7',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v7',
    'HLT_DoubleL2Mu50_v7',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v6',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v6',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v7',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v6',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v2',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v7',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v2',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_M5to80_v4',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v2',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v6',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v6',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v16',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v16',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v16',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v16',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu43NoFiltersNoVtx_v10',
    'HLT_DoubleMu48NoFiltersNoVtx_v10',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v14',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_DoublePFJets100_PFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets200_PFBTagDeepJet_p71_v7',
    'HLT_DoublePFJets350_PFBTagDeepJet_p71_v8',
    'HLT_DoublePFJets40_PFBTagDeepJet_p71_v7',
    'HLT_DoublePhoton33_CaloIdL_v13',
    'HLT_DoublePhoton70_v13',
    'HLT_DoublePhoton85_v21',
    'HLT_ECALHT800_v16',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v21',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v14',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v22',
    'HLT_Ele15_IsoVVVL_PFHT450_v22',
    'HLT_Ele15_IsoVVVL_PFHT600_v26',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v15',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v22',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v25',
    'HLT_Ele28_HighEta_SC20_Mass55_v19',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v19',
    'HLT_Ele30_WPTight_Gsf_v7',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v19',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v15',
    'HLT_Ele32_WPTight_Gsf_v21',
    'HLT_Ele35_WPTight_Gsf_v15',
    'HLT_Ele38_WPTight_Gsf_v15',
    'HLT_Ele40_WPTight_Gsf_v15',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v6',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v6',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v24',
    'HLT_Ele50_IsoVVVL_PFHT450_v22',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v22',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v7',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v7',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v7',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v7',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_v7',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v7',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v7',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v4',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v4')+cms.vstring( 'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v7',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v3',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v3',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v3',
    'HLT_HT350_v3',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v19',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v7',
    'HLT_HT425_v15',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v6',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v3',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v7',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v3',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v3',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v3',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v3',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v3',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v3',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v3',
    'HLT_HT550_DisplacedDijet60_Inclusive_v19',
    'HLT_HcalNZS_v17',
    'HLT_HcalPhiSym_v19',
    'HLT_HighPtTkMu100_v8',
    'HLT_IsoMu20_v21',
    'HLT_IsoMu24_OneProng32_v3',
    'HLT_IsoMu24_TwoProngs35_v7',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v7',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v7',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v7',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_v21',
    'HLT_IsoMu24_v19',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v2',
    'HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v6',
    'HLT_IsoMu27_v22',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v6',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v6',
    'HLT_IsoTrackHB_v10',
    'HLT_IsoTrackHE_v10',
    'HLT_L1CSCShower_DTCluster50_v6',
    'HLT_L1CSCShower_DTCluster75_v6',
    'HLT_L1ETMHadSeeds_v6',
    'HLT_L1MET_DTCluster50_v7',
    'HLT_L1MET_DTClusterNoMB1S50_v7',
    'HLT_L1Mu6HT240_v5',
    'HLT_L1SingleLLPJet_v3',
    'HLT_L1SingleMuCosmics_v4',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v3',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v3',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v3',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v3',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v5',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v10',
    'HLT_L2Mu10_NoVertex_NoBPTX_v11',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v10',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v9',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v6',
    'HLT_MET105_IsoTrk50_v15',
    'HLT_MET120_IsoTrk50_v15',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_v7',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_v7',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v13',
    'HLT_Mu12eta2p3_PFJet40_v7',
    'HLT_Mu12eta2p3_v7',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v21',
    'HLT_Mu15_IsoVVVL_PFHT450_v21',
    'HLT_Mu15_IsoVVVL_PFHT600_v25',
    'HLT_Mu15_v9',
    'HLT_Mu17_Photon30_IsoCaloId_v12',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v21',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v20',
    'HLT_Mu17_TrkIsoVVL_v19',
    'HLT_Mu17_v19',
    'HLT_Mu18_Mu9_SameSign_v10',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v9',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v9',
    'HLT_Mu19_TrkIsoVVL_v10',
    'HLT_Mu19_v10',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v7',
    'HLT_Mu20_v18',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v13',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu27_Ele37_CaloIdL_MW_v11',
    'HLT_Mu27_v19',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu37_Ele27_CaloIdL_MW_v11',
    'HLT_Mu37_TkMu27_v11',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v7',
    'HLT_Mu3_PFJet40_v22',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v8',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v8',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v7',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v11',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v11',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu50_IsoVVVL_PFHT450_v21',
    'HLT_Mu50_L1SingleMuShower_v5',
    'HLT_Mu50_v19',
    'HLT_Mu55_v9',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v7',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v7',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v7',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v7',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v7',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v7',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v24',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v24',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v25',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v25',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v19',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v17',
    'HLT_Mu8_TrkIsoVVL_v18',
    'HLT_Mu8_v18',
    'HLT_PFHT1050_v24',
    'HLT_PFHT180_v23',
    'HLT_PFHT250_v23',
    'HLT_PFHT350_v25',
    'HLT_PFHT370_v23',
    'HLT_PFHT430_v23',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v18',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v18',
    'HLT_PFHT510_v23',
    'HLT_PFHT590_v23',
    'HLT_PFHT680_v23',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v18',
    'HLT_PFHT780_v23',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v18',
    'HLT_PFHT890_v23',
    'HLT_PFJet110_v6',
    'HLT_PFJet140_v25',
    'HLT_PFJet200_TimeGt2p5ns_v4',
    'HLT_PFJet200_TimeLtNeg2p5ns_v4',
    'HLT_PFJet200_v25',
    'HLT_PFJet260_v26',
    'HLT_PFJet320_v26',
    'HLT_PFJet400_v26',
    'HLT_PFJet40_v27',
    'HLT_PFJet450_v27',
    'HLT_PFJet500_v27',
    'HLT_PFJet550_v17',
    'HLT_PFJet60_v27',
    'HLT_PFJet80_v27',
    'HLT_PFJetFwd140_v24',
    'HLT_PFJetFwd200_v24',
    'HLT_PFJetFwd260_v25',
    'HLT_PFJetFwd320_v25',
    'HLT_PFJetFwd400_v25',
    'HLT_PFJetFwd40_v25',
    'HLT_PFJetFwd450_v25',
    'HLT_PFJetFwd500_v25',
    'HLT_PFJetFwd60_v25',
    'HLT_PFJetFwd80_v24',
    'HLT_PFMET105_IsoTrk50_v7',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v15',
    'HLT_PFMET120_PFMHT120_IDTight_v26',
    'HLT_PFMET130_PFMHT130_IDTight_v26',
    'HLT_PFMET140_PFMHT140_IDTight_v26',
    'HLT_PFMET200_BeamHaloCleaned_v15',
    'HLT_PFMET200_NotCleaned_v15',
    'HLT_PFMET250_NotCleaned_v15',
    'HLT_PFMET300_NotCleaned_v15',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v15',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v26',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v25',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v6',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v25',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v17',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v15',
    'HLT_Photon100EBHE10_v8',
    'HLT_Photon110EB_TightID_TightIso_v8',
    'HLT_Photon120_R9Id90_HE10_IsoM_v20',
    'HLT_Photon120_v19',
    'HLT_Photon130EB_TightID_TightIso_v4',
    'HLT_Photon150EB_TightID_TightIso_v4',
    'HLT_Photon150_v13',
    'HLT_Photon165_R9Id90_HE10_IsoM_v21',
    'HLT_Photon175EB_TightID_TightIso_v4',
    'HLT_Photon175_v21',
    'HLT_Photon200EB_TightID_TightIso_v4',
    'HLT_Photon200_v20',
    'HLT_Photon20_HoverELoose_v16',
    'HLT_Photon300_NoHE_v19',
    'HLT_Photon30EB_TightID_TightIso_v7',
    'HLT_Photon30_HoverELoose_v16',
    'HLT_Photon32_OneProng32_M50To105_v4',
    'HLT_Photon33_v11',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v2',
    'HLT_Photon35_TwoProngs35_v7',
    'HLT_Photon50EB_TightID_TightIso_v4',
    'HLT_Photon50_R9Id90_HE10_IsoM_v20',
    'HLT_Photon50_TimeGt2p5ns_v3',
    'HLT_Photon50_TimeLtNeg2p5ns_v3',
    'HLT_Photon50_v19',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v4',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v4',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v4',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v3',
    'HLT_Photon75EB_TightID_TightIso_v4',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
    'HLT_Photon75_R9Id90_HE10_IsoM_v20',
    'HLT_Photon75_v19')+cms.vstring( 'HLT_Photon90EB_TightID_TightIso_v4',
    'HLT_Photon90_R9Id90_HE10_IsoM_v20',
    'HLT_Photon90_v19',
    'HLT_Physics_v10',
    'HLT_QuadPFJet100_88_70_30_v4',
    'HLT_QuadPFJet103_88_75_15_v11',
    'HLT_QuadPFJet105_88_75_30_v3',
    'HLT_QuadPFJet105_88_76_15_v11',
    'HLT_QuadPFJet111_90_80_15_v11',
    'HLT_QuadPFJet111_90_80_30_v3',
    'HLT_Random_v3',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9',
    'HLT_TripleMu_10_5_5_DZ_v16',
    'HLT_TripleMu_12_10_5_v16',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v9',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v14',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v12',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v10',
    'HLT_UncorrectedJetE30_NoBPTX_v10',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v10',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v10',
    'HLT_ZeroBias_Alignment_v4',
    'HLT_ZeroBias_FirstBXAfterTrain_v6',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v8',
    'HLT_ZeroBias_FirstCollisionInTrain_v7',
    'HLT_ZeroBias_IsolatedBunches_v8',
    'HLT_ZeroBias_LastCollisionInTrain_v6',
    'HLT_ZeroBias_v9') ),
  ParkingDoubleElectronLowMass = cms.vstring( 'HLT_DoubleEle10_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle10_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle10_eta1p22_mMax6_v6',
    'HLT_DoubleEle4_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle4_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle4_eta1p22_mMax6_v6',
    'HLT_DoubleEle4p5_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle4p5_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle4p5_eta1p22_mMax6_v6',
    'HLT_DoubleEle5_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle5_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle5_eta1p22_mMax6_v6',
    'HLT_DoubleEle5p5_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle5p5_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle5p5_eta1p22_mMax6_v6',
    'HLT_DoubleEle6_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle6_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle6_eta1p22_mMax6_v6',
    'HLT_DoubleEle6p5_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle6p5_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v6',
    'HLT_DoubleEle7_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle7_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle7_eta1p22_mMax6_v6',
    'HLT_DoubleEle7p5_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle7p5_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle7p5_eta1p22_mMax6_v6',
    'HLT_DoubleEle8_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle8_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle8_eta1p22_mMax6_v6',
    'HLT_DoubleEle8p5_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle8p5_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle8p5_eta1p22_mMax6_v6',
    'HLT_DoubleEle9_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle9_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle9_eta1p22_mMax6_v6',
    'HLT_DoubleEle9p5_eta1p22_mMax6_dz0p8_v5',
    'HLT_DoubleEle9p5_eta1p22_mMax6_trkHits10_v5',
    'HLT_DoubleEle9p5_eta1p22_mMax6_v6',
    'HLT_SingleEle8_SingleEGL1_v5',
    'HLT_SingleEle8_v5' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_LowMass_v7',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_LowMass_Displaced_v7',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_LowMass_v7',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_LowMass_Displaced_v7',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_LowMass_v7',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_LowMass_Displaced_v7',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_LowMass_v7',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_LowMass_Displaced_v7',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9' ),
  ParkingDoubleMuonLowMass4 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_LowMass_v7',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_LowMass_Displaced_v7',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9' ),
  ParkingDoubleMuonLowMass5 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_LowMass_v7',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_LowMass_Displaced_v7',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9' ),
  ParkingDoubleMuonLowMass6 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_LowMass_v7',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_LowMass_Displaced_v7',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9' ),
  ParkingDoubleMuonLowMass7 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v11',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13',
    'HLT_Dimuon0_Jpsi_NoVertexing_v14',
    'HLT_Dimuon0_Jpsi_v14',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v13',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v14',
    'HLT_Dimuon0_LowMass_L1_4R_v13',
    'HLT_Dimuon0_LowMass_L1_4_v14',
    'HLT_Dimuon0_LowMass_L1_TM530_v12',
    'HLT_Dimuon0_LowMass_v14',
    'HLT_Dimuon0_Upsilon_L1_4p5_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12',
    'HLT_Dimuon0_Upsilon_NoVertexing_v13',
    'HLT_Dimuon10_Upsilon_y1p4_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v8',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v13',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v11',
    'HLT_Dimuon14_PsiPrime_v19',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v12',
    'HLT_Dimuon18_PsiPrime_v20',
    'HLT_Dimuon24_Phi_noCorrL1_v12',
    'HLT_Dimuon24_Upsilon_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_noCorrL1_v12',
    'HLT_Dimuon25_Jpsi_v20',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v10',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_v18',
    'HLT_DoubleMu4_3_Bs_v21',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_3_Jpsi_v21',
    'HLT_DoubleMu4_3_LowMass_v7',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v6',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13',
    'HLT_DoubleMu4_JpsiTrk_Bc_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v13',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v13',
    'HLT_DoubleMu4_LowMass_Displaced_v7',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v21',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10',
    'HLT_Mu25_TkMu0_Phi_v14',
    'HLT_Mu30_TkMu0_Psi_v7',
    'HLT_Mu30_TkMu0_Upsilon_v7',
    'HLT_Mu4_L1DoubleMu_v7',
    'HLT_Mu7p5_L2Mu2_Jpsi_v16',
    'HLT_Mu7p5_L2Mu2_Upsilon_v16',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v11',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9' ),
  ParkingHH = cms.vstring( 'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v3',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p60_v3',
    'HLT_PFHT280_QuadPFJet30_v3',
    'HLT_PFHT280_QuadPFJet35_PNet2BTagMean0p60_v3',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_v7',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v15',
    'HLT_PFHT340_QuadPFJet70_50_40_40_PNet2BTagMean0p70_v4',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_v7',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_v14',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_v7',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_v7',
    'HLT_PFHT400_SixPFJet32_PNet2BTagMean0p50_v3',
    'HLT_PFHT400_SixPFJet32_v15',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_v7',
    'HLT_PFHT450_SixPFJet36_PNetBTag0p35_v3',
    'HLT_PFHT450_SixPFJet36_v14' ),
  ParkingLLP = cms.vstring( 'HLT_HT350_DelayedJet40_SingleDelay1p5To3p5nsInclusive_v3',
    'HLT_HT350_DelayedJet40_SingleDelay1p6To3p5nsInclusive_v3',
    'HLT_HT350_DelayedJet40_SingleDelay1p75To3p5nsInclusive_v3',
    'HLT_HT360_DisplacedDijet40_Inclusive1PtrkShortSig5_v3',
    'HLT_HT360_DisplacedDijet45_Inclusive1PtrkShortSig5_v3',
    'HLT_HT390_DisplacedDijet40_Inclusive1PtrkShortSig5_v3',
    'HLT_HT390_DisplacedDijet45_Inclusive1PtrkShortSig5_v3',
    'HLT_HT390eta2p0_DisplacedDijet40_Inclusive1PtrkShortSig5_v3',
    'HLT_HT430_DelayedJet40_SingleDelay1To1p5nsInclusive_v3',
    'HLT_HT430_DelayedJet40_SingleDelay1p1To1p6nsInclusive_v3',
    'HLT_HT430_DelayedJet40_SingleDelay1p25To1p75nsInclusive_v3',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v19',
    'HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v7',
    'HLT_HT650_DisplacedDijet60_Inclusive_v19',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5To4nsInclusive_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p6To4nsInclusive_v3',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75To4nsInclusive_v3' ),
  ParkingVBF0 = cms.vstring( 'HLT_DiJet110_35_Mjj650_PFMET110_v15',
    'HLT_DiJet110_35_Mjj650_PFMET120_v15',
    'HLT_DiJet110_35_Mjj650_PFMET130_v15',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23',
    'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v15',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3',
    'HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj550_Photon22_v2',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3',
    'HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3',
    'HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7' ),
  ParkingVBF1 = cms.vstring( 'HLT_DiJet110_35_Mjj650_PFMET110_v15',
    'HLT_DiJet110_35_Mjj650_PFMET120_v15',
    'HLT_DiJet110_35_Mjj650_PFMET130_v15',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23',
    'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v15',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3',
    'HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj550_Photon22_v2',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3',
    'HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3',
    'HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7' ),
  ParkingVBF2 = cms.vstring( 'HLT_DiJet110_35_Mjj650_PFMET110_v15',
    'HLT_DiJet110_35_Mjj650_PFMET120_v15',
    'HLT_DiJet110_35_Mjj650_PFMET130_v15',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23',
    'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v15',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3',
    'HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj550_Photon22_v2',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3',
    'HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3',
    'HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7' ),
  ParkingVBF3 = cms.vstring( 'HLT_DiJet110_35_Mjj650_PFMET110_v15',
    'HLT_DiJet110_35_Mjj650_PFMET120_v15',
    'HLT_DiJet110_35_Mjj650_PFMET130_v15',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23',
    'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v15',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3',
    'HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj550_Photon22_v2',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3',
    'HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3',
    'HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7' ),
  ParkingVBF4 = cms.vstring( 'HLT_DiJet110_35_Mjj650_PFMET110_v15',
    'HLT_DiJet110_35_Mjj650_PFMET120_v15',
    'HLT_DiJet110_35_Mjj650_PFMET130_v15',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23',
    'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v15',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3',
    'HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj550_Photon22_v2',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3',
    'HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3',
    'HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7' ),
  ParkingVBF5 = cms.vstring( 'HLT_DiJet110_35_Mjj650_PFMET110_v15',
    'HLT_DiJet110_35_Mjj650_PFMET120_v15',
    'HLT_DiJet110_35_Mjj650_PFMET130_v15',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23',
    'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v15',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3',
    'HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj550_Photon22_v2',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3',
    'HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3',
    'HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7' ),
  ParkingVBF6 = cms.vstring( 'HLT_DiJet110_35_Mjj650_PFMET110_v15',
    'HLT_DiJet110_35_Mjj650_PFMET120_v15',
    'HLT_DiJet110_35_Mjj650_PFMET130_v15',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23',
    'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v15',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3',
    'HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj550_Photon22_v2',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3',
    'HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3',
    'HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7' ),
  ParkingVBF7 = cms.vstring( 'HLT_DiJet110_35_Mjj650_PFMET110_v15',
    'HLT_DiJet110_35_Mjj650_PFMET120_v15',
    'HLT_DiJet110_35_Mjj650_PFMET130_v15',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23',
    'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v15',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v15',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4',
    'HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet110_40_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v2',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4',
    'HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3',
    'HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3',
    'HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3',
    'HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj550_Photon22_v2',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4',
    'HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4',
    'HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3',
    'HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3',
    'HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3',
    'HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4',
    'HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3',
    'HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3',
    'HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7' ),
  RPCMonitor = cms.vstring( 'AlCa_RPCMuonNormalisation_v18' ),
  ScoutingPFMonitor = cms.vstring( 'DST_Run3_DoubleEG_PFScoutingPixelTracking_v2',
    'DST_Run3_DoubleMu3_PFScoutingPixelTracking_v22',
    'DST_Run3_DoubleMuon_PFScoutingPixelTracking_v2',
    'DST_Run3_EG16_EG12_PFScoutingPixelTracking_v22',
    'DST_Run3_EG30_PFScoutingPixelTracking_v22',
    'DST_Run3_JetHT_PFScoutingPixelTracking_v22',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v21',
    'HLT_Ele35_WPTight_Gsf_v15',
    'HLT_IsoMu27_v22',
    'HLT_Mu50_v19',
    'HLT_PFHT1050_v24',
    'HLT_Photon200_v20' ),
  ScoutingPFRun3 = cms.vstring( 'DST_HLTMuon_Run3_PFScoutingPixelTracking_v22',
    'DST_Run3_DoubleEG_PFScoutingPixelTracking_v2',
    'DST_Run3_DoubleMu3_PFScoutingPixelTracking_v22',
    'DST_Run3_DoubleMuon_PFScoutingPixelTracking_v2',
    'DST_Run3_EG16_EG12_PFScoutingPixelTracking_v22',
    'DST_Run3_EG30_PFScoutingPixelTracking_v22',
    'DST_Run3_JetHT_PFScoutingPixelTracking_v22' ),
  Tau = cms.vstring( 'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v2',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v7',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v2',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_M5to80_v4',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v2',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v6',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v6',
    'HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_v6',
    'HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_v7' ),
  TestEnablesEcalHcal = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  TestEnablesEcalHcalDQM = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  ZeroBias = cms.vstring( 'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v4',
    'HLT_ZeroBias_FirstBXAfterTrain_v6',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v8',
    'HLT_ZeroBias_FirstCollisionInTrain_v7',
    'HLT_ZeroBias_IsolatedBunches_v8',
    'HLT_ZeroBias_LastCollisionInTrain_v6',
    'HLT_ZeroBias_v9' )
)

process.source = cms.Source( "FedRawDataInputSource",
    eventChunkSize = cms.untracked.uint32( 200 ),
    eventChunkBlock = cms.untracked.uint32( 200 ),
    numBuffers = cms.untracked.uint32( 4 ),
    maxBufferedFiles = cms.untracked.uint32( 2 ),
    alwaysStartFromfirstLS = cms.untracked.uint32( 0 ),
    verifyChecksum = cms.untracked.bool( True ),
    useL1EventID = cms.untracked.bool( False ),
    testTCDSFEDRange = cms.untracked.vuint32(  ),
    fileListMode = cms.untracked.bool( False ),
    fileNames = cms.untracked.vstring(  )
)

process.CSCChannelMapperESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCChannelMapperRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.CSCINdexerESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCIndexerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.GlobalParametersRcdSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "L1TGlobalParametersRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.GlobalTag = cms.ESSource( "PoolDBESSource",
    DBParameters = cms.PSet( 
      connectionRetrialTimeOut = cms.untracked.int32( 60 ),
      idleConnectionCleanupPeriod = cms.untracked.int32( 10 ),
      enableReadOnlySessionOnUpdateConnection = cms.untracked.bool( False ),
      enablePoolAutomaticCleanUp = cms.untracked.bool( False ),
      messageLevel = cms.untracked.int32( 0 ),
      authenticationPath = cms.untracked.string( "." ),
      connectionRetrialPeriod = cms.untracked.int32( 10 ),
      connectionTimeOut = cms.untracked.int32( 0 ),
      enableConnectionSharing = cms.untracked.bool( True )
    ),
    connect = cms.string( "frontier://FrontierProd/CMS_CONDITIONS" ),
    globaltag = cms.string( "None" ),
    snapshotTime = cms.string( "" ),
    toGet = cms.VPSet( 
      cms.PSet(  refreshTime = cms.uint64( 2 ),
        record = cms.string( "BeamSpotOnlineLegacyObjectsRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 2 ),
        record = cms.string( "BeamSpotOnlineHLTObjectsRcd" )
      )
    ),
    DumpStat = cms.untracked.bool( False ),
    ReconnectEachRun = cms.untracked.bool( True ),
    RefreshAlways = cms.untracked.bool( False ),
    RefreshEachRun = cms.untracked.bool( True ),
    RefreshOpenIOVs = cms.untracked.bool( False ),
    pfnPostfix = cms.untracked.string( "" ),
    pfnPrefix = cms.untracked.string( "" )
)
process.HcalTimeSlewEP = cms.ESSource( "HcalTimeSlewEP",
    appendToDataLabel = cms.string( "HBHE" ),
    timeSlewParametersM2 = cms.VPSet( 
      cms.PSet(  tmax = cms.double( 16.0 ),
        tzero = cms.double( 23.960177 ),
        slope = cms.double( -3.178648 )
      ),
      cms.PSet(  tmax = cms.double( 10.0 ),
        tzero = cms.double( 11.977461 ),
        slope = cms.double( -1.5610227 )
      ),
      cms.PSet(  tmax = cms.double( 6.25 ),
        tzero = cms.double( 9.109694 ),
        slope = cms.double( -1.075824 )
      )
    ),
    timeSlewParametersM3 = cms.VPSet( 
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 32.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -3.2 ),
        tspar0 = cms.double( 15.5 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      )
    )
)
process.HepPDTESSource = cms.ESSource( "HepPDTESSource",
    pdtFileName = cms.FileInPath( "SimGeneral/HepPDTESSource/data/pythiaparticle.tbl" )
)
process.ecalMultifitParametersGPUESProducer = cms.ESSource( "EcalMultifitParametersGPUESProducer",
    pulseOffsets = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
    EBtimeFitParameters = cms.vdouble( -2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 91.01147, -50.35761, 11.05621 ),
    EEtimeFitParameters = cms.vdouble( -2.390548, 3.553628, -17.62341, 67.67538, -133.213, 140.7432, -75.41106, 16.20277 ),
    EBamplitudeFitParameters = cms.vdouble( 1.138, 1.652 ),
    EEamplitudeFitParameters = cms.vdouble( 1.89, 1.4 ),
    appendToDataLabel = cms.string( "" )
)
process.ecalRecHitParametersGPUESProducer = cms.ESSource( "EcalRecHitParametersGPUESProducer",
    ChannelStatusToBeExcluded = cms.vstring( 'kDAC',
      'kNoisy',
      'kNNoisy',
      'kFixedG6',
      'kFixedG1',
      'kFixedG0',
      'kNonRespondingIsolated',
      'kDeadVFE',
      'kDeadFE',
      'kNoDataNoTP' ),
    flagsMapDBReco = cms.PSet( 
      kDead = cms.vstring( 'kNoDataNoTP' ),
      kGood = cms.vstring( 'kOk',
        'kDAC',
        'kNoLaser',
        'kNoisy' ),
      kTowerRecovered = cms.vstring( 'kDeadFE' ),
      kNoisy = cms.vstring( 'kNNoisy',
        'kFixedG6',
        'kFixedG1' ),
      kNeighboursRecovered = cms.vstring( 'kFixedG0',
        'kNonRespondingIsolated',
        'kDeadVFE' )
    ),
    appendToDataLabel = cms.string( "" )
)
process.eegeom = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalMappingRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.es_hardcode = cms.ESSource( "HcalHardcodeCalibrations",
    fromDDD = cms.untracked.bool( False ),
    toGet = cms.untracked.vstring( 'GainWidths' )
)
process.hcalMahiPulseOffsetsGPUESProducer = cms.ESSource( "HcalMahiPulseOffsetsGPUESProducer",
    pulseOffsets = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
    appendToDataLabel = cms.string( "" )
)
process.hltESSBTagRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "JetTagComputerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSTfGraphRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "TfGraphRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.ppsPixelTopologyESSource = cms.ESSource( "PPSPixelTopologyESSource",
    RunType = cms.string( "Run3" ),
    PitchSimY = cms.double( 0.15 ),
    PitchSimX = cms.double( 0.1 ),
    thickness = cms.double( 0.23 ),
    noOfPixelSimX = cms.int32( 160 ),
    noOfPixelSimY = cms.int32( 104 ),
    noOfPixels = cms.int32( 16640 ),
    simXWidth = cms.double( 16.6 ),
    simYWidth = cms.double( 16.2 ),
    deadEdgeWidth = cms.double( 0.2 ),
    activeEdgeSigma = cms.double( 0.02 ),
    physActiveEdgeDist = cms.double( 0.15 ),
    appendToDataLabel = cms.string( "" )
)

process.AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  PropagationDirection = cms.string( "anyDirection" )
)
process.CSCChannelMapperESProducer = cms.ESProducer( "CSCChannelMapperESProducer",
  AlgoName = cms.string( "CSCChannelMapperPostls1" )
)
process.CSCGeometryESModule = cms.ESProducer( "CSCGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  useRealWireGeometry = cms.bool( True ),
  useOnlyWiresInME1a = cms.bool( False ),
  useGangedStripsInME1a = cms.bool( False ),
  useCentreTIOffsets = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  debugV = cms.untracked.bool( False )
)
process.CSCIndexerESProducer = cms.ESProducer( "CSCIndexerESProducer",
  AlgoName = cms.string( "CSCIndexerPostls1" )
)
process.CSCObjectMapESProducer = cms.ESProducer( "CSCObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
process.CaloGeometryBuilder = cms.ESProducer( "CaloGeometryBuilder",
  SelectedCalos = cms.vstring( 'HCAL',
    'ZDC',
    'EcalBarrel',
    'EcalEndcap',
    'EcalPreshower',
    'TOWER' )
)
process.CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder" )
process.CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" ),
  MapAuto = cms.untracked.bool( False ),
  SkipHE = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.CaloTowerGeometryFromDBEP = cms.ESProducer( "CaloTowerGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.CaloTowerTopologyEP = cms.ESProducer( "CaloTowerTopologyEP",
  appendToDataLabel = cms.string( "" )
)
process.CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  appendToDataLabel = cms.string( "" )
)
process.ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
process.DTGeometryESModule = cms.ESProducer( "DTGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  DDDetector = cms.ESInputTag( "","" ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  attribute = cms.string( "MuStructure" ),
  value = cms.string( "MuonBarrelDT" ),
  applyAlignment = cms.bool( True )
)
process.DTObjectMapESProducer = cms.ESProducer( "DTObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
process.EcalBarrelGeometryFromDBEP = cms.ESProducer( "EcalBarrelGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.EcalElectronicsMappingBuilder = cms.ESProducer( "EcalElectronicsMappingBuilder" )
process.EcalEndcapGeometryFromDBEP = cms.ESProducer( "EcalEndcapGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.EcalLaserCorrectionService = cms.ESProducer( "EcalLaserCorrectionService",
  maxExtrapolationTimeInSec = cms.uint32( 0 ),
  appendToDataLabel = cms.string( "" )
)
process.EcalPreshowerGeometryFromDBEP = cms.ESProducer( "EcalPreshowerGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.GEMGeometryESModule = cms.ESProducer( "GEMGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  applyAlignment = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.GlobalParameters = cms.ESProducer( "StableParametersTrivialProducer",
  TotalBxInEvent = cms.int32( 5 ),
  NumberPhysTriggers = cms.uint32( 512 ),
  NumberL1Muon = cms.uint32( 8 ),
  NumberL1EGamma = cms.uint32( 12 ),
  NumberL1Jet = cms.uint32( 12 ),
  NumberL1Tau = cms.uint32( 12 ),
  NumberChips = cms.uint32( 1 ),
  PinsOnChip = cms.uint32( 512 ),
  OrderOfChip = cms.vint32( 1 ),
  NumberL1IsoEG = cms.uint32( 4 ),
  NumberL1JetCounts = cms.uint32( 12 ),
  UnitLength = cms.int32( 8 ),
  NumberL1ForJet = cms.uint32( 4 ),
  IfCaloEtaNumberBits = cms.uint32( 4 ),
  IfMuEtaNumberBits = cms.uint32( 6 ),
  NumberL1TauJet = cms.uint32( 4 ),
  NumberL1Mu = cms.uint32( 4 ),
  NumberConditionChips = cms.uint32( 1 ),
  NumberPsbBoards = cms.int32( 7 ),
  NumberL1CenJet = cms.uint32( 4 ),
  PinsOnConditionChip = cms.uint32( 512 ),
  NumberL1NoIsoEG = cms.uint32( 4 ),
  NumberTechnicalTriggers = cms.uint32( 64 ),
  NumberPhysTriggersExtended = cms.uint32( 64 ),
  WordLength = cms.int32( 64 ),
  OrderConditionChip = cms.vint32( 1 ),
  appendToDataLabel = cms.string( "" )
)
process.HcalGeometryFromDBEP = cms.ESProducer( "HcalGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.HcalTopologyIdealEP = cms.ESProducer( "HcalTopologyIdealEP",
  Exclude = cms.untracked.string( "" ),
  MergePosition = cms.untracked.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.MaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.MaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositePropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
process.ParametrizedMagneticFieldProducer = cms.ESProducer( "AutoParametrizedMagneticFieldProducer",
  version = cms.string( "Parabolic" ),
  label = cms.untracked.string( "ParabolicMf" ),
  valueOverride = cms.int32( -1 )
)
process.PropagatorWithMaterialForLoopers = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 4.0 ),
  ComponentName = cms.string( "PropagatorWithMaterialForLoopers" ),
  Mass = cms.double( 0.1396 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.PropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStep" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
process.RPCGeometryESModule = cms.ESProducer( "RPCGeometryESModule",
  fromDDD = cms.untracked.bool( False ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.SiPixelTemplateStoreESProducer = cms.ESProducer( "SiPixelTemplateStoreESProducer",
  appendToDataLabel = cms.string( "" )
)
process.SiStripClusterizerConditionsESProducer = cms.ESProducer( "SiStripClusterizerConditionsESProducer",
  QualityLabel = cms.string( "" ),
  Label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.SiStripGainESProducer = cms.ESProducer( "SiStripGainESProducer",
  appendToDataLabel = cms.string( "" ),
  printDebug = cms.untracked.bool( False ),
  AutomaticNormalization = cms.bool( False ),
  APVGain = cms.VPSet( 
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGainRcd" )
    ),
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGain2Rcd" )
    )
  )
)
process.SiStripQualityESProducer = cms.ESProducer( "SiStripQualityESProducer",
  appendToDataLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiStripDetVOffRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripDetCablingRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadChannelRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadFiberRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadModuleRcd" ),
      tag = cms.string( "" )
    )
  ),
  ReduceGranularity = cms.bool( False ),
  ThresholdForReducedGranularity = cms.double( 0.3 ),
  PrintDebugOutput = cms.bool( False ),
  UseEmptyRunInfo = cms.bool( False )
)
process.SiStripRecHitMatcherESProducer = cms.ESProducer( "SiStripRecHitMatcherESProducer",
  ComponentName = cms.string( "StandardMatcher" ),
  NSigmaInside = cms.double( 3.0 ),
  PreFilter = cms.bool( False )
)
process.SiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 )
)
process.SimpleSecondaryVertex3TrkComputer = cms.ESProducer( "SimpleSecondaryVertexESProducer",
  use3d = cms.bool( True ),
  unBoost = cms.bool( False ),
  useSignificance = cms.bool( True ),
  minTracks = cms.uint32( 3 ),
  minVertices = cms.uint32( 1 )
)
process.SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "SteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.TrackerDigiGeometryESModule = cms.ESProducer( "TrackerDigiGeometryESModule",
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  alignmentsLabel = cms.string( "" )
)
process.TrackerGeometricDetESModule = cms.ESProducer( "TrackerGeometricDetESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" )
)
process.VolumeBasedMagneticFieldESProducer = cms.ESProducer( "VolumeBasedMagneticFieldESProducerFromDB",
  label = cms.untracked.string( "" ),
  debugBuilder = cms.untracked.bool( False ),
  valueOverride = cms.int32( -1 )
)
process.ZdcGeometryFromDBEP = cms.ESProducer( "ZdcGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "" )
)
process.ctppsGeometryESModule = cms.ESProducer( "CTPPSGeometryESModule",
  verbosity = cms.untracked.uint32( 1 ),
  buildMisalignedGeometry = cms.bool( False ),
  isRun2 = cms.bool( False ),
  dbTag = cms.string( "" ),
  compactViewTag = cms.string( "" ),
  fromPreprocessedDB = cms.untracked.bool( True ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.ctppsInterpolatedOpticalFunctionsESSource = cms.ESProducer( "CTPPSInterpolatedOpticalFunctionsESSource",
  lhcInfoLabel = cms.string( "" ),
  lhcInfoPerFillLabel = cms.string( "" ),
  lhcInfoPerLSLabel = cms.string( "" ),
  opticsLabel = cms.string( "" ),
  useNewLHCInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.ecalElectronicsMappingGPUESProducer = cms.ESProducer( "EcalElectronicsMappingGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalGainRatiosGPUESProducer = cms.ESProducer( "EcalGainRatiosGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalIntercalibConstantsGPUESProducer = cms.ESProducer( "EcalIntercalibConstantsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalLaserAPDPNRatiosGPUESProducer = cms.ESProducer( "EcalLaserAPDPNRatiosGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalLaserAPDPNRatiosRefGPUESProducer = cms.ESProducer( "EcalLaserAPDPNRatiosRefGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalLaserAlphasGPUESProducer = cms.ESProducer( "EcalLaserAlphasGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalLinearCorrectionsGPUESProducer = cms.ESProducer( "EcalLinearCorrectionsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalPedestalsGPUESProducer = cms.ESProducer( "EcalPedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalPulseCovariancesGPUESProducer = cms.ESProducer( "EcalPulseCovariancesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalPulseShapesGPUESProducer = cms.ESProducer( "EcalPulseShapesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalRechitADCToGeVConstantGPUESProducer = cms.ESProducer( "EcalRechitADCToGeVConstantGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalRechitChannelStatusGPUESProducer = cms.ESProducer( "EcalRechitChannelStatusGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalSamplesCorrelationGPUESProducer = cms.ESProducer( "EcalSamplesCorrelationGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  flagMask = cms.PSet( 
    kBad = cms.vstring( 'kFaultyHardware',
      'kDead',
      'kKilled' ),
    kGood = cms.vstring( 'kGood' ),
    kRecovered = cms.vstring( 'kLeadingEdgeRecovered',
      'kTowerRecovered' ),
    kProblematic = cms.vstring( 'kPoorReco',
      'kPoorCalib',
      'kNoisy',
      'kSaturated' ),
    kWeird = cms.vstring( 'kWeird',
      'kDiWeird' ),
    kTime = cms.vstring( 'kOutOfTime' )
  ),
  dbstatusMask = cms.PSet( 
    kBad = cms.vstring( 'kNonRespondingIsolated',
      'kDeadVFE',
      'kDeadFE',
      'kNoDataNoTP' ),
    kGood = cms.vstring( 'kOk' ),
    kRecovered = cms.vstring(  ),
    kProblematic = cms.vstring( 'kDAC',
      'kNoLaser',
      'kNoisy',
      'kNNoisy',
      'kNNNoisy',
      'kNNNNoisy',
      'kNNNNNoisy',
      'kFixedG6',
      'kFixedG1',
      'kFixedG0' ),
    kWeird = cms.vstring(  ),
    kTime = cms.vstring(  )
  ),
  timeThresh = cms.double( 2.0 )
)
process.ecalTimeBiasCorrectionsGPUESProducer = cms.ESProducer( "EcalTimeBiasCorrectionsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.ecalTimeCalibConstantsGPUESProducer = cms.ESProducer( "EcalTimeCalibConstantsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalChannelPropertiesESProd = cms.ESProducer( "HcalChannelPropertiesEP" )
process.hcalChannelQualityGPUESProducer = cms.ESProducer( "HcalChannelQualityGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedEffectivePedestalWidthsGPUESProducer = cms.ESProducer( "HcalConvertedEffectivePedestalWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "withTopoEff" ),
  label1 = cms.string( "withTopoEff" ),
  label2 = cms.string( "" ),
  label3 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedEffectivePedestalsGPUESProducer = cms.ESProducer( "HcalConvertedEffectivePedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "withTopoEff" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedPedestalWidthsGPUESProducer = cms.ESProducer( "HcalConvertedPedestalWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  label3 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedPedestalsGPUESProducer = cms.ESProducer( "HcalConvertedPedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalDDDRecConstants = cms.ESProducer( "HcalDDDRecConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
process.hcalDDDSimConstants = cms.ESProducer( "HcalDDDSimConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
process.hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.hcalElectronicsMappingGPUESProducer = cms.ESProducer( "HcalElectronicsMappingGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalGainWidthsGPUESProducer = cms.ESProducer( "HcalGainWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalGainsGPUESProducer = cms.ESProducer( "HcalGainsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalLUTCorrsGPUESProducer = cms.ESProducer( "HcalLUTCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalQIECodersGPUESProducer = cms.ESProducer( "HcalQIECodersGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalQIETypesGPUESProducer = cms.ESProducer( "HcalQIETypesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  phase = cms.uint32( 1 ),
  RecoveredRecHitBits = cms.vstring( '' ),
  SeverityLevels = cms.VPSet( 
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellExcludeFromHBHENoiseSummary' ),
      RecHitFlags = cms.vstring( 'HBHEIsolatedNoise',
        'HFAnomalousHit' ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
        'HBHESpikeNoise',
        'HBHETS4TS5Noise',
        'HBHEOOTPU',
        'HBHEFlatNoise',
        'HBHENegativeNoise' ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HFLongShort',
        'HFS8S1Ratio',
        'HFPET',
        'HFSignalAsymmetry' ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerMask' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 12 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellHot' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellOff',
  'HcalCellDead' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 20 )
    )
  ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRecoParamsWithPulseShapesGPUESProducer = cms.ESProducer( "HcalRecoParamsWithPulseShapesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRespCorrsGPUESProducer = cms.ESProducer( "HcalRespCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalSiPMCharacteristicsGPUESProducer = cms.ESProducer( "HcalSiPMCharacteristicsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalSiPMParametersGPUESProducer = cms.ESProducer( "HcalSiPMParametersGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalTimeCorrsGPUESProducer = cms.ESProducer( "HcalTimeCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcal_db_producer = cms.ESProducer( "HcalDbProducer" )
process.hltBoostedDoubleSecondaryVertexAK8Computer = cms.ESProducer( "CandidateBoostedDoubleSecondaryVertexESProducer",
  useCondDB = cms.bool( False ),
  weightFile = cms.FileInPath( "RecoBTag/SecondaryVertex/data/BoostedDoubleSV_AK8_BDT_v4.weights.xml.gz" ),
  useGBRForest = cms.bool( True ),
  useAdaBoost = cms.bool( False )
)
process.hltCombinedSecondaryVertex = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( 2.0 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( -99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVRecoVertex',
    'CombinedSVPseudoVertex',
    'CombinedSVNoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
process.hltCombinedSecondaryVertexV2 = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( 2.0 )
  ),
  trackSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVIVFV2RecoVertex',
    'CombinedSVIVFV2PseudoVertex',
    'CombinedSVIVFV2NoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
process.hltDisplacedDijethltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltDisplacedDijethltESPTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" )
)
process.hltESPBwdAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdAnalyticalPropagator" ),
  PropagationDirection = cms.string( "oppositeToMomentum" )
)
process.hltESPBwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.hltESPChi2ChargeLooseMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeLooseMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator2000 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 2000.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator9ForHI = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutForHI" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeTightMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator100 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 40.0 ),
  nSigma = cms.double( 4.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator100" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator16 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator16" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator30 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator30" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator9 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator9" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPCloseComponentsMerger5D = cms.ESProducer( "CloseComponentsMergerESProducer5D",
  ComponentName = cms.string( "hltESPCloseComponentsMerger5D" ),
  MaxComponents = cms.int32( 12 ),
  DistanceMeasure = cms.string( "hltESPKullbackLeiblerDistance5D" )
)
process.hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDetachedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducerLong = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.2 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducerShortSig5 = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( False ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.05 ),
  maxImpactParameterSig = cms.double( 5.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDisplacedDijethltTrackCounting2D1stLoose = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.03 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDisplacedDijethltTrackCounting2D2ndLong = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.2 ),
  useSignedImpactParameterSig = cms.bool( True ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 2 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" )
)
process.hltESPEcalTrigTowerConstituentsMapBuilder = cms.ESProducer( "EcalTrigTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/EcalMapping/data/EndCap_TTMap.txt" )
)
process.hltESPElectronMaterialEffects = cms.ESProducer( "GsfMaterialEffectsESProducer",
  BetheHeitlerParametrization = cms.string( "BetheHeitler_cdfmom_nC6_O5.par" ),
  EnergyLossUpdator = cms.string( "GsfBetheHeitlerUpdator" ),
  ComponentName = cms.string( "hltESPElectronMaterialEffects" ),
  MultipleScatteringUpdator = cms.string( "MultipleScatteringUpdator" ),
  Mass = cms.double( 5.11E-4 ),
  BetheHeitlerCorrection = cms.int32( 2 )
)
process.hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  looperFitter = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPFwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.hltESPGlobalDetLayerGeometry = cms.ESProducer( "GlobalDetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPGlobalTrackingGeometryESProducer = cms.ESProducer( "GlobalTrackingGeometryESProducer" )
process.hltESPGsfElectronFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPGsfElectronFittingSmoother" ),
  Fitter = cms.string( "hltESPGsfTrajectoryFitter" ),
  Smoother = cms.string( "hltESPGsfTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPGsfTrajectoryFitter = cms.ESProducer( "GsfTrajectoryFitterESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectoryFitter" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  GeometricalPropagator = cms.string( "hltESPAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPGsfTrajectorySmoother = cms.ESProducer( "GsfTrajectorySmootherESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectorySmoother" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  ErrorRescaling = cms.double( 100.0 ),
  GeometricalPropagator = cms.string( "hltESPBwdAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPInitialStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPInitialStepChi2MeasurementEstimator36 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 36.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2MeasurementEstimator36" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" )
)
process.hltESPKullbackLeiblerDistance5D = cms.ESProducer( "DistanceBetweenComponentsESProducer5D",
  ComponentName = cms.string( "hltESPKullbackLeiblerDistance5D" ),
  DistanceMeasure = cms.string( "KullbackLeibler" )
)
process.hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPLowPtStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  SiStripQualityLabel = cms.string( "" ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TIB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TID = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TEC = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    )
  ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPMixedStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMixedTripletStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMuonDetLayerGeometryESProducer = cms.ESProducer( "MuonDetLayerGeometryESProducer" )
process.hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
)
process.hltESPPixelCPEFast = cms.ESProducer( "PixelCPEFastESProducerPhase1",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "hltESPPixelCPEFast" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPEFastHIon = cms.ESProducer( "PixelCPEFastESProducerHIonPhase1",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "hltESPPixelCPEFastHIon" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( False ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  eff_charge_cut_lowY = cms.double( 0.0 ),
  size_cutX = cms.double( 3.0 ),
  size_cutY = cms.double( 3.0 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  inflate_errors = cms.bool( False ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  NoTemplateErrorsWhenNoTrkAngles = cms.bool( False ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  IrradiationBiasCorrection = cms.bool( True ),
  DoCosmics = cms.bool( False ),
  isPhase2 = cms.bool( False ),
  SmallPitch = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPETemplateReco = cms.ESProducer( "PixelCPETemplateRecoESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  barrelTemplateID = cms.int32( 0 ),
  forwardTemplateID = cms.int32( 0 ),
  directoryWithTemplates = cms.int32( 0 ),
  speed = cms.int32( -2 ),
  UseClusterSplitter = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPETemplateReco" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPPixelLessStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelLessStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPPixelPairStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelPairStepChi2MeasurementEstimator25 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 25.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2MeasurementEstimator25" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelPairTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelPairTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPRKTrajectoryFitter" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPRKTrajectorySmoother" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( True ),
  ptMin = cms.double( -1.0 )
)
process.hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagator" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAny" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  distance = cms.double( 0.5 )
)
process.hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPStripCPEfromTrackAngle = cms.ESProducer( "StripCPEESProducer",
  ComponentName = cms.string( "hltESPStripCPEfromTrackAngle" ),
  ComponentType = cms.string( "StripCPEfromTrackAngle" ),
  parameters = cms.PSet( 
    mTIB_P1 = cms.double( 0.202 ),
    maxChgOneMIP = cms.double( 6000.0 ),
    mTEC_P0 = cms.double( -1.885 ),
    mTOB_P1 = cms.double( 0.253 ),
    mTEC_P1 = cms.double( 0.471 ),
    mLC_P2 = cms.double( 0.3 ),
    mLC_P1 = cms.double( 0.618 ),
    mTOB_P0 = cms.double( -1.026 ),
    mLC_P0 = cms.double( -0.326 ),
    useLegacyError = cms.bool( False ),
    mTIB_P0 = cms.double( -0.742 ),
    mTID_P1 = cms.double( 0.433 ),
    mTID_P0 = cms.double( -1.427 )
  )
)
process.hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderAngleAndTemplate" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPETemplateReco" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderWithoutAngle4PixelTriplets" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPTobTecStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmoother" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitter" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmoother" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPTobTecStepFitterSmoother" ),
  looperFitter = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTobTecStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.09 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPTrackAlgoPriorityOrder = cms.ESProducer( "TrackAlgoPriorityOrderESProducer",
  ComponentName = cms.string( "hltESPTrackAlgoPriorityOrder" ),
  algoOrder = cms.vstring(  ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrackSelectionTfCKF = cms.ESProducer( "TfGraphDefProducer",
  ComponentName = cms.string( "hltESPTrackSelectionTfCKF" ),
  FileName = cms.FileInPath( "RecoTracker/FinalTrackSelectors/data/TrackTfClassifier/CKF_Run3_12_5_0_pre5.pb" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrackerRecoGeometryESProducer = cms.ESProducer( "TrackerRecoGeometryESProducer",
  usePhase2Stacks = cms.bool( False ),
  trackerGeometryLabel = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.5 ),
  ValidHitBonus = cms.double( 100.0 ),
  MissingHitPenalty = cms.double( 0.0 ),
  allowSharedFirstHit = cms.bool( False )
)
process.hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltOnlineBeamSpotESProducer = cms.ESProducer( "OnlineBeamSpotESProducer",
  timeThreshold = cms.int32( 48 ),
  sigmaZThreshold = cms.double( 2.0 ),
  sigmaXYThreshold = cms.double( 4.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltPixelTracksCleanerBySharedHits = cms.ESProducer( "PixelTrackCleanerBySharedHitsESProducer",
  ComponentName = cms.string( "hltPixelTracksCleanerBySharedHits" ),
  useQuadrupletAlgo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltTrackCleaner = cms.ESProducer( "TrackCleanerESProducer",
  ComponentName = cms.string( "hltTrackCleaner" ),
  appendToDataLabel = cms.string( "" )
)
process.hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.multipleScatteringParametrisationMakerESProducer = cms.ESProducer( "MultipleScatteringParametrisationMakerESProducer",
  appendToDataLabel = cms.string( "" )
)
process.muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( True ),
  includeGEM = cms.bool( True ),
  includeME0 = cms.bool( False )
)
process.muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.1 ),
  ValidHitBonus = cms.double( 1000.0 ),
  MissingHitPenalty = cms.double( 1.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "ParabolicMf" )
)
process.preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.siPixelGainCalibrationForHLTGPU = cms.ESProducer( "SiPixelGainCalibrationForHLTGPUESProducer",
  appendToDataLabel = cms.string( "" )
)
process.siPixelQualityESProducer = cms.ESProducer( "SiPixelQualityESProducer",
  siPixelQualityFromDbLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiPixelQualityFromDbRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiPixelDetVOffRcd" ),
      tag = cms.string( "" )
    )
  ),
  appendToDataLabel = cms.string( "" )
)
process.siPixelROCsStatusAndMappingWrapperESProducer = cms.ESProducer( "SiPixelROCsStatusAndMappingWrapperESProducer",
  ComponentName = cms.string( "" ),
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer" )
process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer( "SiStripBackPlaneCorrectionDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  BackPlaneCorrectionPeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  ),
  BackPlaneCorrectionDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  )
)
process.siStripLorentzAngleDepESProducer = cms.ESProducer( "SiStripLorentzAngleDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  LorentzAnglePeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  ),
  LorentzAngleDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  )
)
process.sistripconn = cms.ESProducer( "SiStripConnectivity" )
process.trackerTopology = cms.ESProducer( "TrackerTopologyEP",
  appendToDataLabel = cms.string( "" )
)

process.DQMStore = cms.Service( "DQMStore",
    verbose = cms.untracked.int32( 0 ),
    saveByLumi = cms.untracked.bool( False ),
    MEsToSave = cms.untracked.vstring(  ),
    trackME = cms.untracked.string( "" ),
    assertLegacySafe = cms.untracked.bool( False ),
    enableMultiThread = cms.untracked.bool( True ),
    onlineMode = cms.untracked.bool( False )
)
process.EvFDaqDirector = cms.Service( "EvFDaqDirector",
    baseDir = cms.untracked.string( "." ),
    buBaseDir = cms.untracked.string( "." ),
    buBaseDirsAll = cms.untracked.vstring(  ),
    runNumber = cms.untracked.uint32( 0 ),
    useFileBroker = cms.untracked.bool( False ),
    fileBrokerHostFromCfg = cms.untracked.bool( True ),
    fileBrokerHost = cms.untracked.string( "InValid" ),
    fileBrokerPort = cms.untracked.string( "8080" ),
    fileBrokerKeepAlive = cms.untracked.bool( True ),
    fileBrokerUseLocalLock = cms.untracked.bool( True ),
    fuLockPollInterval = cms.untracked.uint32( 2000 ),
    outputAdler32Recheck = cms.untracked.bool( False ),
    requireTransfersPSet = cms.untracked.bool( False ),
    selectedTransferMode = cms.untracked.string( "" ),
    directorIsBU = cms.untracked.bool( False ),
    hltSourceDirectory = cms.untracked.string( "" ),
    mergingPset = cms.untracked.string( "" )
)
process.FastMonitoringService = cms.Service( "FastMonitoringService",
    sleepTime = cms.untracked.int32( 1 ),
    fastMonIntervals = cms.untracked.uint32( 2 ),
    filePerFwkStream = cms.untracked.bool( False ),
    verbose = cms.untracked.bool( False )
)
process.FastTimerService = cms.Service( "FastTimerService",
    printEventSummary = cms.untracked.bool( False ),
    printRunSummary = cms.untracked.bool( True ),
    printJobSummary = cms.untracked.bool( True ),
    writeJSONSummary = cms.untracked.bool( False ),
    jsonFileName = cms.untracked.string( "resources.json" ),
    enableDQM = cms.untracked.bool( True ),
    enableDQMbyModule = cms.untracked.bool( False ),
    enableDQMbyPath = cms.untracked.bool( False ),
    enableDQMbyLumiSection = cms.untracked.bool( True ),
    enableDQMbyProcesses = cms.untracked.bool( True ),
    enableDQMTransitions = cms.untracked.bool( False ),
    dqmTimeRange = cms.untracked.double( 2000.0 ),
    dqmTimeResolution = cms.untracked.double( 5.0 ),
    dqmMemoryRange = cms.untracked.double( 1000000.0 ),
    dqmMemoryResolution = cms.untracked.double( 5000.0 ),
    dqmPathTimeRange = cms.untracked.double( 100.0 ),
    dqmPathTimeResolution = cms.untracked.double( 0.5 ),
    dqmPathMemoryRange = cms.untracked.double( 1000000.0 ),
    dqmPathMemoryResolution = cms.untracked.double( 5000.0 ),
    dqmModuleTimeRange = cms.untracked.double( 40.0 ),
    dqmModuleTimeResolution = cms.untracked.double( 0.2 ),
    dqmModuleMemoryRange = cms.untracked.double( 100000.0 ),
    dqmModuleMemoryResolution = cms.untracked.double( 500.0 ),
    dqmLumiSectionsRange = cms.untracked.uint32( 2500 ),
    dqmPath = cms.untracked.string( "HLT/TimerService" ),
)
process.MessageLogger = cms.Service( "MessageLogger",
    suppressWarning = cms.untracked.vstring( 'hltL3MuonsIOHit',
      'hltL3MuonsOIHit',
      'hltL3MuonsOIState',
      'hltLightPFTracks',
      'hltOnlineBeamSpot',
      'hltPixelTracks',
      'hltPixelTracksForHighMult',
      'hltSiPixelClusters',
      'hltSiPixelDigis' ),
    suppressFwkInfo = cms.untracked.vstring(  ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    debugModules = cms.untracked.vstring(  ),
    cerr = cms.untracked.PSet( 
      INFO = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      noTimeStamps = cms.untracked.bool( False ),
      FwkReport = cms.untracked.PSet( 
        reportEvery = cms.untracked.int32( 1 ),
        limit = cms.untracked.int32( 0 )
      ),
      default = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) ),
      Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      FwkSummary = cms.untracked.PSet( 
        reportEvery = cms.untracked.int32( 1 ),
        limit = cms.untracked.int32( 10000000 )
      ),
      threshold = cms.untracked.string( "INFO" ),
      enableStatistics = cms.untracked.bool( False )
    ),
    suppressError = cms.untracked.vstring( 'hltL3TkTracksFromL2IOHit',
      'hltL3TkTracksFromL2OIHit',
      'hltL3TkTracksFromL2OIState',
      'hltOnlineBeamSpot' )
)
process.PrescaleService = cms.Service( "PrescaleService",
    lvl1Labels = cms.vstring( 'Emergency',
      'HLTPhysics+ZeroBias',
      '2p3E34',
      '2p2E34',
      '2p1E34',
      '2p0E34',
      '2p0E34+ZeroBias+HLTPhysics',
      '1p9E34',
      '1p8E34',
      '1p7E34',
      '1p6E34',
      '1p5E34',
      '1p4E34',
      '1p2E34',
      '1p1E34',
      '0p9E34',
      '0p7E34',
      '0p6E34',
      'OnlyMuons',
      '2p0E34_NoMuShower',
      '2p0E34_NoEcalTiming',
      'HIon',
      'PRef' ),
    prescaleTable = cms.VPSet(  *(
      cms.PSet(  pathName = cms.string( "AlCa_EcalPhiSym_v15" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_EcalEtaEBonly_v20" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_EcalEtaEEonly_v20" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_EcalPi0EBonly_v20" ),
        prescales = cms.vuint32( 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_EcalPi0EEonly_v20" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_RPCMuonNormalisation_v18" ),
        prescales = cms.vuint32( 12, 12, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_LumiPixelsCounts_ZeroBias_v8" ),
        prescales = cms.vuint32( 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_PFJet40_v26" ),
        prescales = cms.vuint32( 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_PFJet40_CPUOnly_v5" ),
        prescales = cms.vuint32( 2, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 2 )
      ),
      cms.PSet(  pathName = cms.string( "AlCa_AK8PFJet40_v21" ),
        prescales = cms.vuint32( 20, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 0, 20, 20, 1, 20 )
      ),
      cms.PSet(  pathName = cms.string( "DQM_PixelReconstruction_v8" ),
        prescales = cms.vuint32( 0, 0, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 0, 10000 )
      ),
      cms.PSet(  pathName = cms.string( "DQM_EcalReconstruction_v8" ),
        prescales = cms.vuint32( 0, 0, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 0, 10000 )
      ),
      cms.PSet(  pathName = cms.string( "DQM_HcalReconstruction_v6" ),
        prescales = cms.vuint32( 0, 0, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 0, 10000 )
      ),
      cms.PSet(  pathName = cms.string( "DST_ZeroBias_v5" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 15 )
      ),
      cms.PSet(  pathName = cms.string( "DST_Physics_v10" ),
        prescales = cms.vuint32( 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 )
      ),
      cms.PSet(  pathName = cms.string( "DST_Run3_DoubleMuon_PFScoutingPixelTracking_v2" ),
        prescales = cms.vuint32( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "DST_Run3_DoubleEG_PFScoutingPixelTracking_v2" ),
        prescales = cms.vuint32( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "DST_Run3_EG30_PFScoutingPixelTracking_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "DST_Run3_JetHT_PFScoutingPixelTracking_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "DST_Run3_DoubleMu3_PFScoutingPixelTracking_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "DST_Run3_EG16_EG12_PFScoutingPixelTracking_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "DST_HLTMuon_Run3_PFScoutingPixelTracking_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_EphemeralPhysics_v5" ),
        prescales = cms.vuint32( 0, 50, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_EphemeralZeroBias_v5" ),
        prescales = cms.vuint32( 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HcalNZS_v17" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HcalPhiSym_v19" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Random_v3" ),
        prescales = cms.vuint32( 60, 60, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 1, 40 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Physics_v10" ),
        prescales = cms.vuint32( 25, 25, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 1, 50 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ZeroBias_v9" ),
        prescales = cms.vuint32( 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 1, 1000 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ZeroBias_Alignment_v4" ),
        prescales = cms.vuint32( 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 1, 1000 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ZeroBias_Beamspot_v10" ),
        prescales = cms.vuint32( 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 1, 1000 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ZeroBias_IsolatedBunches_v8" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ZeroBias_FirstBXAfterTrain_v6" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ZeroBias_FirstCollisionAfterAbortGap_v8" ),
        prescales = cms.vuint32( 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ZeroBias_FirstCollisionInTrain_v7" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ZeroBias_LastCollisionInTrain_v6" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT300_Beamspot_v17" ),
        prescales = cms.vuint32( 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 60, 60, 60, 60, 60, 60, 60, 80, 80, 80, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoTrackHB_v10" ),
        prescales = cms.vuint32( 6, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoTrackHE_v10" ),
        prescales = cms.vuint32( 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet40_GPUvsCPU_v3" ),
        prescales = cms.vuint32( 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet400_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet420_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet450_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet470_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet500_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8DiPFJet250_250_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8DiPFJet260_260_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8DiPFJet270_270_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8DiPFJet280_280_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8DiPFJet290_290_MassSD30_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8DiPFJet250_250_MassSD50_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8DiPFJet260_260_MassSD50_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CaloJet500_NoJetID_v18" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CaloJet550_NoJetID_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Trimuon5_3p5_2_Upsilon_Muon_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v9" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle25_CaloIdL_MW_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle27_CaloIdL_MW_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle33_CaloIdL_MW_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle24_eta2p1_WPTight_Gsf_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v26" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v26" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu27_Ele37_CaloIdL_MW_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu37_Ele27_CaloIdL_MW_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu37_TkMu27_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_3_Bs_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_3_Jpsi_v21" ),
        prescales = cms.vuint32( 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_3_LowMass_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_LowMass_Displaced_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu0_L1DoubleMu_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu4_L1DoubleMu_v7" ),
        prescales = cms.vuint32( 0, 0, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_3_Photon4_BsToMMG_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_Trk_Tau3mu_v18" ),
        prescales = cms.vuint32( 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_TkMu_DsTau3Mu_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v14" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_MuMuTrk_Displaced_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu3_PFJet40_v22" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu7p5_L2Mu2_Jpsi_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu7p5_L2Mu2_Upsilon_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu3_L1SingleMu5orSingleMu7_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePhoton33_CaloIdL_v13" ),
        prescales = cms.vuint32( 0, 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 64, 64, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePhoton70_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePhoton85_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele30_WPTight_Gsf_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele32_WPTight_Gsf_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele35_WPTight_Gsf_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele38_WPTight_Gsf_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele40_WPTight_Gsf_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele32_WPTight_Gsf_L1DoubleEG_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu20_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu27_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_UncorrectedJetE30_NoBPTX_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_UncorrectedJetE30_NoBPTX3BX_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_UncorrectedJetE60_NoBPTX3BX_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_UncorrectedJetE70_NoBPTX3BX_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1SingleMuCosmics_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu10_NoVertex_NoBPTX3BX_v10" ),
        prescales = cms.vuint32( 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 80, 80, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu10_NoVertex_NoBPTX_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v9" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu23NoVtx_2Cha_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu23NoVtx_2Cha_CosmicSeed_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu50_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu23NoVtx_2Cha_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v20" ),
        prescales = cms.vuint32( 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v9" ),
        prescales = cms.vuint32( 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v21" ),
        prescales = cms.vuint32( 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v9" ),
        prescales = cms.vuint32( 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v9" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v9" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu30_TkMu0_Psi_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu30_TkMu0_Upsilon_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu25_TkMu0_Phi_v14" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu15_v9" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu20_v18" ),
        prescales = cms.vuint32( 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu27_v19" ),
        prescales = cms.vuint32( 0, 0, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu50_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu55_v9" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CascadeMu100_v9" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HighPtTkMu100_v8" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve40_v20" ),
        prescales = cms.vuint32( 0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 16, 16, 16, 12, 12, 12, 6, 0, 25, 25, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve60_v20" ),
        prescales = cms.vuint32( 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 0, 5, 5, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve80_v20" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve140_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve200_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve260_v20" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 64, 64, 64, 32, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve320_v20" ),
        prescales = cms.vuint32( 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 36, 36, 36, 24, 24, 24, 12, 0, 48, 48, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve400_v20" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 12, 12, 12, 8, 8, 8, 4, 0, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve500_v20" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 2, 2, 2, 1, 0, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve60_HFJEC_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve80_HFJEC_v23" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve100_HFJEC_v23" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve160_HFJEC_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve220_HFJEC_v22" ),
        prescales = cms.vuint32( 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 6, 6, 4, 4, 4, 2, 0, 8, 8, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve260_HFJEC_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve300_HFJEC_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet40_v22" ),
        prescales = cms.vuint32( 0, 0, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 0, 250, 250, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet60_v21" ),
        prescales = cms.vuint32( 0, 0, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 0, 24, 24, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet80_v22" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet140_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet200_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet260_v22" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet320_v22" ),
        prescales = cms.vuint32( 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 48, 48, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet400_v22" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet450_v22" ),
        prescales = cms.vuint32( 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet500_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet550_v17" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet40_v27" ),
        prescales = cms.vuint32( 0, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 30, 30, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet60_v27" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet80_v27" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet110_v6" ),
        prescales = cms.vuint32( 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet140_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet200_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet260_v26" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet320_v26" ),
        prescales = cms.vuint32( 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 32, 32, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet400_v26" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet450_v27" ),
        prescales = cms.vuint32( 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet500_v27" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet550_v17" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd40_v25" ),
        prescales = cms.vuint32( 0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 0, 25, 25, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd60_v25" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd80_v24" ),
        prescales = cms.vuint32( 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd140_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd200_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd260_v25" ),
        prescales = cms.vuint32( 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd320_v25" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd400_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd450_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJetFwd500_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd15_v9" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd25_v9" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd40_v21" ),
        prescales = cms.vuint32( 0, 0, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 0, 750, 750, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd60_v20" ),
        prescales = cms.vuint32( 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd80_v20" ),
        prescales = cms.vuint32( 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 9, 9, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd140_v20" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd200_v20" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd260_v21" ),
        prescales = cms.vuint32( 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd320_v21" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd400_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd450_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd500_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT180_v23" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT250_v23" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT370_v23" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT430_v23" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT510_v23" ),
        prescales = cms.vuint32( 0, 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 0, 256, 256, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT590_v23" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT680_v23" ),
        prescales = cms.vuint32( 0, 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 64, 64, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT780_v23" ),
        prescales = cms.vuint32( 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 32, 32, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT890_v23" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT1050_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT500_PFMET100_PFMHT100_IDTight_v18" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT500_PFMET110_PFMHT110_IDTight_v18" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT700_PFMET85_PFMHT85_IDTight_v18" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT800_PFMET75_PFMHT75_IDTight_v18" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET120_PFMHT120_IDTight_v26" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET130_PFMHT130_IDTight_v26" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET140_PFMHT140_IDTight_v26" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET120_PFMHT120_IDTight_PFHT60_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne140_PFMHT140_IDTight_v17" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v26" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1ETMHadSeeds_v6" ),
        prescales = cms.vuint32( 0, 0, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 0, 1024, 1024, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CaloMHT90_v10" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CaloMET90_NotCleaned_v10" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CaloMET350_NotCleaned_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET200_NotCleaned_v15" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET250_NotCleaned_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET300_NotCleaned_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET200_BeamHaloCleaned_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne200_BeamHaloCleaned_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_MET105_IsoTrk50_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_MET120_IsoTrk50_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12eta2p3_v7" ),
        prescales = cms.vuint32( 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 0, 20, 20, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12eta2p3_PFJet40_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePFJets40_PFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePFJets100_PFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePFJets200_PFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePFJets350_PFBTagDeepJet_p71_v8" ),
        prescales = cms.vuint32( 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 7, 7, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon300_NoHE_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_v18" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v25" ),
        prescales = cms.vuint32( 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v17" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet20_Mu5_v19" ),
        prescales = cms.vuint32( 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet40_Mu5_v19" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet70_Mu5_v19" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet110_Mu5_v19" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet170_Mu5_v18" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4Jet300_Mu5_v18" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8DiJet170_Mu5_v15" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8Jet170_DoubleMu5_v8" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8Jet300_Mu5_v18" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v13" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon33_v11" ),
        prescales = cms.vuint32( 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 32, 32, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon50_v19" ),
        prescales = cms.vuint32( 0, 0, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 0, 6144, 6144, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon75_v19" ),
        prescales = cms.vuint32( 0, 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 0, 512, 512, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon90_v19" ),
        prescales = cms.vuint32( 0, 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 0, 512, 512, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon120_v19" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon150_v13" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon175_v21" ),
        prescales = cms.vuint32( 0, 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 64, 64, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon200_v20" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon30EB_TightID_TightIso_v7" ),
        prescales = cms.vuint32( 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 6, 6, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon50EB_TightID_TightIso_v4" ),
        prescales = cms.vuint32( 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 48, 48, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon75EB_TightID_TightIso_v4" ),
        prescales = cms.vuint32( 0, 0, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 0, 24, 24, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon90EB_TightID_TightIso_v4" ),
        prescales = cms.vuint32( 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon110EB_TightID_TightIso_v8" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon130EB_TightID_TightIso_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon150EB_TightID_TightIso_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon175EB_TightID_TightIso_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon200EB_TightID_TightIso_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon100EBHE10_v8" ),
        prescales = cms.vuint32( 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 32, 32, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon50_R9Id90_HE10_IsoM_v20" ),
        prescales = cms.vuint32( 0, 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 0, 256, 256, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon75_R9Id90_HE10_IsoM_v20" ),
        prescales = cms.vuint32( 0, 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 64, 64, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon90_R9Id90_HE10_IsoM_v20" ),
        prescales = cms.vuint32( 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 32, 32, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon120_R9Id90_HE10_IsoM_v20" ),
        prescales = cms.vuint32( 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon165_R9Id90_HE10_IsoM_v21" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton_MVATest" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon35_TwoProngs35_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_TwoProngs35_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_L1_NoOS_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_v14" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_NoVertexing_v14" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v13" ),
        prescales = cms.vuint32( 0, 0, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v13" ),
        prescales = cms.vuint32( 0, 0, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi3p5_Muon2_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_4p5_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_4p5er2p0_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v13" ),
        prescales = cms.vuint32( 0, 0, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_NoVertexing_v13" ),
        prescales = cms.vuint32( 0, 0, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_0er1p5R_v13" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_0er1p5_v14" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_v14" ),
        prescales = cms.vuint32( 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_4_v14" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_4R_v13" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_TM530_v12" ),
        prescales = cms.vuint32( 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TripleMu_5_3_3_Mass3p8_DZ_v14" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TripleMu_10_5_5_DZ_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TripleMu_12_10_5_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v10" ),
        prescales = cms.vuint32( 0, 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v10" ),
        prescales = cms.vuint32( 0, 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_Jpsi_Displaced_v13" ),
        prescales = cms.vuint32( 0, 0, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_Jpsi_NoVertexing_v13" ),
        prescales = cms.vuint32( 0, 0, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_JpsiTrkTrk_Displaced_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_JpsiTrk_Bc_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu43NoFiltersNoVtx_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu48NoFiltersNoVtx_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiJet110_35_Mjj650_PFMET110_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiJet110_35_Mjj650_PFMET120_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiJet110_35_Mjj650_PFMET130_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TripleJet110_35_35_Mjj650_PFMET110_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TripleJet110_35_35_Mjj650_PFMET120_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TripleJet110_35_35_Mjj650_PFMET130_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele28_HighEta_SC20_Mass55_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele15_IsoVVVL_PFHT450_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele50_IsoVVVL_PFHT450_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele15_IsoVVVL_PFHT600_v26" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v23" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu15_IsoVVVL_PFHT450_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu50_IsoVVVL_PFHT450_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu15_IsoVVVL_PFHT600_v25" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v8" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v8" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v8" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v8" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v8" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v8" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon10_Upsilon_y1p4_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon12_Upsilon_y1p4_v8" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon14_Phi_Barrel_Seagulls_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon25_Jpsi_v20" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon14_PsiPrime_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon14_PsiPrime_noCorrL1_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon18_PsiPrime_v20" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon18_PsiPrime_noCorrL1_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon24_Upsilon_noCorrL1_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon24_Phi_noCorrL1_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Dimuon25_Jpsi_noCorrL1_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v23" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v23" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v23" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleIsoMu20_eta2p1_v13" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_v18" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu17_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu19_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu17_Photon30_IsoCaloId_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v22" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v24" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele115_CaloIdVT_GsfTrkIdT_v21" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele135_CaloIdVT_GsfTrkIdT_v14" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v15" ),
        prescales = cms.vuint32( 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 0, 128, 128, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT400_SixPFJet32_v15" ),
        prescales = cms.vuint32( 0, 0, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 0, 65, 65, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT400_SixPFJet32_PNet2BTagMean0p50_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_v7" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT450_SixPFJet36_v14" ),
        prescales = cms.vuint32( 0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 0, 25, 25, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT450_SixPFJet36_PNetBTag0p35_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_v7" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT400_FivePFJet_100_100_60_30_30_v14" ),
        prescales = cms.vuint32( 0, 0, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 0, 40, 40, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT350_v25" ),
        prescales = cms.vuint32( 0, 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 0, 256, 256, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_ECALHT800_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiSC30_18_EIso_AND_HE_Mass70_v20" ),
        prescales = cms.vuint32( 0, 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 0, 256, 256, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon20_HoverELoose_v16" ),
        prescales = cms.vuint32( 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon30_HoverELoose_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v5" ),
        prescales = cms.vuint32( 0, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CDC_L2cosmic_10_er1p0_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CDC_L2cosmic_5p5_er1p0_v6" ),
        prescales = cms.vuint32( 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v15" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu18_Mu9_SameSign_v10" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v12" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v16" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_TripleMu_5_3_3_Mass3p8_DCA_v9" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet103_88_75_15_v11" ),
        prescales = cms.vuint32( 0, 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 0, 256, 256, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet105_88_76_15_v11" ),
        prescales = cms.vuint32( 0, 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 0, 512, 512, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet111_90_80_15_v11" ),
        prescales = cms.vuint32( 0, 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 0, 512, 512, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT280_QuadPFJet30_v3" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p60_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT280_QuadPFJet35_PNet2BTagMean0p60_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFHT340_QuadPFJet70_50_40_40_PNet2BTagMean0p70_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet100_88_70_30_v4" ),
        prescales = cms.vuint32( 0, 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 0, 256, 256, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet105_88_75_30_v3" ),
        prescales = cms.vuint32( 0, 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 0, 256, 256, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet111_90_80_30_v3" ),
        prescales = cms.vuint32( 0, 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 0, 256, 256, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet220_SoftDropMass40_v7" ),
        prescales = cms.vuint32( 0, 0, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 0, 120, 120, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet230_SoftDropMass40_v7" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet425_SoftDropMass40_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_AK8PFJet450_SoftDropMass40_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu10NoVtx_2Cha_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L3Mu10NoVtx_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L3Mu10NoVtx_DxyMin0p01cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu10NoVtx_2Cha_CosmicSeed_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v6" ),
        prescales = cms.vuint32( 0, 0, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v2" ),
        prescales = cms.vuint32( 0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 0, 25, 25, 25, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT350_DelayedJet40_SingleDelay1p5To3p5nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT350_DelayedJet40_SingleDelay1p6To3p5nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT350_DelayedJet40_SingleDelay1p75To3p5nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v5" ),
        prescales = cms.vuint32( 0, 0, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 0, 2500, 2500, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v5" ),
        prescales = cms.vuint32( 0, 0, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 0, 500, 500, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay1To1p5nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay1p1To1p6nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay1p25To1p75nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v5" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v5" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v6" ),
        prescales = cms.vuint32( 0, 0, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 0, 500, 500, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v7" ),
        prescales = cms.vuint32( 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 50, 50, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay2p5To4nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay2p6To4nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay2p75To4nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v5" ),
        prescales = cms.vuint32( 0, 0, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 0, 1000, 1000, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v5" ),
        prescales = cms.vuint32( 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 50, 50, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v5" ),
        prescales = cms.vuint32( 0, 0, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 0, 500, 500, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v5" ),
        prescales = cms.vuint32( 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 50, 50, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1Mu6HT240_v5" ),
        prescales = cms.vuint32( 0, 0, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 0, 1000, 1000, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT350_v3" ),
        prescales = cms.vuint32( 0, 0, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 2060, 0, 2060, 2060, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT425_v15" ),
        prescales = cms.vuint32( 0, 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 0, 512, 512, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT360_DisplacedDijet40_Inclusive1PtrkShortSig5_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT360_DisplacedDijet45_Inclusive1PtrkShortSig5_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT390_DisplacedDijet40_Inclusive1PtrkShortSig5_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT390_DisplacedDijet45_Inclusive1PtrkShortSig5_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT390eta2p0_DisplacedDijet40_Inclusive1PtrkShortSig5_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT400_DisplacedDijet40_DisplacedTrack_v19" ),
        prescales = cms.vuint32( 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT430_DisplacedDijet40_DisplacedTrack_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT550_DisplacedDijet60_Inclusive_v19" ),
        prescales = cms.vuint32( 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 16, 16, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT650_DisplacedDijet60_Inclusive_v19" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CaloMET60_DTCluster50_v7" ),
        prescales = cms.vuint32( 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 50, 50, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CaloMET60_DTClusterNoMB1S50_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1MET_DTCluster50_v7" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1MET_DTClusterNoMB1S50_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CscCluster_Loose_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CscCluster_Medium_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_CscCluster_Tight_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleCscCluster75_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleCscCluster100_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1CSCShower_DTCluster50_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1CSCShower_DTCluster75_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFMET105_IsoTrk50_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_L1SingleLLPJet_v3" ),
        prescales = cms.vuint32( 0, 0, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 0, 1000, 1000, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_v7" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v7" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10Time1ns_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10Time1p2ns_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10Time1p4ns_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10Time1p6ns_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10Time1p8ns_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10Time2ns_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10sminlt0p1_v6" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10sminlt0p12_v6" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DiPhoton10_CaloIdL_v6" ),
        prescales = cms.vuint32( 0, 0, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 0, 20000, 20000, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle4_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle4p5_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle5_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle5p5_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle6_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle6p5_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle7_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle7p5_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle8_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle8p5_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle9_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle9p5_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle10_eta1p22_mMax6_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle4_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle4p5_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle5_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle5p5_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle6_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle6p5_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle7_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle7p5_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle8_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle8p5_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle9_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle9p5_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle10_eta1p22_mMax6_dz0p8_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle4_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle4p5_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle5_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle5p5_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle6_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle6p5_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle7_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle7p5_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle8_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle8p5_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle9_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle9p5_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleEle10_eta1p22_mMax6_trkHits10_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_SingleEle8_v5" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_SingleEle8_SingleEGL1_v5" ),
        prescales = cms.vuint32( 0, 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1, 1, 0, 10, 10, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Mu50_L1SingleMuShower_v5" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_OneProng32_v3" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon32_OneProng32_M50To105_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_M5to80_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet105_40_Mjj1000_Detajj3p5_TriplePFJet_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet110_40_Mjj1000_Detajj3p5_TriplePFJet_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet125_45_Mjj1000_Detajj3p5_TriplePFJet_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet125_45_Mjj720_Detajj3p0_TriplePFJet_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet70_40_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet75_45_Mjj650_DiPFJet60_v1" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingQuadJet_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingFiveJet_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet75_45_Mjj600_Detajj2p5_DiPFJet60_JetMatchingSixJet_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet75_40_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet80_45_Mjj500_Detajj2p5_PFMET85_TriplePFJet_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet90_40_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet95_45_Mjj600_Detajj2p5_Mu3_TrkIsoVVL_TriplePFJet_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon12_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Photon17_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Photon22_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele12_eta2p1_WPTight_Gsf_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet45_Mjj500_Detajj2p5_Ele17_eta2p1_WPTight_Gsf_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet50_Mjj500_Detajj2p5_Ele22_eta2p1_WPTight_Gsf_v3" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet110_40_Mjj1050_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet125_45_Mjj1050_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet80_45_Mjj550_PFMETNoMu85_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet95_45_Mjj650_Mu3_TrkIsoVVL_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet45_Mjj550_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet50_Mjj550_Photon22_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_VBF_DiPFJet50_Mjj500_Ele22_eta2p1_WPTight_Gsf_v2" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet200_TimeLtNeg2p5ns_v4" ),
        prescales = cms.vuint32( 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 100, 100, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PFJet200_TimeGt2p5ns_v4" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon50_TimeLtNeg2p5ns_v3" ),
        prescales = cms.vuint32( 0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 0, 25, 25, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Photon50_TimeGt2p5ns_v3" ),
        prescales = cms.vuint32( 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 1, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PPSMaxTracksPerArm1_v5" ),
        prescales = cms.vuint32( 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PPSMaxTracksPerRP4_v5" ),
        prescales = cms.vuint32( 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_PPSRandom_v1" ),
        prescales = cms.vuint32( 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "MC_ReducedIterativeTracking_v18" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_CaloBTagDeepCSV_v14" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_PFBTagDeepCSV_v16" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_PFBTagDeepJet_v7" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_AK4CaloJets_v15" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_AK4CaloJetsFromPV_v14" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_CaloHT_v14" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_AK8CaloHT_v14" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_CaloMHT_v14" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_AK4PFJets_v23" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_PFHT_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_AK8PFJets_v23" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_AK8TrimPFJets_v23" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_AK8PFHT_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_CaloMET_v14" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_CaloMET_JetIdCleaned_v15" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_PFMET_v23" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_PFMHT_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_Egamma_Open_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_Egamma_Open_Unseeded_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_Ele5_WPTight_Gsf_v14" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v21" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v19" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_DoubleEle5_CaloIdL_MW_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_IsoMu_v21" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_DoubleMu_TrkIsoVVL_DZ_v17" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_DoubleMuNoFiltersNoVtx_v13" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_QuadPFJet100_75_50_30_PNet2CvsL0p3And1CvsL0p5_VBF3Tight_v4" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "MC_Run3_PFScoutingPixelTracking_v22" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EGamma0" ),
        prescales = cms.vuint32( 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EGamma1" ),
        prescales = cms.vuint32( 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralHLTPhysics0" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralHLTPhysics1" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralHLTPhysics2" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralHLTPhysics3" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralHLTPhysics4" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralHLTPhysics5" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralHLTPhysics6" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralHLTPhysics7" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralZeroBias0" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralZeroBias1" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralZeroBias2" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralZeroBias3" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralZeroBias4" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralZeroBias5" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralZeroBias6" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EphemeralZeroBias7" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_JetMET0" ),
        prescales = cms.vuint32( 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_JetMET1" ),
        prescales = cms.vuint32( 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_Muon0" ),
        prescales = cms.vuint32( 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_Muon1" ),
        prescales = cms.vuint32( 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_OnlineMonitor" ),
        prescales = cms.vuint32( 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 0, 25 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingDoubleMuonLowMass0" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingDoubleMuonLowMass1" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingDoubleMuonLowMass2" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingDoubleMuonLowMass3" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingDoubleMuonLowMass4" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingDoubleMuonLowMass5" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingDoubleMuonLowMass6" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingDoubleMuonLowMass7" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingVBF0" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingVBF1" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingVBF2" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingVBF3" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingVBF4" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingVBF5" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingVBF6" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_ParkingVBF7" ),
        prescales = cms.vuint32( 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 )
      )
) ),
    lvl1DefaultLabel = cms.string( "2p0E34" ),
    forceDefault = cms.bool( False )
)
process.ThroughputService = cms.Service( "ThroughputService",
    eventRange = cms.untracked.uint32( 10000 ),
    eventResolution = cms.untracked.uint32( 1 ),
    printEventSummary = cms.untracked.bool( False ),
    enableDQM = cms.untracked.bool( True ),
    dqmPathByProcesses = cms.untracked.bool( True ),
    dqmPath = cms.untracked.string( "HLT/Throughput" ),
    timeRange = cms.untracked.double( 60000.0 ),
    timeResolution = cms.untracked.double( 5.828 )
)

process.hltTriggerType = cms.EDFilter( "HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32( 1 )
)
process.hltGtStage2Digis = cms.EDProducer( "L1TRawToDigi",
    FedIds = cms.vint32( 1404 ),
    Setup = cms.string( "stage2::GTSetup" ),
    FWId = cms.uint32( 0 ),
    DmxFWId = cms.uint32( 0 ),
    FWOverride = cms.bool( False ),
    TMTCheck = cms.bool( True ),
    CTP7 = cms.untracked.bool( False ),
    MTF7 = cms.untracked.bool( False ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    lenSlinkHeader = cms.untracked.int32( 8 ),
    lenSlinkTrailer = cms.untracked.int32( 8 ),
    lenAMCHeader = cms.untracked.int32( 8 ),
    lenAMCTrailer = cms.untracked.int32( 0 ),
    lenAMC13Header = cms.untracked.int32( 8 ),
    lenAMC13Trailer = cms.untracked.int32( 8 ),
    debug = cms.untracked.bool( False ),
    MinFeds = cms.uint32( 0 )
)
process.hltGtStage2ObjectMap = cms.EDProducer( "L1TGlobalProducer",
    MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' ),
    ExtInputTag = cms.InputTag( "hltGtStage2Digis" ),
    AlgoBlkInputTag = cms.InputTag( "hltGtStage2Digis" ),
    GetPrescaleColumnFromData = cms.bool( False ),
    AlgorithmTriggersUnprescaled = cms.bool( True ),
    RequireMenuToMatchAlgoBlkInput = cms.bool( True ),
    AlgorithmTriggersUnmasked = cms.bool( True ),
    AXOL1TLModelVersion = cms.string( "" ),
    useMuonShowers = cms.bool( True ),
    resetPSCountersEachLumiSec = cms.bool( True ),
    semiRandomInitialPSCounters = cms.bool( False ),
    ProduceL1GtDaqRecord = cms.bool( True ),
    ProduceL1GtObjectMapRecord = cms.bool( True ),
    EmulateBxInEvent = cms.int32( 1 ),
    L1DataBxInEvent = cms.int32( 5 ),
    AlternativeNrBxBoardDaq = cms.uint32( 0 ),
    BstLengthBytes = cms.int32( -1 ),
    PrescaleSet = cms.uint32( 1 ),
    Verbosity = cms.untracked.int32( 0 ),
    PrintL1Menu = cms.untracked.bool( False ),
    TriggerMenuLuminosity = cms.string( "startup" )
)
process.hltOnlineMetaDataDigis = cms.EDProducer( "OnlineMetaDataRawToDigi",
    onlineMetaDataInputLabel = cms.InputTag( "rawDataCollector" )
)
process.hltOnlineBeamSpot = cms.EDProducer( "BeamSpotOnlineProducer",
    changeToCMSCoordinates = cms.bool( False ),
    maxZ = cms.double( 40.0 ),
    setSigmaZ = cms.double( 0.0 ),
    beamMode = cms.untracked.uint32( 11 ),
    src = cms.InputTag( "" ),
    gtEvmLabel = cms.InputTag( "" ),
    maxRadius = cms.double( 2.0 ),
    useTransientRecord = cms.bool( True )
)
process.hltL1sSingleAndDoubleEGor = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleLooseIsoEG26er2p5 OR L1_SingleLooseIsoEG26er1p5 OR L1_SingleLooseIsoEG28er2p5 OR L1_SingleLooseIsoEG28er2p1 OR L1_SingleLooseIsoEG28er1p5 OR L1_SingleLooseIsoEG30er2p5 OR L1_SingleLooseIsoEG30er1p5 OR L1_SingleEG26er2p5 OR L1_SingleEG38er2p5 OR L1_SingleEG40er2p5 OR L1_SingleEG42er2p5 OR L1_SingleEG45er2p5 OR L1_SingleEG60 OR L1_SingleEG34er2p5 OR L1_SingleEG36er2p5 OR L1_SingleIsoEG24er2p1 OR L1_SingleIsoEG26er2p1 OR L1_SingleIsoEG28er2p1 OR L1_SingleIsoEG30er2p1 OR L1_SingleIsoEG32er2p1 OR L1_SingleIsoEG26er2p5 OR L1_SingleIsoEG28er2p5 OR L1_SingleIsoEG30er2p5 OR L1_SingleIsoEG32er2p5 OR L1_SingleIsoEG34er2p5 OR L1_DoubleEG_22_10_er2p5 OR L1_DoubleEG_25_12_er2p5 OR L1_DoubleEG_25_14_er2p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDiphoton3022R9IdORIsoCaloIdANDHER9IdMass90 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltEcalDigisLegacy = cms.EDProducer( "EcalRawToDigi",
    tccUnpacking = cms.bool( True ),
    FedLabel = cms.InputTag( "listfeds" ),
    srpUnpacking = cms.bool( True ),
    syncCheck = cms.bool( True ),
    feIdCheck = cms.bool( True ),
    silentMode = cms.untracked.bool( True ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    orderedFedList = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    eventPut = cms.bool( True ),
    numbTriggerTSamples = cms.int32( 1 ),
    numbXtalTSamples = cms.int32( 10 ),
    orderedDCCIdList = cms.vint32( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 ),
    FEDs = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    DoRegional = cms.bool( False ),
    feUnpacking = cms.bool( True ),
    forceToKeepFRData = cms.bool( False ),
    headerUnpacking = cms.bool( True ),
    memUnpacking = cms.bool( True )
)
process.hltEcalDigisGPU = cms.EDProducer( "EcalRawToDigiGPU",
    InputLabel = cms.InputTag( "rawDataCollector" ),
    FEDs = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    maxChannelsEB = cms.uint32( 61200 ),
    maxChannelsEE = cms.uint32( 14648 ),
    digisLabelEB = cms.string( "ebDigis" ),
    digisLabelEE = cms.string( "eeDigis" )
)
process.hltEcalDigisFromGPU = cms.EDProducer( "EcalCPUDigisProducer",
    digisInLabelEB = cms.InputTag( 'hltEcalDigisGPU','ebDigis' ),
    digisInLabelEE = cms.InputTag( 'hltEcalDigisGPU','eeDigis' ),
    digisOutLabelEB = cms.string( "ebDigis" ),
    digisOutLabelEE = cms.string( "eeDigis" ),
    produceDummyIntegrityCollections = cms.bool( False )
)
process.hltEcalDetIdToBeRecovered = cms.EDProducer( "EcalDetIdToBeRecoveredProducer",
    ebIntegrityChIdErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityChIdErrors' ),
    ebDetIdToBeRecovered = cms.string( "ebDetId" ),
    integrityTTIdErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityTTIdErrors' ),
    eeIntegrityGainErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityGainErrors' ),
    ebFEToBeRecovered = cms.string( "ebFE" ),
    ebIntegrityGainErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityGainErrors' ),
    eeDetIdToBeRecovered = cms.string( "eeDetId" ),
    eeIntegrityGainSwitchErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityGainSwitchErrors' ),
    eeIntegrityChIdErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityChIdErrors' ),
    ebIntegrityGainSwitchErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityGainSwitchErrors' ),
    ebSrFlagCollection = cms.InputTag( "hltEcalDigis" ),
    eeFEToBeRecovered = cms.string( "eeFE" ),
    integrityBlockSizeErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityBlockSizeErrors' ),
    eeSrFlagCollection = cms.InputTag( "hltEcalDigis" )
)
process.hltEcalUncalibRecHitLegacy = cms.EDProducer( "EcalUncalibRecHitProducer",
    EBdigiCollection = cms.InputTag( 'hltEcalDigisLegacy','ebDigis' ),
    EEhitCollection = cms.string( "EcalUncalibRecHitsEE" ),
    EEdigiCollection = cms.InputTag( 'hltEcalDigisLegacy','eeDigis' ),
    EBhitCollection = cms.string( "EcalUncalibRecHitsEB" ),
    algo = cms.string( "EcalUncalibRecHitWorkerMultiFit" ),
    algoPSet = cms.PSet( 
      addPedestalUncertaintyEE = cms.double( 0.0 ),
      EBtimeFitLimits_Upper = cms.double( 1.4 ),
      addPedestalUncertaintyEB = cms.double( 0.0 ),
      EEtimeFitLimits_Lower = cms.double( 0.2 ),
      gainSwitchUseMaxSampleEB = cms.bool( True ),
      timealgo = cms.string( "RatioMethod" ),
      EEamplitudeFitParameters = cms.vdouble( 1.89, 1.4 ),
      EEtimeNconst = cms.double( 31.8 ),
      EBtimeNconst = cms.double( 28.5 ),
      prefitMaxChiSqEE = cms.double( 10.0 ),
      outOfTimeThresholdGain12mEB = cms.double( 1000.0 ),
      EEtimeFitParameters = cms.vdouble( -2.390548, 3.553628, -17.62341, 67.67538, -133.213, 140.7432, -75.41106, 16.20277 ),
      outOfTimeThresholdGain12mEE = cms.double( 1000.0 ),
      outOfTimeThresholdGain12pEB = cms.double( 1000.0 ),
      gainSwitchUseMaxSampleEE = cms.bool( False ),
      prefitMaxChiSqEB = cms.double( 25.0 ),
      mitigateBadSamplesEB = cms.bool( False ),
      outOfTimeThresholdGain12pEE = cms.double( 1000.0 ),
      simplifiedNoiseModelForGainSwitch = cms.bool( True ),
      ampErrorCalculation = cms.bool( False ),
      mitigateBadSamplesEE = cms.bool( False ),
      amplitudeThresholdEB = cms.double( 10.0 ),
      amplitudeThresholdEE = cms.double( 10.0 ),
      EBtimeFitLimits_Lower = cms.double( 0.2 ),
      EBtimeFitParameters = cms.vdouble( -2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 91.01147, -50.35761, 11.05621 ),
      selectiveBadSampleCriteriaEB = cms.bool( False ),
      dynamicPedestalsEB = cms.bool( False ),
      useLumiInfoRunHeader = cms.bool( False ),
      EBamplitudeFitParameters = cms.vdouble( 1.138, 1.652 ),
      dynamicPedestalsEE = cms.bool( False ),
      doPrefitEE = cms.bool( False ),
      selectiveBadSampleCriteriaEE = cms.bool( False ),
      EEtimeFitLimits_Upper = cms.double( 1.4 ),
      outOfTimeThresholdGain61pEE = cms.double( 1000.0 ),
      outOfTimeThresholdGain61mEE = cms.double( 1000.0 ),
      outOfTimeThresholdGain61pEB = cms.double( 1000.0 ),
      EEtimeConstantTerm = cms.double( 1.0 ),
      EBtimeConstantTerm = cms.double( 0.6 ),
      activeBXs = cms.vint32( -5, -4, -3, -2, -1, 0, 1, 2, 3, 4 ),
      outOfTimeThresholdGain61mEB = cms.double( 1000.0 ),
      doPrefitEB = cms.bool( False )
    )
)
process.hltEcalUncalibRecHitGPU = cms.EDProducer( "EcalUncalibRecHitProducerGPU",
    digisLabelEB = cms.InputTag( 'hltEcalDigisGPU','ebDigis' ),
    digisLabelEE = cms.InputTag( 'hltEcalDigisGPU','eeDigis' ),
    recHitsLabelEB = cms.string( "EcalUncalibRecHitsEB" ),
    recHitsLabelEE = cms.string( "EcalUncalibRecHitsEE" ),
    timeCalibTag = cms.ESInputTag( "","" ),
    timeOffsetTag = cms.ESInputTag( "","" ),
    EBtimeFitLimits_Lower = cms.double( 0.2 ),
    EBtimeFitLimits_Upper = cms.double( 1.4 ),
    EEtimeFitLimits_Lower = cms.double( 0.2 ),
    EEtimeFitLimits_Upper = cms.double( 1.4 ),
    EBtimeConstantTerm = cms.double( 0.6 ),
    EEtimeConstantTerm = cms.double( 1.0 ),
    EBtimeNconst = cms.double( 28.5 ),
    EEtimeNconst = cms.double( 31.8 ),
    outOfTimeThresholdGain12pEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain12mEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain61pEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain61mEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain12pEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain12mEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain61pEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain61mEE = cms.double( 1000.0 ),
    amplitudeThresholdEB = cms.double( 10.0 ),
    amplitudeThresholdEE = cms.double( 10.0 ),
    kernelMinimizeThreads = cms.untracked.vuint32( 32, 1, 1 ),
    shouldRunTimingComputation = cms.bool( True )
)
process.hltEcalUncalibRecHitSoA = cms.EDProducer( "EcalCPUUncalibRecHitProducer",
    recHitsInLabelEB = cms.InputTag( 'hltEcalUncalibRecHitGPU','EcalUncalibRecHitsEB' ),
    recHitsOutLabelEB = cms.string( "EcalUncalibRecHitsEB" ),
    containsTimingInformation = cms.bool( True ),
    isPhase2 = cms.bool( False ),
    recHitsInLabelEE = cms.InputTag( 'hltEcalUncalibRecHitGPU','EcalUncalibRecHitsEE' ),
    recHitsOutLabelEE = cms.string( "EcalUncalibRecHitsEE" )
)
process.hltEcalUncalibRecHitFromSoA = cms.EDProducer( "EcalUncalibRecHitConvertGPU2CPUFormat",
    recHitsLabelGPUEB = cms.InputTag( 'hltEcalUncalibRecHitSoA','EcalUncalibRecHitsEB' ),
    recHitsLabelCPUEB = cms.string( "EcalUncalibRecHitsEB" ),
    isPhase2 = cms.bool( False ),
    recHitsLabelGPUEE = cms.InputTag( 'hltEcalUncalibRecHitSoA','EcalUncalibRecHitsEE' ),
    recHitsLabelCPUEE = cms.string( "EcalUncalibRecHitsEE" )
)
process.hltEcalRecHit = cms.EDProducer( "EcalRecHitProducer",
    recoverEEVFE = cms.bool( False ),
    EErechitCollection = cms.string( "EcalRecHitsEE" ),
    recoverEBIsolatedChannels = cms.bool( False ),
    recoverEBVFE = cms.bool( False ),
    laserCorrection = cms.bool( True ),
    EBLaserMIN = cms.double( 0.5 ),
    killDeadChannels = cms.bool( True ),
    dbStatusToBeExcludedEB = cms.vint32( 14, 78, 142 ),
    EEuncalibRecHitCollection = cms.InputTag( 'hltEcalUncalibRecHit','EcalUncalibRecHitsEE' ),
    dbStatusToBeExcludedEE = cms.vint32( 14, 78, 142 ),
    EELaserMIN = cms.double( 0.5 ),
    ebFEToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','ebFE' ),
    cleaningConfig = cms.PSet( 
      cThreshold_endcap = cms.double( 15.0 ),
      tightenCrack_e1_double = cms.double( 2.0 ),
      cThreshold_barrel = cms.double( 4.0 ),
      e6e2thresh = cms.double( 0.04 ),
      e4e1Threshold_barrel = cms.double( 0.08 ),
      e4e1Threshold_endcap = cms.double( 0.3 ),
      tightenCrack_e4e1_single = cms.double( 3.0 ),
      cThreshold_double = cms.double( 10.0 ),
      e4e1_b_barrel = cms.double( -0.024 ),
      tightenCrack_e6e2_double = cms.double( 3.0 ),
      e4e1_a_barrel = cms.double( 0.04 ),
      tightenCrack_e1_single = cms.double( 2.0 ),
      e4e1_a_endcap = cms.double( 0.02 ),
      e4e1_b_endcap = cms.double( -0.0125 ),
      ignoreOutOfTimeThresh = cms.double( 1.0E9 )
    ),
    logWarningEtThreshold_EE_FE = cms.double( 50.0 ),
    eeDetIdToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','eeDetId' ),
    recoverEBFE = cms.bool( False ),
    eeFEToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','eeFE' ),
    ebDetIdToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','ebDetId' ),
    singleChannelRecoveryThreshold = cms.double( 8.0 ),
    sum8ChannelRecoveryThreshold = cms.double( 0.0 ),
    bdtWeightFileNoCracks = cms.FileInPath( "RecoLocalCalo/EcalDeadChannelRecoveryAlgos/data/BDTWeights/bdtgAllRH_8GT700MeV_noCracks_ZskimData2017_v1.xml" ),
    bdtWeightFileCracks = cms.FileInPath( "RecoLocalCalo/EcalDeadChannelRecoveryAlgos/data/BDTWeights/bdtgAllRH_8GT700MeV_onlyCracks_ZskimData2017_v1.xml" ),
    ChannelStatusToBeExcluded = cms.vstring(  ),
    EBrechitCollection = cms.string( "EcalRecHitsEB" ),
    triggerPrimitiveDigiCollection = cms.InputTag( 'hltEcalDigis','EcalTriggerPrimitives' ),
    recoverEEFE = cms.bool( False ),
    singleChannelRecoveryMethod = cms.string( "NeuralNetworks" ),
    EBLaserMAX = cms.double( 3.0 ),
    flagsMapDBReco = cms.PSet( 
      kDead = cms.vstring( 'kNoDataNoTP' ),
      kGood = cms.vstring( 'kOk',
        'kDAC',
        'kNoLaser',
        'kNoisy' ),
      kTowerRecovered = cms.vstring( 'kDeadFE' ),
      kNoisy = cms.vstring( 'kNNoisy',
        'kFixedG6',
        'kFixedG1' ),
      kNeighboursRecovered = cms.vstring( 'kFixedG0',
        'kNonRespondingIsolated',
        'kDeadVFE' )
    ),
    EBuncalibRecHitCollection = cms.InputTag( 'hltEcalUncalibRecHit','EcalUncalibRecHitsEB' ),
    algoRecover = cms.string( "EcalRecHitWorkerRecover" ),
    algo = cms.string( "EcalRecHitWorkerSimple" ),
    EELaserMAX = cms.double( 8.0 ),
    logWarningEtThreshold_EB_FE = cms.double( 50.0 ),
    recoverEEIsolatedChannels = cms.bool( False ),
    timeCalibTag = cms.ESInputTag( "","" ),
    timeOffsetTag = cms.ESInputTag( "","" ),
    skipTimeCalib = cms.bool( False )
)
process.hltEcalPreshowerDigis = cms.EDProducer( "ESRawToDigi",
    sourceTag = cms.InputTag( "rawDataCollector" ),
    debugMode = cms.untracked.bool( False ),
    InstanceES = cms.string( "" ),
    LookupTable = cms.FileInPath( "EventFilter/ESDigiToRaw/data/ES_lookup_table.dat" ),
    ESdigiCollection = cms.string( "" )
)
process.hltEcalPreshowerRecHit = cms.EDProducer( "ESRecHitProducer",
    ESrechitCollection = cms.string( "EcalRecHitsES" ),
    ESdigiCollection = cms.InputTag( "hltEcalPreshowerDigis" ),
    algo = cms.string( "ESRecHitWorker" ),
    ESRecoAlgo = cms.int32( 0 )
)
process.hltRechitInRegionsECAL = cms.EDProducer( "HLTEcalRecHitInAllL1RegionsProducer",
    productLabels = cms.vstring( 'EcalRecHitsEB',
      'EcalRecHitsEE' ),
    recHitLabels = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    l1InputRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "EGamma" ),
        minEt = cms.double( 5.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Jet' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Jet" ),
        minEt = cms.double( 170.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Tau' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Tau" ),
        minEt = cms.double( 100.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      )
    )
)
process.hltRechitInRegionsES = cms.EDProducer( "HLTEcalRecHitInAllL1RegionsProducer",
    productLabels = cms.vstring( 'EcalRecHitsES' ),
    recHitLabels = cms.VInputTag( 'hltEcalPreshowerRecHit:EcalRecHitsES' ),
    l1InputRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "EGamma" ),
        minEt = cms.double( 5.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Jet' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Jet" ),
        minEt = cms.double( 170.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Tau' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Tau" ),
        minEt = cms.double( 100.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      )
    )
)
process.hltParticleFlowRecHitECALL1Seeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEB' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEE' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    )
)
process.hltParticleFlowRecHitPSL1Seeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsES','EcalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    )
)
process.hltParticleFlowClusterPSL1Seeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSL1Seeded" ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALUncorrectedL1Seeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALL1Seeded" ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALL1Seeded = cms.EDProducer( "CorrectedECALPFClusterProducer",
    minimumPSEnergy = cms.double( 0.0 ),
    skipPS = cms.bool( False ),
    inputPS = cms.InputTag( "hltParticleFlowClusterPSL1Seeded" ),
    energyCorrector = cms.PSet( 
      applyCrackCorrections = cms.bool( False ),
      srfAwareCorrection = cms.bool( True ),
      applyMVACorrections = cms.bool( True ),
      maxPtForMVAEvaluation = cms.double( 300.0 ),
      recHitsEBLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      recHitsEELabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ebSrFlagLabel = cms.InputTag( "hltEcalDigis" ),
      eeSrFlagLabel = cms.InputTag( "hltEcalDigis" )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedL1Seeded" )
)
process.hltParticleFlowSuperClusterECALL1Seeded = cms.EDProducer( "PFECALSuperClusterProducer",
    PFSuperClusterCollectionEndcap = cms.string( "hltParticleFlowSuperClusterECALEndcap" ),
    doSatelliteClusterMerge = cms.bool( False ),
    thresh_PFClusterBarrel = cms.double( 0.5 ),
    PFBasicClusterCollectionBarrel = cms.string( "hltParticleFlowBasicClusterECALBarrel" ),
    useRegression = cms.bool( True ),
    satelliteMajorityFraction = cms.double( 0.5 ),
    thresh_PFClusterEndcap = cms.double( 0.5 ),
    ESAssociation = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    PFBasicClusterCollectionPreshower = cms.string( "hltParticleFlowBasicClusterECALPreshower" ),
    verbose = cms.untracked.bool( False ),
    thresh_SCEt = cms.double( 4.0 ),
    etawidth_SuperClusterEndcap = cms.double( 0.04 ),
    phiwidth_SuperClusterEndcap = cms.double( 0.6 ),
    useDynamicDPhiWindow = cms.bool( True ),
    PFSuperClusterCollectionBarrel = cms.string( "hltParticleFlowSuperClusterECALBarrel" ),
    regressionConfig = cms.PSet( 
      uncertaintyKeyEB = cms.string( "pfscecal_EBUncertainty_online" ),
      ecalRecHitsEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ecalRecHitsEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      regressionKeyEE = cms.string( "pfscecal_EECorrection_online" ),
      regressionKeyEB = cms.string( "pfscecal_EBCorrection_online" ),
      uncertaintyKeyEE = cms.string( "pfscecal_EEUncertainty_online" ),
      isHLT = cms.bool( True ),
      regTrainedWithPS = cms.bool( True )
    ),
    applyCrackCorrections = cms.bool( False ),
    satelliteClusterSeedThreshold = cms.double( 50.0 ),
    etawidth_SuperClusterBarrel = cms.double( 0.04 ),
    PFBasicClusterCollectionEndcap = cms.string( "hltParticleFlowBasicClusterECALEndcap" ),
    PFClusters = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    thresh_PFClusterSeedBarrel = cms.double( 1.0 ),
    EnergyWeight = cms.string( "Raw" ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    thresh_PFClusterSeedEndcap = cms.double( 1.0 ),
    phiwidth_SuperClusterBarrel = cms.double( 0.6 ),
    thresh_PFClusterES = cms.double( 0.5 ),
    seedThresholdIsET = cms.bool( True ),
    isOOTCollection = cms.bool( False ),
    barrelRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEE' ),
    endcapRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEB' ),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string( "hltParticleFlowSuperClusterECALEndcapWithPreshower" ),
    dropUnseedable = cms.bool( False ),
    ClusteringType = cms.string( "Mustache" )
)
process.hltEgammaCandidates = cms.EDProducer( "EgammaHLTRecoEcalCandidateProducers",
    scHybridBarrelProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALL1Seeded','hltParticleFlowSuperClusterECALBarrel' ),
    scIslandEndcapProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALL1Seeded','hltParticleFlowSuperClusterECALEndcapWithPreshower' ),
    recoEcalCandidateCollection = cms.string( "" )
)
process.hltEGL1SingleAndDoubleEGOrFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1SeedFilterTag = cms.InputTag( "hltL1sSingleAndDoubleEGor" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    ncandcut = cms.int32( 1 ),
    doIsolated = cms.bool( False ),
    region_eta_size = cms.double( 0.522 ),
    region_eta_size_ecap = cms.double( 1.0 ),
    region_phi_size = cms.double( 1.044 ),
    barrel_end = cms.double( 1.4791 ),
    endcap_end = cms.double( 2.65 )
)
process.hltEG30L1SingleAndDoubleEGOrEtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleAndDoubleEGOrFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 30.0 ),
    etcutEE = cms.double( 30.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEgammaR9ID = cms.EDProducer( "EgammaHLTR9IDProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' )
)
process.hltEG30LR9Id50b80eR9IdFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG30L1SingleAndDoubleEGOrEtFilter" ),
    varTag = cms.InputTag( 'hltEgammaR9ID','r95x5' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( False ),
    useEt = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.5 ),
    thrRegularEE = cms.vdouble( 0.8 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltHcalDigis = cms.EDProducer( "HcalRawToDigi",
    HcalFirstFED = cms.untracked.int32( 700 ),
    firstSample = cms.int32( 0 ),
    lastSample = cms.int32( 9 ),
    FilterDataQuality = cms.bool( True ),
    FEDs = cms.untracked.vint32(  ),
    UnpackZDC = cms.untracked.bool( True ),
    UnpackCalib = cms.untracked.bool( True ),
    UnpackUMNio = cms.untracked.bool( True ),
    UnpackTTP = cms.untracked.bool( False ),
    silent = cms.untracked.bool( True ),
    saveQIE10DataNSamples = cms.untracked.vint32(  ),
    saveQIE10DataTags = cms.untracked.vstring(  ),
    saveQIE11DataNSamples = cms.untracked.vint32(  ),
    saveQIE11DataTags = cms.untracked.vstring(  ),
    ComplainEmptyData = cms.untracked.bool( False ),
    UnpackerMode = cms.untracked.int32( 0 ),
    ExpectedOrbitMessageTime = cms.untracked.int32( -1 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    ElectronicsMap = cms.string( "" )
)
process.hltHcalDigisGPU = cms.EDProducer( "HcalDigisProducerGPU",
    hbheDigisLabel = cms.InputTag( "hltHcalDigis" ),
    qie11DigiLabel = cms.InputTag( "hltHcalDigis" ),
    digisLabelF01HE = cms.string( "" ),
    digisLabelF5HB = cms.string( "" ),
    digisLabelF3HB = cms.string( "" ),
    maxChannelsF01HE = cms.uint32( 10000 ),
    maxChannelsF5HB = cms.uint32( 10000 ),
    maxChannelsF3HB = cms.uint32( 10000 )
)
process.hltHbherecoLegacy = cms.EDProducer( "HBHEPhase1Reconstructor",
    digiLabelQIE8 = cms.InputTag( "hltHcalDigis" ),
    processQIE8 = cms.bool( False ),
    digiLabelQIE11 = cms.InputTag( "hltHcalDigis" ),
    processQIE11 = cms.bool( True ),
    tsFromDB = cms.bool( False ),
    recoParamsFromDB = cms.bool( True ),
    saveEffectivePedestal = cms.bool( True ),
    dropZSmarkedPassed = cms.bool( True ),
    makeRecHits = cms.bool( True ),
    saveInfos = cms.bool( False ),
    saveDroppedInfos = cms.bool( False ),
    use8ts = cms.bool( True ),
    sipmQTSShift = cms.int32( 0 ),
    sipmQNTStoSum = cms.int32( 3 ),
    algorithm = cms.PSet( 
      ts4Thresh = cms.double( 0.0 ),
      meanTime = cms.double( 0.0 ),
      nnlsThresh = cms.double( 1.0E-11 ),
      nMaxItersMin = cms.int32( 50 ),
      timeSigmaSiPM = cms.double( 2.5 ),
      applyTimeSlew = cms.bool( True ),
      timeSlewParsType = cms.int32( 3 ),
      ts4Max = cms.vdouble( 100.0, 20000.0, 30000.0 ),
      samplesToAdd = cms.int32( 2 ),
      deltaChiSqThresh = cms.double( 0.001 ),
      applyTimeConstraint = cms.bool( False ),
      calculateArrivalTime = cms.bool( False ),
      timeSigmaHPD = cms.double( 5.0 ),
      useMahi = cms.bool( True ),
      correctForPhaseContainment = cms.bool( True ),
      respCorrM3 = cms.double( 1.0 ),
      pulseJitter = cms.double( 1.0 ),
      applyPedConstraint = cms.bool( False ),
      fitTimes = cms.int32( 1 ),
      nMaxItersNNLS = cms.int32( 500 ),
      applyTimeSlewM3 = cms.bool( True ),
      meanPed = cms.double( 0.0 ),
      ts4Min = cms.double( 0.0 ),
      applyPulseJitter = cms.bool( False ),
      useM2 = cms.bool( False ),
      timeMin = cms.double( -12.5 ),
      useM3 = cms.bool( False ),
      chiSqSwitch = cms.double( -1.0 ),
      dynamicPed = cms.bool( False ),
      tdcTimeShift = cms.double( 0.0 ),
      correctionPhaseNS = cms.double( 6.0 ),
      firstSampleShift = cms.int32( 0 ),
      activeBXs = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
      ts4chi2 = cms.vdouble( 15.0, 15.0 ),
      timeMax = cms.double( 12.5 ),
      Class = cms.string( "SimpleHBHEPhase1Algo" ),
      applyLegacyHBMCorrection = cms.bool( False )
    ),
    algoConfigClass = cms.string( "" ),
    setNegativeFlagsQIE8 = cms.bool( False ),
    setNegativeFlagsQIE11 = cms.bool( False ),
    setNoiseFlagsQIE8 = cms.bool( False ),
    setNoiseFlagsQIE11 = cms.bool( False ),
    setPulseShapeFlagsQIE8 = cms.bool( False ),
    setPulseShapeFlagsQIE11 = cms.bool( False ),
    setLegacyFlagsQIE8 = cms.bool( False ),
    setLegacyFlagsQIE11 = cms.bool( False ),
    flagParametersQIE8 = cms.PSet( 
      hitEnergyMinimum = cms.double( 1.0 ),
      pulseShapeParameterSets = cms.VPSet( 
        cms.PSet(  pulseShapeParameters = cms.vdouble( 0.0, 100.0, -50.0, 0.0, -15.0, 0.15 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 100.0, 2000.0, -50.0, 0.0, -5.0, 0.05 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 2000.0, 1000000.0, -50.0, 0.0, 95.0, 0.0 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( -1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 0.0 )        )
      ),
      nominalPedestal = cms.double( 3.0 ),
      hitMultiplicityThreshold = cms.int32( 17 )
    ),
    flagParametersQIE11 = cms.PSet(  ),
    pulseShapeParametersQIE8 = cms.PSet( 
      UseDualFit = cms.bool( True ),
      LinearCut = cms.vdouble( -3.0, -0.054, -0.054 ),
      TriangleIgnoreSlow = cms.bool( False ),
      TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 160.0, 200.0, 300.0, 500.0 ),
      LinearThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      RightSlopeSmallCut = cms.vdouble( 1.08, 1.16, 1.16 ),
      TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0 ),
      TS3TS4ChargeThreshold = cms.double( 70.0 ),
      R45PlusOneRange = cms.double( 0.2 ),
      TS4TS5LowerCut = cms.vdouble( -1.0, -0.7, -0.5, -0.4, -0.3, 0.1 ),
      RightSlopeThreshold = cms.vdouble( 250.0, 400.0, 100000.0 ),
      TS3TS4UpperChargeThreshold = cms.double( 20.0 ),
      MinimumChargeThreshold = cms.double( 20.0 ),
      RightSlopeCut = cms.vdouble( 5.0, 4.15, 4.15 ),
      RMS8MaxThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      MinimumTS4TS5Threshold = cms.double( 100.0 ),
      LeftSlopeThreshold = cms.vdouble( 250.0, 500.0, 100000.0 ),
      TS5TS6ChargeThreshold = cms.double( 70.0 ),
      TrianglePeakTS = cms.uint32( 10000 ),
      TS5TS6UpperChargeThreshold = cms.double( 20.0 ),
      RightSlopeSmallThreshold = cms.vdouble( 150.0, 200.0, 100000.0 ),
      RMS8MaxCut = cms.vdouble( -13.5, -11.5, -11.5 ),
      TS4TS5ChargeThreshold = cms.double( 70.0 ),
      R45MinusOneRange = cms.double( 0.2 ),
      LeftSlopeCut = cms.vdouble( 5.0, 2.55, 2.55 ),
      TS4TS5UpperCut = cms.vdouble( 1.0, 0.8, 0.75, 0.72 )
    ),
    pulseShapeParametersQIE11 = cms.PSet(  )
)
process.hltHbherecoGPU = cms.EDProducer( "HBHERecHitProducerGPU",
    maxTimeSamples = cms.uint32( 10 ),
    kprep1dChannelsPerBlock = cms.uint32( 32 ),
    digisLabelF01HE = cms.InputTag( "hltHcalDigisGPU" ),
    digisLabelF5HB = cms.InputTag( "hltHcalDigisGPU" ),
    digisLabelF3HB = cms.InputTag( "hltHcalDigisGPU" ),
    recHitsLabelM0HBHE = cms.string( "" ),
    sipmQTSShift = cms.int32( 0 ),
    sipmQNTStoSum = cms.int32( 3 ),
    firstSampleShift = cms.int32( 0 ),
    useEffectivePedestals = cms.bool( True ),
    meanTime = cms.double( 0.0 ),
    timeSigmaSiPM = cms.double( 2.5 ),
    timeSigmaHPD = cms.double( 5.0 ),
    ts4Thresh = cms.double( 0.0 ),
    applyTimeSlew = cms.bool( True ),
    tzeroTimeSlewParameters = cms.vdouble( 23.960177, 11.977461, 9.109694 ),
    slopeTimeSlewParameters = cms.vdouble( -3.178648, -1.5610227, -1.075824 ),
    tmaxTimeSlewParameters = cms.vdouble( 16.0, 10.0, 6.25 ),
    kernelMinimizeThreads = cms.vuint32( 16, 1, 1 )
)
process.hltHbherecoFromGPU = cms.EDProducer( "HcalCPURecHitsProducer",
    recHitsM0LabelIn = cms.InputTag( "hltHbherecoGPU" ),
    recHitsM0LabelOut = cms.string( "" ),
    recHitsLegacyLabelOut = cms.string( "" ),
    produceSoA = cms.bool( True ),
    produceLegacy = cms.bool( True )
)
process.hltHfprereco = cms.EDProducer( "HFPreReconstructor",
    digiLabel = cms.InputTag( "hltHcalDigis" ),
    dropZSmarkedPassed = cms.bool( True ),
    tsFromDB = cms.bool( False ),
    sumAllTimeSlices = cms.bool( False ),
    forceSOI = cms.int32( -1 ),
    soiShift = cms.int32( 0 )
)
process.hltHfreco = cms.EDProducer( "HFPhase1Reconstructor",
    inputLabel = cms.InputTag( "hltHfprereco" ),
    useChannelQualityFromDB = cms.bool( False ),
    checkChannelQualityForDepth3and4 = cms.bool( False ),
    algorithm = cms.PSet( 
      tfallIfNoTDC = cms.double( -101.0 ),
      triseIfNoTDC = cms.double( -100.0 ),
      rejectAllFailures = cms.bool( True ),
      energyWeights = cms.vdouble( 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0 ),
      soiPhase = cms.uint32( 1 ),
      timeShift = cms.double( 0.0 ),
      tlimits = cms.vdouble( -1000.0, 1000.0, -1000.0, 1000.0 ),
      Class = cms.string( "HFFlexibleTimeCheck" )
    ),
    algoConfigClass = cms.string( "HFPhase1PMTParams" ),
    setNoiseFlags = cms.bool( True ),
    runHFStripFilter = cms.bool( False ),
    S9S1stat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 35.1773, 35.37, 35.7933, 36.4472, 37.3317, 38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 47.4813, 49.98, 52.7093 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_optimumSlope = cms.vdouble( -99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 0.135313, 0.136289, 0.0589927 ),
      isS8S1 = cms.bool( False ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 43.5, 45.7, 48.32, 51.36, 54.82, 58.7, 63.0, 67.72, 72.86, 78.42, 84.4, 90.8, 97.62 ),
      short_optimumSlope = cms.vdouble( -99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 0.135313, 0.136289, 0.0589927 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    S8S1stat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 40.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_optimumSlope = cms.vdouble( 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ),
      isS8S1 = cms.bool( True ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 40.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0 ),
      short_optimumSlope = cms.vdouble( 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    PETstat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 35.1773, 35.37, 35.7933, 36.4472, 37.3317, 38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 47.4813, 49.98, 52.7093 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_R_29 = cms.vdouble( 0.8 ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 43.5, 45.7, 48.32, 51.36, 54.82, 58.7, 63.0, 67.72, 72.86, 78.42, 84.4, 90.8, 97.62 ),
      short_R_29 = cms.vdouble( 0.8 ),
      long_R = cms.vdouble( 0.98 ),
      short_R = cms.vdouble( 0.8 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    HFStripFilter = cms.PSet( 
      seedHitIetaMax = cms.int32( 35 ),
      verboseLevel = cms.untracked.int32( 10 ),
      maxThreshold = cms.double( 100.0 ),
      stripThreshold = cms.double( 40.0 ),
      wedgeCut = cms.double( 0.05 ),
      lstrips = cms.int32( 2 ),
      maxStripTime = cms.double( 10.0 ),
      gap = cms.int32( 2 ),
      timeMax = cms.double( 6.0 )
    )
)
process.hltHoreco = cms.EDProducer( "HcalHitReconstructor",
    correctForPhaseContainment = cms.bool( True ),
    correctionPhaseNS = cms.double( 13.0 ),
    digiLabel = cms.InputTag( "hltHcalDigis" ),
    Subdetector = cms.string( "HO" ),
    correctForTimeslew = cms.bool( True ),
    dropZSmarkedPassed = cms.bool( True ),
    firstSample = cms.int32( 4 ),
    samplesToAdd = cms.int32( 4 ),
    tsFromDB = cms.bool( True ),
    recoParamsFromDB = cms.bool( True ),
    useLeakCorrection = cms.bool( False ),
    dataOOTCorrectionName = cms.string( "" ),
    dataOOTCorrectionCategory = cms.string( "Data" ),
    mcOOTCorrectionName = cms.string( "" ),
    mcOOTCorrectionCategory = cms.string( "MC" ),
    correctTiming = cms.bool( False ),
    firstAuxTS = cms.int32( 4 ),
    setNoiseFlags = cms.bool( False ),
    digiTimeFromDB = cms.bool( True ),
    setHSCPFlags = cms.bool( False ),
    setSaturationFlags = cms.bool( False ),
    setTimingTrustFlags = cms.bool( False ),
    setPulseShapeFlags = cms.bool( False ),
    setNegativeFlags = cms.bool( False ),
    digistat = cms.PSet(  ),
    HFInWindowStat = cms.PSet(  ),
    S9S1stat = cms.PSet(  ),
    S8S1stat = cms.PSet(  ),
    PETstat = cms.PSet(  ),
    saturationParameters = cms.PSet(  maxADCvalue = cms.int32( 127 ) ),
    hfTimingTrustParameters = cms.PSet(  )
)
process.hltFixedGridRhoFastjetAllCaloForMuons = cms.EDProducer( "FixedGridRhoProducerFastjetFromRecHit",
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    ebRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    eeRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    skipHCAL = cms.bool( False ),
    skipECAL = cms.bool( False ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    maxRapidity = cms.double( 2.5 ),
    gridSpacing = cms.double( 0.55 )
)
process.hltEgammaHoverE = cms.EDProducer( "EgammaHLTHcalVarProducerFromRecHit",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    etThresHB = cms.vdouble( 0.0, 0.0, 0.0, 0.0 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    etThresHE = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
    innerCone = cms.double( 0.0 ),
    outerCone = cms.double( 0.14 ),
    depth = cms.int32( 0 ),
    maxSeverityHB = cms.int32( 9 ),
    maxSeverityHE = cms.int32( 9 ),
    doEtSum = cms.bool( False ),
    useSingleTower = cms.bool( False ),
    effectiveAreas = cms.vdouble( 0.105, 0.17 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltEG30LHE12R9Id50b80eHEFilter = cms.EDFilter( "HLTEgammaGenericQuadraticFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG30LR9Id50b80eR9IdFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.0 ),
    thrRegularEE = cms.vdouble( 0.0 ),
    thrOverEEB = cms.vdouble( 0.12 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( 0.0 ),
    thrOverE2EE = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEG30LR9Id85b90eHE12R9Id50b80eR9IdLastFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG30LHE12R9Id50b80eHEFilter" ),
    varTag = cms.InputTag( 'hltEgammaR9ID','r95x5' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( False ),
    useEt = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.85 ),
    thrRegularEE = cms.vdouble( 0.9 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEgammaClusterShape = cms.EDProducer( "EgammaHLTClusterShapeProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    ecalRechitEB = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEE' ),
    isIeta = cms.bool( True ),
    multThresEB = cms.double( 1.0 ),
    multThresEE = cms.double( 1.25 )
)
process.hltEG30LCaloId15b35eHE12R9Id50b80eClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG30LHE12R9Id50b80eHEFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.015 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEgammaEcalPFClusterIso = cms.EDProducer( "EgammaHLTEcalPFClusterIsolationProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    pfClusterProducer = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.0 ),
    drVetoEndcap = cms.double( 0.0 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltEG30LIso60CaloId15b35eHE12R9Id50b80eEcalIsoLastFilter = cms.EDFilter( "HLTEgammaGenericQuadraticFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG30LCaloId15b35eHE12R9Id50b80eClusterShapeFilter" ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIso" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    thrRegularEB = cms.vdouble( 6.0 ),
    thrRegularEE = cms.vdouble( 6.0 ),
    thrOverEEB = cms.vdouble( 0.012 ),
    thrOverEEE = cms.vdouble( 0.012 ),
    thrOverE2EB = cms.vdouble( 0.0 ),
    thrOverE2EE = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEG30LRId85ORIso60CaloId15b35eANDHE12R9Id50b80eLegCombLastFilter = cms.EDFilter( "HLTEgammaDoubleLegCombFilter",
    saveTags = cms.bool( True ),
    firstLegLastFilter = cms.InputTag( "hltEG30LR9Id85b90eHE12R9Id50b80eR9IdLastFilter" ),
    secondLegLastFilter = cms.InputTag( "hltEG30LIso60CaloId15b35eHE12R9Id50b80eEcalIsoLastFilter" ),
    nrRequiredFirstLeg = cms.int32( 0 ),
    nrRequiredSecondLeg = cms.int32( 0 ),
    nrRequiredUniqueLeg = cms.int32( 1 ),
    maxMatchDR = cms.double( 0.01 )
)
process.hltParticleFlowRecHitECALUnseeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    )
)
process.hltParticleFlowRecHitPSUnseeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltEcalPreshowerRecHit','EcalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    )
)
process.hltParticleFlowClusterPSUnseeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSUnseeded" ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALUncorrectedUnseeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALUnseeded" ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALUnseeded = cms.EDProducer( "CorrectedECALPFClusterProducer",
    minimumPSEnergy = cms.double( 0.0 ),
    skipPS = cms.bool( False ),
    inputPS = cms.InputTag( "hltParticleFlowClusterPSUnseeded" ),
    energyCorrector = cms.PSet( 
      applyCrackCorrections = cms.bool( False ),
      srfAwareCorrection = cms.bool( True ),
      applyMVACorrections = cms.bool( True ),
      maxPtForMVAEvaluation = cms.double( 300.0 ),
      recHitsEBLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      recHitsEELabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ebSrFlagLabel = cms.InputTag( "hltEcalDigis" ),
      eeSrFlagLabel = cms.InputTag( "hltEcalDigis" )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedUnseeded" )
)
process.hltParticleFlowSuperClusterECALUnseeded = cms.EDProducer( "PFECALSuperClusterProducer",
    PFSuperClusterCollectionEndcap = cms.string( "hltParticleFlowSuperClusterECALEndcap" ),
    doSatelliteClusterMerge = cms.bool( False ),
    thresh_PFClusterBarrel = cms.double( 0.5 ),
    PFBasicClusterCollectionBarrel = cms.string( "hltParticleFlowBasicClusterECALBarrel" ),
    useRegression = cms.bool( True ),
    satelliteMajorityFraction = cms.double( 0.5 ),
    thresh_PFClusterEndcap = cms.double( 0.5 ),
    ESAssociation = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    PFBasicClusterCollectionPreshower = cms.string( "hltParticleFlowBasicClusterECALPreshower" ),
    verbose = cms.untracked.bool( False ),
    thresh_SCEt = cms.double( 4.0 ),
    etawidth_SuperClusterEndcap = cms.double( 0.04 ),
    phiwidth_SuperClusterEndcap = cms.double( 0.6 ),
    useDynamicDPhiWindow = cms.bool( True ),
    PFSuperClusterCollectionBarrel = cms.string( "hltParticleFlowSuperClusterECALBarrel" ),
    regressionConfig = cms.PSet( 
      uncertaintyKeyEB = cms.string( "pfscecal_EBUncertainty_online" ),
      ecalRecHitsEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ecalRecHitsEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      regressionKeyEE = cms.string( "pfscecal_EECorrection_online" ),
      regressionKeyEB = cms.string( "pfscecal_EBCorrection_online" ),
      uncertaintyKeyEE = cms.string( "pfscecal_EEUncertainty_online" ),
      isHLT = cms.bool( True ),
      regTrainedWithPS = cms.bool( True )
    ),
    applyCrackCorrections = cms.bool( False ),
    satelliteClusterSeedThreshold = cms.double( 50.0 ),
    etawidth_SuperClusterBarrel = cms.double( 0.04 ),
    PFBasicClusterCollectionEndcap = cms.string( "hltParticleFlowBasicClusterECALEndcap" ),
    PFClusters = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    thresh_PFClusterSeedBarrel = cms.double( 1.0 ),
    EnergyWeight = cms.string( "Raw" ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    thresh_PFClusterSeedEndcap = cms.double( 1.0 ),
    phiwidth_SuperClusterBarrel = cms.double( 0.6 ),
    thresh_PFClusterES = cms.double( 0.5 ),
    seedThresholdIsET = cms.bool( True ),
    isOOTCollection = cms.bool( False ),
    barrelRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEE' ),
    endcapRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEB' ),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string( "hltParticleFlowSuperClusterECALEndcapWithPreshower" ),
    dropUnseedable = cms.bool( False ),
    ClusteringType = cms.string( "Mustache" )
)
process.hltEgammaCandidatesUnseeded = cms.EDProducer( "EgammaHLTRecoEcalCandidateProducers",
    scHybridBarrelProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALUnseeded','hltParticleFlowSuperClusterECALBarrel' ),
    scIslandEndcapProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALUnseeded','hltParticleFlowSuperClusterECALEndcapWithPreshower' ),
    recoEcalCandidateCollection = cms.string( "" )
)
process.hltDiEG22EtEta2p55UnseededFilter = cms.EDFilter( "HLT1Photon",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    triggerType = cms.int32( 92 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 22.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.55 ),
    MinN = cms.int32( 2 )
)

#process.preMVATestFilter = cms.EDFilter( "HLT1Photon",
#    saveTags = cms.bool( True ),
#    inputTag = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
#    triggerType = cms.int32( 92 ),
#    MinE = cms.double( -1.0 ),
#    MinPt = cms.double( -1.0 ),
#    MinMass = cms.double( -1.0 ),
#    MaxMass = cms.double( -1.0 ),
#    MinEta = cms.double( -1.0 ),
#    MaxEta = cms.double( 2.55 ),
#    MinN = cms.int32( 2 )
#)


process.HLTDiphotonMVATestProducer = cms.EDProducer("MVATestProducer",
    #candTag = cms.InputTag( "hltDiEG22EtEta2p55UnseededFilter" ),
    candTag = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    inputTagR9 = cms.InputTag("hltEgammaR9IDUnseeded", "r95x5"),
    inputTagHoE = cms.InputTag("hltEgammaHoverEUnseeded"),
    inputTagSigmaiEtaiEta = cms.InputTag("hltEgammaClusterShapeUnseeded", "sigmaIEtaIEta5x5NoiseCleaned"),
    inputTagIso = cms.InputTag("hltEgammaEcalPFClusterIsoUnseeded"),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
)
process.HLTDiphotonMVATestFilter = cms.EDFilter("MVATestFilter",
    inputTag = cms.InputTag( "HLTDiphotonMVATestProducer" ),
)

process.hltEgammaR9IDUnseeded = cms.EDProducer( "EgammaHLTR9IDProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' )
)
process.hltDiEG22R9Id50b80eR9IdUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDiEG22EtEta2p55UnseededFilter" ),
    varTag = cms.InputTag( 'hltEgammaR9IDUnseeded','r95x5' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( False ),
    useEt = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.5 ),
    thrRegularEE = cms.vdouble( 0.8 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltEgammaHoverEUnseeded = cms.EDProducer( "EgammaHLTHcalVarProducerFromRecHit",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    etThresHB = cms.vdouble( 0.0, 0.0, 0.0, 0.0 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    etThresHE = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
    innerCone = cms.double( 0.0 ),
    outerCone = cms.double( 0.14 ),
    depth = cms.int32( 0 ),
    maxSeverityHB = cms.int32( 9 ),
    maxSeverityHE = cms.int32( 9 ),
    doEtSum = cms.bool( False ),
    useSingleTower = cms.bool( False ),
    effectiveAreas = cms.vdouble( 0.105, 0.17 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltDiEG22HE12R9Id50b80eHEUnseededFilter = cms.EDFilter( "HLTEgammaGenericQuadraticFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDiEG22R9Id50b80eR9IdUnseededFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.0 ),
    thrRegularEE = cms.vdouble( 0.0 ),
    thrOverEEB = cms.vdouble( 0.12 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( 0.0 ),
    thrOverE2EE = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltEG22R9Id85b90eHE12R9Id50b80eR9UnseededLastFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDiEG22HE12R9Id50b80eHEUnseededFilter" ),
    varTag = cms.InputTag( 'hltEgammaR9IDUnseeded','r95x5' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( False ),
    useEt = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.85 ),
    thrRegularEE = cms.vdouble( 0.9 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltEgammaClusterShapeUnseeded = cms.EDProducer( "EgammaHLTClusterShapeProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    isIeta = cms.bool( True ),
    multThresEB = cms.double( 1.0 ),
    multThresEE = cms.double( 1.25 )
)
process.hltEG22CaloId15b35eHE12R9Id50b80eClusterShapeUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDiEG22HE12R9Id50b80eHEUnseededFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShapeUnseeded','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.015 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltEgammaEcalPFClusterIsoUnseeded = cms.EDProducer( "EgammaHLTEcalPFClusterIsolationProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    pfClusterProducer = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.0 ),
    drVetoEndcap = cms.double( 0.0 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    effectiveAreas = cms.vdouble( 0.16544, 0.13212 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltEG22Iso60CaloId15b35eHE12R9Id50b80eEcalIsoUnseededFilter = cms.EDFilter( "HLTEgammaGenericQuadraticFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG22CaloId15b35eHE12R9Id50b80eClusterShapeUnseededFilter" ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIsoUnseeded" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    thrRegularEB = cms.vdouble( 6.0 ),
    thrRegularEE = cms.vdouble( 6.0 ),
    thrOverEEB = cms.vdouble( 0.012 ),
    thrOverEEE = cms.vdouble( 0.012 ),
    thrOverE2EB = cms.vdouble( 0.0 ),
    thrOverE2EE = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.16544, 0.13212 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltTowerMakerForAll = cms.EDProducer( "CaloTowersCreator",
    EBSumThreshold = cms.double( 0.2 ),
    HF2Weight = cms.double( 1.0 ),
    EBWeight = cms.double( 1.0 ),
    hfInput = cms.InputTag( "hltHfreco" ),
    EESumThreshold = cms.double( 0.45 ),
    HOThreshold0 = cms.double( 3.5 ),
    HOThresholdPlus1 = cms.double( 3.5 ),
    HOThresholdMinus1 = cms.double( 3.5 ),
    HOThresholdPlus2 = cms.double( 3.5 ),
    HOThresholdMinus2 = cms.double( 3.5 ),
    HBGrid = cms.vdouble(  ),
    HBThreshold1 = cms.double( 0.4 ),
    HBThreshold2 = cms.double( 0.3 ),
    HBThreshold = cms.double( 0.3 ),
    EEWeights = cms.vdouble(  ),
    HF1Threshold = cms.double( 0.5 ),
    HF2Weights = cms.vdouble(  ),
    HOWeights = cms.vdouble(  ),
    EEGrid = cms.vdouble(  ),
    HEDWeight = cms.double( 1.0 ),
    EEWeight = cms.double( 1.0 ),
    UseHO = cms.bool( False ),
    HBWeights = cms.vdouble(  ),
    HESWeight = cms.double( 1.0 ),
    HF1Weight = cms.double( 1.0 ),
    HF2Grid = cms.vdouble(  ),
    HEDWeights = cms.vdouble(  ),
    HF1Grid = cms.vdouble(  ),
    EBWeights = cms.vdouble(  ),
    HOWeight = cms.double( 1.0E-99 ),
    EBThreshold = cms.double( 0.07 ),
    EEThreshold = cms.double( 0.3 ),
    UseEtEBTreshold = cms.bool( False ),
    UseSymEBTreshold = cms.bool( False ),
    UseEtEETreshold = cms.bool( False ),
    UseSymEETreshold = cms.bool( False ),
    hbheInput = cms.InputTag( "hltHbhereco" ),
    HcalThreshold = cms.double( -1000.0 ),
    HF2Threshold = cms.double( 0.85 ),
    HESThreshold1 = cms.double( 0.1 ),
    HESThreshold = cms.double( 0.2 ),
    HF1Weights = cms.vdouble(  ),
    hoInput = cms.InputTag( "hltHoreco" ),
    HESGrid = cms.vdouble(  ),
    HESWeights = cms.vdouble(  ),
    HEDThreshold1 = cms.double( 0.1 ),
    HEDThreshold = cms.double( 0.2 ),
    EcutTower = cms.double( -1000.0 ),
    HEDGrid = cms.vdouble(  ),
    ecalInputs = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    HBWeight = cms.double( 1.0 ),
    HOGrid = cms.vdouble(  ),
    EBGrid = cms.vdouble(  ),
    MomConstrMethod = cms.int32( 1 ),
    MomHBDepth = cms.double( 0.2 ),
    MomHEDepth = cms.double( 0.4 ),
    MomEBDepth = cms.double( 0.3 ),
    MomEEDepth = cms.double( 0.0 ),
    HcalAcceptSeverityLevel = cms.uint32( 9 ),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring( 'kTime',
      'kWeird',
      'kBad' ),
    UseHcalRecoveredHits = cms.bool( False ),
    UseEcalRecoveredHits = cms.bool( False ),
    UseRejectedHitsOnly = cms.bool( False ),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32( 9999 ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(  ),
    UseRejectedRecoveredHcalHits = cms.bool( False ),
    UseRejectedRecoveredEcalHits = cms.bool( False ),
    missingHcalRescaleFactorForEcal = cms.double( 0.0 ),
    AllowMissingInputs = cms.bool( False ),
    HcalPhase = cms.int32( 1 )
)
process.hltAK4CaloJetsPF = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltTowerMakerForAll" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.4 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK4CaloJetsPFEt5 = cms.EDFilter( "EtMinCaloJetSelector",
    src = cms.InputTag( "hltAK4CaloJetsPF" ),
    filter = cms.bool( False ),
    etMin = cms.double( 5.0 )
)
process.hltOnlineBeamSpotToGPU = cms.EDProducer( "BeamSpotToCUDA",
    src = cms.InputTag( "hltOnlineBeamSpot" )
)
process.hltSiPixelDigiErrorsSoA = cms.EDProducer( "SiPixelDigiErrorsSoAFromCUDA",
    src = cms.InputTag( "hltSiPixelClustersGPU" )
)
process.hltSiPixelDigisLegacy = cms.EDProducer( "SiPixelRawToDigi",
    IncludeErrors = cms.bool( True ),
    UseQualityInfo = cms.bool( False ),
    ErrorList = cms.vint32( 29 ),
    UserErrorList = cms.vint32(  ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    Regions = cms.PSet(  ),
    UsePilotBlade = cms.bool( False ),
    UsePhase1 = cms.bool( True ),
    CablingMapLabel = cms.string( "" ),
    SiPixelQualityLabel = cms.string( "" )
)
process.hltSiPixelDigisSoA = cms.EDProducer( "SiPixelDigisSoAFromCUDA",
    src = cms.InputTag( "hltSiPixelClustersGPU" )
)
process.hltSiPixelDigisFromSoA = cms.EDProducer( "SiPixelDigiErrorsFromSoA",
    digiErrorSoASrc = cms.InputTag( "hltSiPixelDigiErrorsSoA" ),
    CablingMapLabel = cms.string( "" ),
    UsePhase1 = cms.bool( True ),
    ErrorList = cms.vint32( 29 ),
    UserErrorList = cms.vint32( 40 )
)
process.hltSiPixelClustersLegacy = cms.EDProducer( "SiPixelClusterProducer",
    src = cms.InputTag( "hltSiPixelDigisLegacy" ),
    ClusterMode = cms.string( "PixelThresholdClusterizer" ),
    maxNumberOfClusters = cms.int32( 40000 ),
    payloadType = cms.string( "HLT" ),
    ChannelThreshold = cms.int32( 10 ),
    MissCalibrate = cms.bool( True ),
    SplitClusters = cms.bool( False ),
    VCaltoElectronGain = cms.int32( 1 ),
    VCaltoElectronGain_L1 = cms.int32( 1 ),
    VCaltoElectronOffset = cms.int32( 0 ),
    VCaltoElectronOffset_L1 = cms.int32( 0 ),
    SeedThreshold = cms.int32( 1000 ),
    ClusterThreshold_L1 = cms.int32( 4000 ),
    ClusterThreshold = cms.int32( 4000 ),
    ElectronPerADCGain = cms.double( 135.0 ),
    DropDuplicates = cms.bool( True ),
    Phase2Calibration = cms.bool( False ),
    Phase2ReadoutMode = cms.int32( -1 ),
    Phase2DigiBaseline = cms.double( 1200.0 ),
    Phase2KinkADC = cms.int32( 8 )
)
process.hltSiPixelClustersGPU = cms.EDProducer( "SiPixelRawToClusterCUDAPhase1",
    IncludeErrors = cms.bool( True ),
    UseQualityInfo = cms.bool( False ),
    clusterThreshold_layer1 = cms.int32( 4000 ),
    clusterThreshold_otherLayers = cms.int32( 4000 ),
    VCaltoElectronGain = cms.double( 1.0 ),
    VCaltoElectronGain_L1 = cms.double( 1.0 ),
    VCaltoElectronOffset = cms.double( 0.0 ),
    VCaltoElectronOffset_L1 = cms.double( 0.0 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    Regions = cms.PSet(  ),
    CablingMapLabel = cms.string( "" )
)
process.hltSiPixelClustersFromSoA = cms.EDProducer( "SiPixelDigisClustersFromSoAPhase1",
    src = cms.InputTag( "hltSiPixelDigisSoA" ),
    clusterThreshold_layer1 = cms.int32( 4000 ),
    clusterThreshold_otherLayers = cms.int32( 4000 ),
    produceDigis = cms.bool( False ),
    storeDigis = cms.bool( False )
)
process.hltSiPixelClustersCache = cms.EDProducer( "SiPixelClusterShapeCacheProducer",
    src = cms.InputTag( "hltSiPixelClusters" ),
    onDemand = cms.bool( False )
)
process.hltSiPixelRecHitsFromLegacy = cms.EDProducer( "SiPixelRecHitSoAFromLegacyPhase1",
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    src = cms.InputTag( "hltSiPixelClusters" ),
    CPE = cms.string( "hltESPPixelCPEFast" ),
    convertToLegacy = cms.bool( True )
)
process.hltSiPixelRecHitsGPU = cms.EDProducer( "SiPixelRecHitCUDAPhase1",
    beamSpot = cms.InputTag( "hltOnlineBeamSpotToGPU" ),
    src = cms.InputTag( "hltSiPixelClustersGPU" ),
    CPE = cms.string( "hltESPPixelCPEFast" )
)
process.hltSiPixelRecHitsFromGPU = cms.EDProducer( "SiPixelRecHitFromCUDAPhase1",
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsGPU" ),
    src = cms.InputTag( "hltSiPixelClusters" )
)
process.hltSiPixelRecHitsSoAFromGPU = cms.EDProducer( "SiPixelRecHitSoAFromCUDAPhase1",
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsGPU" )
)
process.hltPixelTracksFitter = cms.EDProducer( "PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool( False ),
    scaleFactor = cms.double( 0.65 )
)
process.hltPixelTracksFilter = cms.EDProducer( "PixelTrackFilterByKinematicsProducer",
    ptMin = cms.double( 0.1 ),
    nSigmaInvPtTolerance = cms.double( 0.0 ),
    tipMax = cms.double( 1.0 ),
    nSigmaTipMaxTolerance = cms.double( 0.0 ),
    chi2 = cms.double( 1000.0 )
)
process.hltPixelTracksCPU = cms.EDProducer( "CAHitNtupletCUDAPhase1",
    onGPU = cms.bool( False ),
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsFromLegacy" ),
    ptmin = cms.double( 0.899999976158 ),
    CAThetaCutBarrel = cms.double( 0.00200000009499 ),
    CAThetaCutForward = cms.double( 0.00300000002608 ),
    hardCurvCut = cms.double( 0.0328407224959 ),
    dcaCutInnerTriplet = cms.double( 0.15000000596 ),
    dcaCutOuterTriplet = cms.double( 0.25 ),
    earlyFishbone = cms.bool( True ),
    lateFishbone = cms.bool( False ),
    fillStatistics = cms.bool( False ),
    minHitsPerNtuplet = cms.uint32( 3 ),
    maxNumberOfDoublets = cms.uint32( 524288 ),
    minHitsForSharingCut = cms.uint32( 10 ),
    fitNas4 = cms.bool( False ),
    doClusterCut = cms.bool( True ),
    doZ0Cut = cms.bool( True ),
    doPtCut = cms.bool( True ),
    useRiemannFit = cms.bool( False ),
    doSharedHitCut = cms.bool( True ),
    dupPassThrough = cms.bool( False ),
    useSimpleTripletCleaner = cms.bool( True ),
    idealConditions = cms.bool( False ),
    includeJumpingForwardDoublets = cms.bool( True ),
    z0Cut = cms.double( 12.0 ),
    ptCut = cms.double( 0.5 ),
    phiCuts = cms.vint32( 522, 730, 730, 522, 626, 626, 522, 522, 626, 626, 626, 522, 522, 522, 522, 522, 522, 522, 522 ),
    trackQualityCuts = cms.PSet( 
      chi2MaxPt = cms.double( 10.0 ),
      tripletMaxTip = cms.double( 0.3 ),
      chi2Scale = cms.double( 8.0 ),
      quadrupletMaxTip = cms.double( 0.5 ),
      quadrupletMinPt = cms.double( 0.3 ),
      quadrupletMaxZip = cms.double( 12.0 ),
      tripletMaxZip = cms.double( 12.0 ),
      tripletMinPt = cms.double( 0.5 ),
      chi2Coeff = cms.vdouble( 0.9, 1.8 )
    )
)
process.hltPixelTracksGPU = cms.EDProducer( "CAHitNtupletCUDAPhase1",
    onGPU = cms.bool( True ),
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsGPU" ),
    ptmin = cms.double( 0.899999976158 ),
    CAThetaCutBarrel = cms.double( 0.00200000009499 ),
    CAThetaCutForward = cms.double( 0.00300000002608 ),
    hardCurvCut = cms.double( 0.0328407224959 ),
    dcaCutInnerTriplet = cms.double( 0.15000000596 ),
    dcaCutOuterTriplet = cms.double( 0.25 ),
    earlyFishbone = cms.bool( True ),
    lateFishbone = cms.bool( False ),
    fillStatistics = cms.bool( False ),
    minHitsPerNtuplet = cms.uint32( 3 ),
    maxNumberOfDoublets = cms.uint32( 524288 ),
    minHitsForSharingCut = cms.uint32( 10 ),
    fitNas4 = cms.bool( False ),
    doClusterCut = cms.bool( True ),
    doZ0Cut = cms.bool( True ),
    doPtCut = cms.bool( True ),
    useRiemannFit = cms.bool( False ),
    doSharedHitCut = cms.bool( True ),
    dupPassThrough = cms.bool( False ),
    useSimpleTripletCleaner = cms.bool( True ),
    idealConditions = cms.bool( False ),
    includeJumpingForwardDoublets = cms.bool( True ),
    z0Cut = cms.double( 12.0 ),
    ptCut = cms.double( 0.5 ),
    phiCuts = cms.vint32( 522, 730, 730, 522, 626, 626, 522, 522, 626, 626, 626, 522, 522, 522, 522, 522, 522, 522, 522 ),
    trackQualityCuts = cms.PSet( 
      chi2MaxPt = cms.double( 10.0 ),
      tripletMaxTip = cms.double( 0.3 ),
      chi2Scale = cms.double( 8.0 ),
      quadrupletMaxTip = cms.double( 0.5 ),
      quadrupletMinPt = cms.double( 0.3 ),
      quadrupletMaxZip = cms.double( 12.0 ),
      tripletMaxZip = cms.double( 12.0 ),
      tripletMinPt = cms.double( 0.5 ),
      chi2Coeff = cms.vdouble( 0.9, 1.8 )
    )
)
process.hltPixelTracksFromGPU = cms.EDProducer( "PixelTrackSoAFromCUDAPhase1",
    src = cms.InputTag( "hltPixelTracksGPU" )
)
process.hltPixelTracks = cms.EDProducer( "PixelTrackProducerFromSoAPhase1",
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    trackSrc = cms.InputTag( "hltPixelTracksSoA" ),
    pixelRecHitLegacySrc = cms.InputTag( "hltSiPixelRecHits" ),
    minNumberOfHits = cms.int32( 0 ),
    minQuality = cms.string( "loose" )
)
process.hltPixelTracksTrackingRegions = cms.EDProducer( "GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet( 
      nSigmaZ = cms.double( 4.0 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      ptMin = cms.double( 0.8 ),
      originRadius = cms.double( 0.02 ),
      precise = cms.bool( True )
    )
)
process.hltPixelVerticesCPU = cms.EDProducer( "PixelVertexProducerCUDAPhase1",
    onGPU = cms.bool( False ),
    oneKernel = cms.bool( True ),
    useDensity = cms.bool( True ),
    useDBSCAN = cms.bool( False ),
    useIterative = cms.bool( False ),
    doSplitting = cms.bool( True ),
    minT = cms.int32( 2 ),
    eps = cms.double( 0.07 ),
    errmax = cms.double( 0.01 ),
    chi2max = cms.double( 9.0 ),
    PtMin = cms.double( 0.5 ),
    PtMax = cms.double( 75.0 ),
    pixelTrackSrc = cms.InputTag( "hltPixelTracksSoA" )
)
process.hltPixelVerticesGPU = cms.EDProducer( "PixelVertexProducerCUDAPhase1",
    onGPU = cms.bool( True ),
    oneKernel = cms.bool( True ),
    useDensity = cms.bool( True ),
    useDBSCAN = cms.bool( False ),
    useIterative = cms.bool( False ),
    doSplitting = cms.bool( True ),
    minT = cms.int32( 2 ),
    eps = cms.double( 0.07 ),
    errmax = cms.double( 0.01 ),
    chi2max = cms.double( 9.0 ),
    PtMin = cms.double( 0.5 ),
    PtMax = cms.double( 75.0 ),
    pixelTrackSrc = cms.InputTag( "hltPixelTracksGPU" )
)
process.hltPixelVerticesFromGPU = cms.EDProducer( "PixelVertexSoAFromCUDA",
    src = cms.InputTag( "hltPixelVerticesGPU" )
)
process.hltPixelVertices = cms.EDProducer( "PixelVertexProducerFromSoA",
    TrackCollection = cms.InputTag( "hltPixelTracks" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    src = cms.InputTag( "hltPixelVerticesSoA" )
)
process.hltTrimmedPixelVertices = cms.EDProducer( "PixelVertexCollectionTrimmer",
    src = cms.InputTag( "hltPixelVertices" ),
    maxVtx = cms.uint32( 100 ),
    fractionSumPt2 = cms.double( 0.3 ),
    minSumPt2 = cms.double( 0.0 ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) )
)
process.hltSiStripExcludedFEDListProducer = cms.EDProducer( "SiStripExcludedFEDListProducer",
    ProductLabel = cms.InputTag( "rawDataCollector" )
)
process.hltSiStripRawToClustersFacility = cms.EDProducer( "SiStripClusterizerFromRaw",
    ProductLabel = cms.InputTag( "rawDataCollector" ),
    ConditionsLabel = cms.string( "" ),
    onDemand = cms.bool( True ),
    DoAPVEmulatorCheck = cms.bool( False ),
    LegacyUnpacker = cms.bool( False ),
    HybridZeroSuppressed = cms.bool( False ),
    Clusterizer = cms.PSet( 
      ConditionsLabel = cms.string( "" ),
      ClusterThreshold = cms.double( 5.0 ),
      SeedThreshold = cms.double( 3.0 ),
      Algorithm = cms.string( "ThreeThresholdAlgorithm" ),
      ChannelThreshold = cms.double( 2.0 ),
      MaxAdjacentBad = cms.uint32( 0 ),
      setDetId = cms.bool( True ),
      MaxSequentialHoles = cms.uint32( 0 ),
      RemoveApvShots = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      MaxSequentialBad = cms.uint32( 1 )
    ),
    Algorithms = cms.PSet( 
      Use10bitsTruncation = cms.bool( False ),
      CommonModeNoiseSubtractionMode = cms.string( "Median" ),
      useCMMeanMap = cms.bool( False ),
      TruncateInSuppressor = cms.bool( True ),
      doAPVRestore = cms.bool( False ),
      SiStripFedZeroSuppressionMode = cms.uint32( 4 ),
      PedestalSubtractionFedMode = cms.bool( True )
    )
)
process.hltMeasurementTrackerEvent = cms.EDProducer( "MeasurementTrackerEventProducer",
    measurementTracker = cms.string( "hltESPMeasurementTracker" ),
    skipClusters = cms.InputTag( "" ),
    pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
    stripClusterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
    Phase2TrackerCluster1DProducer = cms.string( "" ),
    vectorHits = cms.InputTag( "" ),
    vectorHitsRej = cms.InputTag( "" ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigis' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigis' ),
    pixelCablingMapLabel = cms.string( "" ),
    inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
    switchOffPixelsIfEmpty = cms.bool( True )
)
process.hltIter0PFLowPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracks" ),
    InputVertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0PFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0PFLowPixelSeedsFromPixelTracks" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0PFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0PFlowCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0PFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.6, 0.6 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.8, 0.8 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.75, 0.75 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.5, 0.5 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltIter0PFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltDoubletRecoveryClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltIter0PFlowTrackSelectionHighPurity" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
process.hltDoubletRecoveryMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    OnDemand = cms.bool( False ),
    clustersToSkip = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" )
)
process.hltDoubletRecoveryPixelLayersAndRegions = cms.EDProducer( "PixelInactiveAreaTrackingRegionsSeedingLayersProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      extraPhi = cms.double( 0.0 ),
      extraEta = cms.double( 0.0 ),
      maxNVertices = cms.int32( 3 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 1.2 ),
      operationMode = cms.string( "VerticesFixed" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.015 ),
      measurementTrackerName = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      zErrorVertex = cms.double( 0.03 )
    ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigis' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigis' ),
    ignoreSingleFPixPanelModules = cms.bool( True ),
    debug = cms.untracked.bool( False ),
    createPlottingFiles = cms.untracked.bool( False ),
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltDoubletRecoveryPFlowPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 50000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False )
)
process.hltDoubletRecoveryPFlowPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "" ),
    trackingRegions = cms.InputTag( "" ),
    trackingRegionsSeedingLayers = cms.InputTag( "hltDoubletRecoveryPixelLayersAndRegions" ),
    clusterCheck = cms.InputTag( "hltDoubletRecoveryPFlowPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( False ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltDoubletRecoveryPFlowPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltDoubletRecoveryPFlowPixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltDoubletRecoveryPFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltDoubletRecoveryPFlowPixelSeeds" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltDoubletRecoveryPFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltDoubletRecoveryPFlowCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltDoubletRecovery" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" )
)
process.hltDoubletRecoveryPFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltDoubletRecoveryPFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltMergedTracks = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltEgammaHollowTrackIsoUnseeded = cms.EDProducer( "EgammaHLTPhotonTrackIsolationProducersRegional",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    trackProducer = cms.InputTag( "hltMergedTracks" ),
    countTracks = cms.bool( False ),
    egTrkIsoPtMin = cms.double( 1.0 ),
    egTrkIsoConeSize = cms.double( 0.29 ),
    egTrkIsoZSpan = cms.double( 999999.0 ),
    egTrkIsoRSpan = cms.double( 999999.0 ),
    egTrkIsoVetoConeSize = cms.double( 0.06 ),
    egTrkIsoStripBarrel = cms.double( 0.03 ),
    egTrkIsoStripEndcap = cms.double( 0.03 )
)
process.hltEG22Iso60CaloId15b35eHE12R9Id50b80eTrackIsoUnseededLastFilter = cms.EDFilter( "HLTEgammaGenericQuadraticFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG22Iso60CaloId15b35eHE12R9Id50b80eEcalIsoUnseededFilter" ),
    varTag = cms.InputTag( "hltEgammaHollowTrackIsoUnseeded" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    thrRegularEB = cms.vdouble( 6.0 ),
    thrRegularEE = cms.vdouble( 6.0 ),
    thrOverEEB = cms.vdouble( 0.002 ),
    thrOverEEE = cms.vdouble( 0.002 ),
    thrOverE2EB = cms.vdouble( 0.0 ),
    thrOverE2EE = cms.vdouble( 0.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltDiEG22R9Id85b90eORIso60CaloId15b35eANDHE12R9Id50b80eMass90CombMassLastFilter = cms.EDFilter( "HLTEgammaAllCombMassFilter",
    saveTags = cms.bool( True ),
    firstLegLastFilter = cms.InputTag( "hltEG22R9Id85b90eHE12R9Id50b80eR9UnseededLastFilter" ),
    secondLegLastFilter = cms.InputTag( "hltEG22Iso60CaloId15b35eHE12R9Id50b80eTrackIsoUnseededLastFilter" ),
    minMass = cms.double( 90.0 )
)
process.hltBoolEnd = cms.EDFilter( "HLTBool",
    result = cms.bool( True )
)
process.hltPreDiphoton3022R9IdORIsoCaloIdANDHER9IdMass95 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDiEG22R9Id85b95eORIso60CaloId15b35eANDHE12R9Id50b80eMass95CombMassLastFilter = cms.EDFilter( "HLTEgammaAllCombMassFilter",
    saveTags = cms.bool( True ),
    firstLegLastFilter = cms.InputTag( "hltEG22R9Id85b90eHE12R9Id50b80eR9UnseededLastFilter" ),
    secondLegLastFilter = cms.InputTag( "hltEG22Iso60CaloId15b35eHE12R9Id50b80eTrackIsoUnseededLastFilter" ),
    minMass = cms.double( 95.0 )
)

process.hltPreDiphotonMVATest = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)

process.hltDatasetEGamma = cms.EDFilter( "TriggerResultsFilter",
    usePathStatus = cms.bool( True ),
    hltResults = cms.InputTag( "" ),
    l1tResults = cms.InputTag( "" ),
    l1tIgnoreMaskAndPrescale = cms.bool( False ),
    throw = cms.bool( True ),
    triggerConditions = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v10',
      'HLT_DiPhoton10Time1ns_v6',
      'HLT_DiPhoton10Time1p2ns_v6',
      'HLT_DiPhoton10Time1p4ns_v6',
      'HLT_DiPhoton10Time1p6ns_v6',
      'HLT_DiPhoton10Time1p8ns_v6',
      'HLT_DiPhoton10Time2ns_v6',
      'HLT_DiPhoton10_CaloIdL_v6',
      'HLT_DiPhoton10sminlt0p12_v6',
      'HLT_DiPhoton10sminlt0p1_v6',
      'HLT_DiSC30_18_EIso_AND_HE_Mass70_v20',
      'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
      'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6',
      'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
      'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v6',
      'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
      'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v6',
      'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v7',
      'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v7',
      'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19',
      'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19',
      'HLT_Diphoton_MVATest',
      'HLT_DoubleEle25_CaloIdL_MW_v11',
      'HLT_DoubleEle27_CaloIdL_MW_v11',
      'HLT_DoubleEle33_CaloIdL_MW_v24',
      'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v26',
      'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v26',
      'HLT_DoublePhoton33_CaloIdL_v13',
      'HLT_DoublePhoton70_v13',
      'HLT_DoublePhoton85_v21',
      'HLT_ECALHT800_v16',
      'HLT_Ele115_CaloIdVT_GsfTrkIdT_v21',
      'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
      'HLT_Ele135_CaloIdVT_GsfTrkIdT_v14',
      'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v22',
      'HLT_Ele15_IsoVVVL_PFHT450_v22',
      'HLT_Ele15_IsoVVVL_PFHT600_v26',
      'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v15',
      'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v22',
      'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
      'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v24',
      'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
      'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v25',
      'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v7',
      'HLT_Ele28_HighEta_SC20_Mass55_v19',
      'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v19',
      'HLT_Ele30_WPTight_Gsf_v7',
      'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v19',
      'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v15',
      'HLT_Ele32_WPTight_Gsf_v21',
      'HLT_Ele35_WPTight_Gsf_v15',
      'HLT_Ele38_WPTight_Gsf_v15',
      'HLT_Ele40_WPTight_Gsf_v15',
      'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v3',
      'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v6',
      'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v3',
      'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v3',
      'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v6',
      'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v24',
      'HLT_Ele50_IsoVVVL_PFHT450_v22',
      'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v22',
      'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v24',
      'HLT_Photon100EBHE10_v8',
      'HLT_Photon110EB_TightID_TightIso_v8',
      'HLT_Photon120_R9Id90_HE10_IsoM_v20',
      'HLT_Photon120_v19',
      'HLT_Photon130EB_TightID_TightIso_v4',
      'HLT_Photon150EB_TightID_TightIso_v4',
      'HLT_Photon150_v13',
      'HLT_Photon165_R9Id90_HE10_IsoM_v21',
      'HLT_Photon175EB_TightID_TightIso_v4',
      'HLT_Photon175_v21',
      'HLT_Photon200EB_TightID_TightIso_v4',
      'HLT_Photon200_v20',
      'HLT_Photon20_HoverELoose_v16',
      'HLT_Photon300_NoHE_v19',
      'HLT_Photon30EB_TightID_TightIso_v7',
      'HLT_Photon30_HoverELoose_v16',
      'HLT_Photon32_OneProng32_M50To105_v4',
      'HLT_Photon33_v11',
      'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v2',
      'HLT_Photon35_TwoProngs35_v7',
      'HLT_Photon50EB_TightID_TightIso_v4',
      'HLT_Photon50_R9Id90_HE10_IsoM_v20',
      'HLT_Photon50_TimeGt2p5ns_v3',
      'HLT_Photon50_TimeLtNeg2p5ns_v3',
      'HLT_Photon50_v19',
      'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v4',
      'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v4',
      'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v4',
      'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v3',
      'HLT_Photon75EB_TightID_TightIso_v4',
      'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v11',
      'HLT_Photon75_R9Id90_HE10_IsoM_v20',
      'HLT_Photon75_v19',
      'HLT_Photon90EB_TightID_TightIso_v4',
      'HLT_Photon90_R9Id90_HE10_IsoM_v20',
      'HLT_Photon90_v19' )
)
process.hltPreDatasetEGamma0 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreDatasetEGamma1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 1 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)

process.hltEcalDigis = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltEcalDigisLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "EBDigiCollection" )         ),
         cms.PSet(  type = cms.string( "EEDigiCollection" )         ),
         cms.PSet(  type = cms.string( "EBDetIdedmEDCollection" )         ),
         cms.PSet(  type = cms.string( "EEDetIdedmEDCollection" )         ),
         cms.PSet(  type = cms.string( "EBSrFlagsSorted" )         ),
         cms.PSet(  type = cms.string( "EESrFlagsSorted" )         ),
         cms.PSet(  type = cms.string( "EcalElectronicsIdedmEDCollection" ),
           fromProductInstance = cms.string( "EcalIntegrityBlockSizeErrors" )
         ),
         cms.PSet(  type = cms.string( "EcalElectronicsIdedmEDCollection" ),
           fromProductInstance = cms.string( "EcalIntegrityTTIdErrors" )
         ),
         cms.PSet(  type = cms.string( "EcalElectronicsIdedmEDCollection" ),
           fromProductInstance = cms.string( "EcalIntegrityZSXtalIdErrors" )
         ),
         cms.PSet(  type = cms.string( "EcalPnDiodeDigisSorted" )         ),
         cms.PSet(  type = cms.string( "EcalPseudoStripInputDigisSorted" ),
           fromProductInstance = cms.string( "EcalPseudoStripInputs" )
         ),
         cms.PSet(  type = cms.string( "EcalTriggerPrimitiveDigisSorted" ),
           fromProductInstance = cms.string( "EcalTriggerPrimitives" )
         )
       )
   ),
  cuda = cms.EDAlias(
       hltEcalDigisFromGPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "EBDigiCollection" )         ),
         cms.PSet(  type = cms.string( "EEDigiCollection" )         )
       ),
       hltEcalDigisLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "EBDetIdedmEDCollection" )         ),
         cms.PSet(  type = cms.string( "EEDetIdedmEDCollection" )         ),
         cms.PSet(  type = cms.string( "EBSrFlagsSorted" )         ),
         cms.PSet(  type = cms.string( "EESrFlagsSorted" )         ),
         cms.PSet(  type = cms.string( "EcalElectronicsIdedmEDCollection" ),
           fromProductInstance = cms.string( "EcalIntegrityBlockSizeErrors" )
         ),
         cms.PSet(  type = cms.string( "EcalElectronicsIdedmEDCollection" ),
           fromProductInstance = cms.string( "EcalIntegrityTTIdErrors" )
         ),
         cms.PSet(  type = cms.string( "EcalElectronicsIdedmEDCollection" ),
           fromProductInstance = cms.string( "EcalIntegrityZSXtalIdErrors" )
         ),
         cms.PSet(  type = cms.string( "EcalPnDiodeDigisSorted" )         ),
         cms.PSet(  type = cms.string( "EcalPseudoStripInputDigisSorted" ),
           fromProductInstance = cms.string( "EcalPseudoStripInputs" )
         ),
         cms.PSet(  type = cms.string( "EcalTriggerPrimitiveDigisSorted" ),
           fromProductInstance = cms.string( "EcalTriggerPrimitives" )
         )
       )
   ),
 )
process.hltEcalUncalibRecHit = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltEcalUncalibRecHitLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltEcalUncalibRecHitFromSoA = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
 )
process.hltHbhereco = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltHbherecoLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltHbherecoFromGPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "HBHERecHitsSorted" )         )
       )
   ),
 )
process.hltSiPixelDigis = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltSiPixelDigisLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "DetIdedmEDCollection" )         ),
         cms.PSet(  type = cms.string( "SiPixelRawDataErroredmDetSetVector" )         ),
         cms.PSet(  type = cms.string( "PixelFEDChanneledmNewDetSetVector" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltSiPixelDigisFromSoA = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
 )
process.hltSiPixelClusters = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltSiPixelClustersLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "SiPixelClusteredmNewDetSetVector" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltSiPixelClustersFromSoA = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
 )
process.hltSiPixelRecHits = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltSiPixelRecHitsFromLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "SiPixelRecHitedmNewDetSetVector" )         ),
         cms.PSet(  type = cms.string( "uintAsHostProduct" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltSiPixelRecHitsFromGPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
 )
process.hltSiPixelRecHitsSoA = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltSiPixelRecHitsFromLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "pixelTopologyPhase1TrackingRecHitSoAHost" )         ),
         cms.PSet(  type = cms.string( "uintAsHostProduct" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltSiPixelRecHitsSoAFromGPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
 )
process.hltPixelTracksSoA = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltPixelTracksCPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltPixelTracksFromGPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
 )
process.hltPixelVerticesSoA = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltPixelVerticesCPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltPixelVerticesFromGPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
 )

process.hltOutputPhysicsEGamma0 = cms.OutputModule( "GlobalEvFOutputModule",
    use_compression = cms.untracked.bool( True ),
    compression_algorithm = cms.untracked.string( "ZSTD" ),
    compression_level = cms.untracked.int32( 3 ),
    lumiSection_interval = cms.untracked.int32( 0 ),
    SelectEvents = cms.untracked.PSet(  SelectEvents = cms.vstring( 'Dataset_EGamma0' ) ),
    outputCommands = cms.untracked.vstring( 'drop *',
      'keep FEDRawDataCollection_rawDataCollector_*_*',
      'keep FEDRawDataCollection_source_*_*',
      'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
      'keep edmTriggerResults_*_*_*',
      'keep triggerTriggerEvent_*_*_*' ),
    psetMap = cms.untracked.InputTag( "hltPSetMap" )
)
process.hltOutputPhysicsEGamma1 = cms.OutputModule( "GlobalEvFOutputModule",
    use_compression = cms.untracked.bool( True ),
    compression_algorithm = cms.untracked.string( "ZSTD" ),
    compression_level = cms.untracked.int32( 3 ),
    lumiSection_interval = cms.untracked.int32( 0 ),
    SelectEvents = cms.untracked.PSet(  SelectEvents = cms.vstring( 'Dataset_EGamma1' ) ),
    outputCommands = cms.untracked.vstring( 'drop *',
      'keep FEDRawDataCollection_rawDataCollector_*_*',
      'keep FEDRawDataCollection_source_*_*',
      'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
      'keep edmTriggerResults_*_*_*',
      'keep triggerTriggerEvent_*_*_*' ),
    psetMap = cms.untracked.InputTag( "hltPSetMap" )
)

process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerTask = cms.ConditionalTask( process.hltEcalDigisLegacy , process.hltEcalDigisGPU , process.hltEcalDigisFromGPU , process.hltEcalDigis , process.hltEcalDetIdToBeRecovered , process.hltEcalUncalibRecHitLegacy , process.hltEcalUncalibRecHitGPU , process.hltEcalUncalibRecHitSoA , process.hltEcalUncalibRecHitFromSoA , process.hltEcalUncalibRecHit , process.hltEcalRecHit )
process.HLTPreshowerTask = cms.ConditionalTask( process.hltEcalPreshowerDigis , process.hltEcalPreshowerRecHit )
process.HLTDoFullUnpackingEgammaEcalTask = cms.ConditionalTask( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerTask , process.HLTPreshowerTask )
process.HLTDoLocalHcalTask = cms.ConditionalTask( process.hltHcalDigis , process.hltHcalDigisGPU , process.hltHbherecoLegacy , process.hltHbherecoGPU , process.hltHbherecoFromGPU , process.hltHbhereco , process.hltHfprereco , process.hltHfreco , process.hltHoreco )
process.HLTDoLocalPixelTask = cms.ConditionalTask( process.hltOnlineBeamSpotToGPU , process.hltSiPixelDigiErrorsSoA , process.hltSiPixelDigisLegacy , process.hltSiPixelDigisSoA , process.hltSiPixelDigisFromSoA , process.hltSiPixelDigis , process.hltSiPixelClustersLegacy , process.hltSiPixelClustersGPU , process.hltSiPixelClustersFromSoA , process.hltSiPixelClusters , process.hltSiPixelClustersCache , process.hltSiPixelRecHitsFromLegacy , process.hltSiPixelRecHitsGPU , process.hltSiPixelRecHitsFromGPU , process.hltSiPixelRecHits , process.hltSiPixelRecHitsSoAFromGPU , process.hltSiPixelRecHitsSoA )
process.HLTRecoPixelTracksTask = cms.ConditionalTask( process.hltPixelTracksCPU , process.hltPixelTracksGPU , process.hltPixelTracksFromGPU , process.hltPixelTracksSoA , process.hltPixelTracks , process.hltPixelTracksTrackingRegions )
process.HLTRecopixelvertexingTask = cms.ConditionalTask( process.HLTRecoPixelTracksTask , process.hltPixelVerticesCPU , process.hltPixelVerticesGPU , process.hltPixelVerticesFromGPU , process.hltPixelVerticesSoA , process.hltPixelVertices , process.hltTrimmedPixelVertices )

process.HLTL1UnpackerSequence = cms.Sequence( process.hltGtStage2Digis + process.hltGtStage2ObjectMap )
process.HLTBeamSpot = cms.Sequence( process.hltOnlineMetaDataDigis + process.hltOnlineBeamSpot )
process.HLTBeginSequence = cms.Sequence( process.hltTriggerType + process.HLTL1UnpackerSequence + process.HLTBeamSpot )
process.HLTDoFullUnpackingEgammaEcalSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalTask )
process.HLTPFClusteringForEgamma = cms.Sequence( process.hltRechitInRegionsECAL + process.hltRechitInRegionsES + process.hltParticleFlowRecHitECALL1Seeded + process.hltParticleFlowRecHitPSL1Seeded + process.hltParticleFlowClusterPSL1Seeded + process.hltParticleFlowClusterECALUncorrectedL1Seeded + process.hltParticleFlowClusterECALL1Seeded + process.hltParticleFlowSuperClusterECALL1Seeded )
process.HLTDoLocalHcalSequence = cms.Sequence( process.HLTDoLocalHcalTask )
process.HLTFastJetForEgamma = cms.Sequence( process.hltFixedGridRhoFastjetAllCaloForMuons )
process.HLTPFClusteringForEgammaUnseeded = cms.Sequence( process.hltParticleFlowRecHitECALUnseeded + process.hltParticleFlowRecHitPSUnseeded + process.hltParticleFlowClusterPSUnseeded + process.hltParticleFlowClusterECALUncorrectedUnseeded + process.hltParticleFlowClusterECALUnseeded + process.hltParticleFlowSuperClusterECALUnseeded )
process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerTask )
process.HLTDoCaloSequencePF = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence + process.HLTDoLocalHcalSequence + process.hltTowerMakerForAll )
process.HLTAK4CaloJetsPrePFRecoSequence = cms.Sequence( process.HLTDoCaloSequencePF + process.hltAK4CaloJetsPF )
process.HLTPreAK4PFJetsRecoSequence = cms.Sequence( process.HLTAK4CaloJetsPrePFRecoSequence + process.hltAK4CaloJetsPFEt5 )
process.HLTDoLocalPixelSequence = cms.Sequence( process.HLTDoLocalPixelTask )
process.HLTRecopixelvertexingSequence = cms.Sequence( process.hltPixelTracksFitter + process.hltPixelTracksFilter,process.HLTRecopixelvertexingTask )
process.HLTDoLocalStripSequence = cms.Sequence( process.hltSiStripExcludedFEDListProducer + process.hltSiStripRawToClustersFacility + process.hltMeasurementTrackerEvent )
process.HLTIterativeTrackingIteration0 = cms.Sequence( process.hltIter0PFLowPixelSeedsFromPixelTracks + process.hltIter0PFlowCkfTrackCandidates + process.hltIter0PFlowCtfWithMaterialTracks + process.hltIter0PFlowTrackCutClassifier + process.hltIter0PFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingDoubletRecovery = cms.Sequence( process.hltDoubletRecoveryClustersRefRemoval + process.hltDoubletRecoveryMaskedMeasurementTrackerEvent + process.hltDoubletRecoveryPixelLayersAndRegions + process.hltDoubletRecoveryPFlowPixelClusterCheck + process.hltDoubletRecoveryPFlowPixelHitDoublets + process.hltDoubletRecoveryPFlowPixelSeeds + process.hltDoubletRecoveryPFlowCkfTrackCandidates + process.hltDoubletRecoveryPFlowCtfWithMaterialTracks + process.hltDoubletRecoveryPFlowTrackCutClassifier + process.hltDoubletRecoveryPFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingIter02 = cms.Sequence( process.HLTIterativeTrackingIteration0 + process.HLTIterativeTrackingDoubletRecovery + process.hltMergedTracks )
process.HLTTrackReconstructionForPFNoMu = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecopixelvertexingSequence + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingIter02 )
process.HLTTrackReconstructionForIsoForPhotons = cms.Sequence( process.HLTPreAK4PFJetsRecoSequence + process.HLTTrackReconstructionForPFNoMu )
process.HLTDiphoton30L22R9Id85b90eORIso60CaloId15b35eANDHE12R9Id50b80eSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleAndDoubleEGOrFilter + process.hltEG30L1SingleAndDoubleEGOrEtFilter + process.hltEgammaR9ID + process.hltEG30LR9Id50b80eR9IdFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEG30LHE12R9Id50b80eHEFilter + cms.ignore(process.hltEG30LR9Id85b90eHE12R9Id50b80eR9IdLastFilter) + process.hltEgammaClusterShape + cms.ignore(process.hltEG30LCaloId15b35eHE12R9Id50b80eClusterShapeFilter) + process.hltEgammaEcalPFClusterIso + cms.ignore(process.hltEG30LIso60CaloId15b35eHE12R9Id50b80eEcalIsoLastFilter) + process.hltEG30LRId85ORIso60CaloId15b35eANDHE12R9Id50b80eLegCombLastFilter + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltDiEG22EtEta2p55UnseededFilter + process.hltEgammaR9IDUnseeded + process.hltDiEG22R9Id50b80eR9IdUnseededFilter + process.hltEgammaHoverEUnseeded + process.hltDiEG22HE12R9Id50b80eHEUnseededFilter + cms.ignore(process.hltEG22R9Id85b90eHE12R9Id50b80eR9UnseededLastFilter) + process.hltEgammaClusterShapeUnseeded + cms.ignore(process.hltEG22CaloId15b35eHE12R9Id50b80eClusterShapeUnseededFilter) + process.hltEgammaEcalPFClusterIsoUnseeded + cms.ignore(process.hltEG22Iso60CaloId15b35eHE12R9Id50b80eEcalIsoUnseededFilter) + process.HLTTrackReconstructionForIsoForPhotons + process.hltEgammaHollowTrackIsoUnseeded + cms.ignore(process.hltEG22Iso60CaloId15b35eHE12R9Id50b80eTrackIsoUnseededLastFilter) )

#NEW SEQUENCE
process.HLTDiphotonMvaTestSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleAndDoubleEGOrFilter + process.hltEG30L1SingleAndDoubleEGOrEtFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEgammaClusterShape + process.hltEgammaEcalPFClusterIso + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltDiEG22EtEta2p55UnseededFilter + process.hltEgammaR9IDUnseeded + process.hltEgammaHoverEUnseeded + process.hltEgammaClusterShapeUnseeded + process.hltEgammaEcalPFClusterIsoUnseeded )# + process.preMVATestFilter)

process.HLTEndSequence = cms.Sequence( process.hltBoolEnd )
process.HLTDatasetPathBeginSequence = cms.Sequence( process.hltGtStage2Digis )

process.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEGor + process.hltPreDiphoton3022R9IdORIsoCaloIdANDHER9IdMass90 + process.HLTDiphoton30L22R9Id85b90eORIso60CaloId15b35eANDHE12R9Id50b80eSequence + process.hltDiEG22R9Id85b90eORIso60CaloId15b35eANDHE12R9Id50b80eMass90CombMassLastFilter + process.HLTEndSequence )
process.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEGor + process.hltPreDiphoton3022R9IdORIsoCaloIdANDHER9IdMass95 + process.HLTDiphoton30L22R9Id85b90eORIso60CaloId15b35eANDHE12R9Id50b80eSequence + process.hltDiEG22R9Id85b95eORIso60CaloId15b35eANDHE12R9Id50b80eMass95CombMassLastFilter + process.HLTEndSequence )

#NEW PATH
process.HLT_Diphoton_MVATest = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEGor + process.hltPreDiphotonMVATest + process.HLTDiphotonMvaTestSequence  + process.HLTDiphotonMVATestProducer + process.HLTDiphotonMVATestFilter + process.HLTEndSequence )

process.Dataset_EGamma0 = cms.Path( process.HLTDatasetPathBeginSequence + process.hltDatasetEGamma + process.hltPreDatasetEGamma0 )
process.Dataset_EGamma1 = cms.Path( process.HLTDatasetPathBeginSequence + process.hltDatasetEGamma + process.hltPreDatasetEGamma1 )
process.PhysicsEGamma0Output = cms.FinalPath( process.hltOutputPhysicsEGamma0 )
process.PhysicsEGamma1Output = cms.FinalPath( process.hltOutputPhysicsEGamma1 )


process.schedule = cms.Schedule( *(process.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19, process.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19, process.HLT_Diphoton_MVATest, process.Dataset_EGamma0, process.Dataset_EGamma1, process.PhysicsEGamma0Output, process.PhysicsEGamma1Output, ))

### DAQ PATCH


import FWCore.ParameterSet.VarParsing as VarParsing

import os

cmsswbase = os.path.expandvars('$CMSSW_BASE/')

options = VarParsing.VarParsing ('analysis')

options.register ('runNumber',
                  370293, # default value
                  VarParsing.VarParsing.multiplicity.singleton,
                  VarParsing.VarParsing.varType.int,          # string, int, or float
                  "Run Number")

options.register ('buBaseDir',
                  'BU0', # default value
                  VarParsing.VarParsing.multiplicity.singleton,
                  VarParsing.VarParsing.varType.string,          # string, int, or float
                  "BU base directory")

options.register ('dataDir',
                  'data', # default value
                  VarParsing.VarParsing.multiplicity.singleton,
                  VarParsing.VarParsing.varType.string,          # string, int, or float
                  "FU data directory")

options.register ('numThreads',
                  1, # default value
                  VarParsing.VarParsing.multiplicity.singleton,
                  VarParsing.VarParsing.varType.int,          # string, int, or float
                  "Number of CMSSW threads")

options.register ('numFwkStreams',
                  1, # default value
                  VarParsing.VarParsing.multiplicity.singleton,
                  VarParsing.VarParsing.varType.int,          # string, int, or float
                  "Number of CMSSW streams")

options.register ('fileBrokerHost',
                  'localhost', # default value
                  VarParsing.VarParsing.multiplicity.singleton,
                  VarParsing.VarParsing.varType.string,       # string, int, or float
                  "File broker host data network address")

options.register ('transferMode',
                  '', # default value
                  VarParsing.VarParsing.multiplicity.singleton,
                  VarParsing.VarParsing.varType.string,          # string, int, or float
                  "Selected transfer mode propagated by RCMS")

options.register ('runUniqueKey',
                  'InValid', # default value
                  VarParsing.VarParsing.multiplicity.singleton,
                  VarParsing.VarParsing.varType.string,          # string, int, or float
                  "Unique run key from RCMS for Frontier")

options.parseArguments()

process.options.numberOfThreads = options.numThreads
process.options.numberOfStreams = options.numFwkStreams
process.options.numberOfConcurrentLuminosityBlocks = 2

process.EvFDaqDirector.buBaseDir    = options.buBaseDir
process.EvFDaqDirector.baseDir      = options.dataDir
process.EvFDaqDirector.runNumber    = options.runNumber
process.EvFDaqDirector.fileBrokerHost = options.fileBrokerHost
process.EvFDaqDirector.useFileBroker  = True

#parameter will be removed from future releases
try:
    process.EvFDaqDirector.fileBrokerHostFromCfg = False
except:
    print("Unable to set process.EvFDaqDirector.fileBrokerHostFromCfg = False")

#pass transfer mode to the director module for setting stream destinations
try:
    process.EvFDaqDirector.selectedTransferMode = options.transferMode
except:
    print("unable to set process.EvFDaqDirector.selectedTransferMode =", options.transferMode)

#options to override compression algorithm and level for the streamer output
C_LEVEL_UNDEFINED = -1
C_ALGO_UNDEFINED = ""
for moduleName in process.__dict__['_Process__outputmodules']:
    modified_module = getattr(process,moduleName)
    modified_module.compression_level=cms.untracked.int32(3)
    modified_module.compression_algorithm=cms.untracked.string("ZSTD")

#enable or disable parking depending on the transfer mode
try:
    if options.transferMode.endswith("_NOPARKING"):
        process.hltEnableParking.result = False
    else:
        process.hltEnableParking.result = True
except:
    pass

#unique run key used to create a separate squid cache grouping per run for lumi-based conditions
try:
    process.GlobalTag.frontierKey = cms.untracked.string(options.runUniqueKey)
    print("Set GlobalTag.frontierKey to", options.runUniqueKey)
except:
    print("Unable to set GlobalTag.frontierKey to", options.runUniqueKey)


#overrides for removed paths
process.PrescaleService.prescaleTable =  cms.VPSet(  *( 

      cms.PSet(  pathName = cms.string( "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19" ),
        #prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19" ),
        #prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0 )
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EGamma0" ),
        prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
      ),
      cms.PSet(  pathName = cms.string( "Dataset_EGamma1" ),
        prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
      ),
      #new MVA path:
      cms.PSet(  pathName = cms.string( "HLT_Diphoton_MVATest" ),
        prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )
      ),

))

process.hltDatasetEGamma = cms.EDFilter( "TriggerResultsFilter",
    usePathStatus = cms.bool( True ),
    hltResults = cms.InputTag( "" ),
    l1tResults = cms.InputTag( "" ),
    l1tIgnoreMaskAndPrescale = cms.bool( False ),
    throw = cms.bool( True ),
    triggerConditions = cms.vstring(
      'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v19',
      'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v19',
      'HLT_Diphoton_MVATest',
  )
)

try:
   os.makedirs('data/run'+options.runNumber)
except:
   pass



data = True

if data:

  #data:
  process.GlobalTag.globaltag = cms.string("132X_dataRun3_HLT_for2024TSGStudies_v1")


  #### specify data files:

  process.source.fileListMode = cms.untracked.bool( True )

  #run on 1 file
  if False:
    process.source.fileNames = cms.untracked.vstring(
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000000.raw',
    )
 
  #run on 10 files
  if True:
    process.source.fileNames = cms.untracked.vstring(
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000000.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000001.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000002.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000003.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000004.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000005.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000006.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000007.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000008.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000009.raw',
 
    )

  #use all files in LS (117 files):
  if False:
    process.source.fileNames = cms.untracked.vstring(
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000000.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000001.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000002.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000003.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000004.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000005.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000006.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000007.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000008.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000009.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000010.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000011.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000012.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000013.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000014.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000015.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000016.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000017.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000018.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000019.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000020.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000021.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000022.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000023.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000024.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000025.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000026.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000027.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000028.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000029.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000030.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000031.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000032.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000033.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000034.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000035.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000036.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000037.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000038.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000039.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000040.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000041.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000042.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000043.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000044.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000045.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000046.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000047.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000048.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000049.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000050.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000051.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000052.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000053.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000054.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000055.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000056.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000057.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000058.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000059.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000060.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000061.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000062.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000063.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000064.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000065.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000066.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000067.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000068.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000069.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000070.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000071.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000072.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000073.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000074.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000075.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000076.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000077.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000078.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000079.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000080.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000081.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000082.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000083.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000084.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000085.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000086.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000087.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000088.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000089.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000090.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000091.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000092.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000093.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000094.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000095.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000096.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000097.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000098.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000099.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000100.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000101.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000102.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000103.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000104.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000105.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000106.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000107.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000108.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000109.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000110.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000111.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000112.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000113.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000114.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000115.raw',
    'file:/eos/cms/store/group/tsg/STEAM/timing_server/samples/srv-b1b07-16-01_samples/Run370293_LS241to242_HLTPhysics/run370293/run370293_ls0241_index000116.raw'
    )



